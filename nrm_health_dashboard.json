{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Dashboard works with postgres_exporter for prometheus",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 98,
  "links": [],
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 838,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 1
          },
          "id": 836,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sql_pg_cpdumr_v2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "CPDUMR Pending Records",
          "type": "timeseries"
        }
      ],
      "title": "CPDUMR",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 687,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 0,
            "y": 2
          },
          "id": 678,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": false,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname=~\"billsummary\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "BillSummary inserts",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins|n_tup_del|n_tup_upd|n_tup_hot_upd\", relname=~\"billsummary|billdata|account|custhasproduct|accountratingsummary|cc_tbl_dat_inv_summary|accountrating|rejectevent|cc_tbl_dat_up_sortlog|cc_tbl_dat_up_filelog|cc_tbl_dat_transaction_change|cpdumanagerequest|jobhasfile|nrmjob|custproductcharge|physicalpayment|audittrail\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Inserts into BillSummary per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 8,
            "y": 2
          },
          "id": 677,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": false,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname=~\".*costedevent.*\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "costedevents inserts",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins|n_tup_del|n_tup_upd|n_tup_hot_upd\", relname=~\"billsummary|billdata|account|custhasproduct|accountratingsummary|cc_tbl_dat_inv_summary|accountrating|rejectevent|cc_tbl_dat_up_sortlog|cc_tbl_dat_up_filelog|cc_tbl_dat_transaction_change|cpdumanagerequest|jobhasfile|nrmjob|custproductcharge|physicalpayment|audittrail\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Inserts into CostedEvent per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 16,
            "y": 2
          },
          "id": 682,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "sum"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_upd\", relname=~\"billsummary\"}[2m])) / 2",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins|n_tup_del|n_tup_upd|n_tup_hot_upd\", relname=~\"billsummary|billdata|account|custhasproduct|accountratingsummary|cc_tbl_dat_inv_summary|accountrating|rejectevent|cc_tbl_dat_up_sortlog|cc_tbl_dat_up_filelog|cc_tbl_dat_transaction_change|cpdumanagerequest|jobhasfile|nrmjob|custproductcharge|physicalpayment|audittrail\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Updates into BillSummary table PER MINUTE",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 0,
            "y": 71
          },
          "id": 686,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": false,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname=~\"cc_tbl_dat_inv_summary\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "cc_tbl_dat_inv_summary inserts",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_upd\", relname=~\"cc_tbl_dat_inv_summary\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "cc_tbl_dat_inv_summary updates",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Inserts and updates into cc_tbl_dat_inv_summary (MFM, other processes) per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 8,
            "y": 71
          },
          "id": 684,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_upd\", relname=~\"formattingrequest\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "FormattingRequest updates",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname=~\"formattingrequest\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "FormattingRequest inserts",
              "range": true,
              "refId": "C",
              "useBackend": false
            }
          ],
          "title": "Inserts and updates into FormattingRequest table (BDW) per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 16,
            "y": 71
          },
          "id": 793,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "sum"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_del\", relname=~\".*costedevent.*\"}[2m])) / 2",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "costedevents deletes",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins|n_tup_del|n_tup_upd|n_tup_hot_upd\", relname=~\"billsummary|billdata|account|custhasproduct|accountratingsummary|cc_tbl_dat_inv_summary|accountrating|rejectevent|cc_tbl_dat_up_sortlog|cc_tbl_dat_up_filelog|cc_tbl_dat_transaction_change|cpdumanagerequest|jobhasfile|nrmjob|custproductcharge|physicalpayment|audittrail\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Deletes from costedevents PER MINUTE",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 8,
            "x": 0,
            "y": 81
          },
          "id": 723,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": false,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname=~\"rejectevent\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Rejectedevent inserts",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins|n_tup_del|n_tup_upd|n_tup_hot_upd\", relname=~\"billsummary|billdata|account|custhasproduct|accountratingsummary|cc_tbl_dat_inv_summary|accountrating|rejectevent|cc_tbl_dat_up_sortlog|cc_tbl_dat_up_filelog|cc_tbl_dat_transaction_change|cpdumanagerequest|jobhasfile|nrmjob|custproductcharge|physicalpayment|audittrail\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Inserts into rejectevent table per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 8,
            "x": 16,
            "y": 81
          },
          "id": 726,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": false,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname=~\"cc_tbl_dat_check_duppromo\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "cc_tbl_dat_check_duppromo inserts",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins|n_tup_del|n_tup_upd|n_tup_hot_upd\", relname=~\"billsummary|billdata|account|custhasproduct|accountratingsummary|cc_tbl_dat_inv_summary|accountrating|rejectevent|cc_tbl_dat_up_sortlog|cc_tbl_dat_up_filelog|cc_tbl_dat_transaction_change|cpdumanagerequest|jobhasfile|nrmjob|custproductcharge|physicalpayment|audittrail\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Inserts into cc_tbl_dat_check_duppromo table per second",
          "type": "timeseries"
        }
      ],
      "title": "Application throughput",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 738,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 93
          },
          "id": 739,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "sum"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by (short_uri) (\r\n  label_replace(\r\n    increase(http_server_requests_seconds_count{\r\n      container=\"ais-custom-crm-api\",\r\n      status=\"200\",\r\n      uri!~\"/|/metrics|.*health.*|.*swag.*|.*docs.*\",\r\n    }[1m]),\r\n    \"short_uri\", \"$1$2\", \"uri\", \"^(?:/api/ais-crm/v1\\\\.0/([^/?]+)|(.*))\"\r\n  )\r\n) > 0\r\n",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "editorMode": "code",
              "expr": "max by (short_uri) (\r\n  label_replace(\r\n    http_server_requests_seconds{\r\n      container=\"ais-custom-crm-api\",\r\n      quantile=\"0.9\",\r\n      uri!~\"/|/metrics|.*health.*|.*swag.*|.*docs.*\",\r\n      uri=~\"$uri\",\r\n      outcome=\"SUCCESS\"\r\n    } > 0.999,\r\n    \"short_uri\", \"$1$2\", \"uri\", \"^(?:/api/ais-crm/v1\\\\.0/([^/?]+)|(.*))\"\r\n  )\r\n)\r\n",
              "hide": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B"
            }
          ],
          "title": "API calls PER MINUTE",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 9,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 104
          },
          "id": 744,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max",
                "sum",
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(short_uri) (label_replace(http_server_requests_seconds{container=\"ais-custom-crm-api\", quantile=\"0.9\", uri!~\"/|.*health.*|.*metric.*|.*swag.*\"}, \"short_uri\", \"$1$2\", \"uri\", \"^(?:/api/ais-crm/v1\\\\.0/([^/?]+)|(.*))\") > 0)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "API latency 90%-percentile",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 0,
            "y": 116
          },
          "id": 740,
          "interval": "1m",
          "options": {
            "colWidth": 0.9,
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(uri) (increase(http_server_requests_seconds_count{container=\"ais-custom-crm-api\", status=\"500\"}[1m])) > 0",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Failed API calls â€“ status 500",
          "type": "status-history"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 116
          },
          "id": 754,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "last"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(increase(http_server_requests_seconds_count{container=\"ais-custom-crm-api\", status=\"200\"}[2m]) / 120)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "SUCCESS",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(increase(http_server_requests_seconds_count{container=\"ais-custom-crm-api\", status!=\"200\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "FAIL",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "API SUCCESS vs FAIL calls per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 12,
            "y": 125
          },
          "id": 741,
          "interval": "1m",
          "options": {
            "colWidth": 0.9,
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(uri, status) (changes(http_server_requests_seconds_count{container=\"ais-custom-crm-api\", status!~\"500|200\", uri!~\".*health.*\"}[5m])) > 0",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Failed API calls â€“ status!~\"500|200\"",
          "type": "status-history"
        }
      ],
      "title": "API calls",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 704,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": true
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Work items in the running status"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "center"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "task_definition"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 290
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 5,
            "x": 0,
            "y": 160
          },
          "id": 702,
          "interval": "1m",
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Work items in the running status"
              }
            ]
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(task_definition, ) (sql_pg_work_items_v2)",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Work items running",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Value": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "task_definition": {
                    "aggregations": [],
                    "operation": "groupby"
                  }
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "includeByName": {},
                "indexByName": {},
                "renameByName": {
                  "Value (lastNotNull)": "Work items"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Value"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 4,
            "w": 10,
            "x": 5,
            "y": 160
          },
          "id": 694,
          "interval": "1m",
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(spec_definition, spec_command) (increase(sql_pg_tasks_v2{col=\"failed_work_items\"}[1m])) > 0",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{spec_definition}} | {{spec_command}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Tasks - failed work items",
          "transformations": [
            {
              "disabled": true,
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Value": true
                },
                "includeByName": {},
                "indexByName": {},
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 13,
            "w": 9,
            "x": 15,
            "y": 160
          },
          "id": 693,
          "interval": "1m",
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(spec_definition, spec_command) (rate(sql_pg_tasks_v2{col=\"cancel_related_work_items\"}[1m])) > 0 / 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{spec_definition}} | {{spec_command}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Tasks - cancel related work items",
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Value"
                },
                "properties": []
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 10,
            "x": 5,
            "y": 164
          },
          "id": 834,
          "interval": "1m",
          "options": {
            "colWidth": 0.9,
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(spec_definition, spec_command) (increase(sql_pg_tasks_v2{col=\"failed_work_items\"}[1m])) > 0",
              "format": "time_series",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{spec_definition}} | {{spec_command}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Tasks - failed work items",
          "transformations": [
            {
              "disabled": true,
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Value": true
                },
                "includeByName": {},
                "indexByName": {},
                "renameByName": {}
              }
            }
          ],
          "type": "status-history"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 17,
            "w": 24,
            "x": 0,
            "y": 173
          },
          "id": 715,
          "interval": "1m",
          "options": {
            "alignValue": "center",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(task_definition, ) (sql_pg_work_items_v2)",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Work items running history",
          "type": "state-timeline"
        }
      ],
      "title": "NRM tasks",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 775,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 0,
            "y": 227
          },
          "id": 794,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Name",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(job_type, job_status) (sql_pg_jobs_status_v2{job_status!=\"4-completed\", job_type!=\"Unloaded Event Rating\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "{{job_type}} - {{job_status}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Number of jobs by status",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 12,
            "y": 227
          },
          "id": 777,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(job_type, job_status) (increase(sql_pg_jobs_status_v2{job_status=\"4-completed\"}[2m])) / 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "{{job_type}} - {{job_status}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Jobs processing PER MINUTE",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 64,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 2,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 240
          },
          "id": 778,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Last *",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(status) (sql_pg_cdr_count_v2)",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "SORT_INPUT CDR count",
          "type": "timeseries"
        }
      ],
      "title": "Job status",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 713,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "description": "Basic CPU info",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 50
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 4,
            "x": 0,
            "y": 6
          },
          "id": 771,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "uid": "$datasource"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "100 * (1 - avg by (node) (rate(node_cpu_seconds_total{mode=\"idle\", node=~\".*db.*\"}[1m])))",
              "format": "time_series",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "step": 240,
              "useBackend": false
            }
          ],
          "title": "Primary and replica CPU Utilization",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 255
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 4,
            "y": 6
          },
          "id": 584,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "max(sql_pg_long_running_v2{col=~\"current_subtransactions\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{user_name}} | {{pid_text}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Highest number of subtransactions per user",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 40000000
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 8,
            "y": 6
          },
          "id": 601,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(sql_pg_tables_vacuum_v2{col=\"n_dead_tup\"}) > 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Number of dead tuples",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 2000000
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 12,
            "y": 6
          },
          "id": 827,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "max(sum by(col) (sql_pg_transactions_v2{col=~\"query_duration_ms|xact_duration_ms\"}))",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Sum of all query/transaction time. Watch for sharp growth",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 300
                  }
                ]
              },
              "unit": "dtdurations"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 16,
            "y": 6
          },
          "id": 833,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "max by(server) (sql_pg_replication_v2{col=~\"flush_lag_seconds|replay_lag_seconds|write_lag_seconds\", server=~\"PROD|DR\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Replay replication lag",
          "type": "stat"
        },
        {
          "datasource": {
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 20,
            "y": 6
          },
          "id": 801,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "name",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "editorMode": "code",
              "exemplar": false,
              "expr": "label_replace(sql_pg_cluster_v2{col=\"current_xid\"}, \"status\", \"OK\", \"__name__\", \".*\")\r\nor\r\nlabel_replace(absent(sql_pg_cluster_v2{col=\"current_xid\"}) * vector(0), \"status\", \"Monitoring is down\", \"__name__\", \".*\")\r\n",
              "instant": true,
              "legendFormat": "{{status}}",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Monitoring status",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 255
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 4,
            "y": 11
          },
          "id": 712,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(sql_pg_long_running_v2{col=~\"current_subtransactions\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{user_name}} | {{pid_text}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Total number of subtransactions",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 0.5
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 8,
            "y": 11
          },
          "id": 707,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "max(sql_pg_wraparound_threshold_v2{col=\"percent_to_freeze_max_age\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Approaching aggressive autovacuum threshold",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 600000
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 12,
            "y": 11
          },
          "id": 823,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "max(sql_pg_transactions_v2{col=~\"xact_duration_ms|query_duration_ms\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Age of the oldest transaction/query",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1000
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 16,
            "y": 11
          },
          "id": 774,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "exemplar": false,
              "expr": "sql_pg_jobs_status_v2{job_status=\"2-waiting\", job_type=\"Event Rating\"} or vector(0)",
              "format": "time_series",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Rating jobs waiting",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "dark-yellow",
                "mode": "fixed"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 9,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "vector(30)"
                },
                "properties": [
                  {
                    "id": "custom.fillOpacity",
                    "value": 15
                  },
                  {
                    "id": "custom.pointSize",
                    "value": 1
                  },
                  {
                    "id": "custom.lineStyle",
                    "value": {
                      "dash": [
                        10,
                        10
                      ],
                      "fill": "dash"
                    }
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-green",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 20,
            "y": 11
          },
          "id": 837,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": false,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(http_server_requests_seconds{container=\"ais-custom-crm-api\", quantile=\"0.5\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "editorMode": "code",
              "expr": "vector(30)",
              "hide": false,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B"
            }
          ],
          "title": "API Health ",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 5000000
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 0,
            "y": 16
          },
          "id": 690,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(sql_pg_cluster_v2{col=\"current_xid\"})",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "min(sql_pg_long_running_v2{col=~\"backend_xid\"} > 0)",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Earliest backend XID",
              "range": true,
              "refId": "C",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "min(sql_pg_long_running_v2{col=~\"backend_xmin\"} > 0)",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Earliest backend_min XID",
              "range": true,
              "refId": "D",
              "useBackend": false
            },
            {
              "datasource": {
                "name": "Expression",
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "$A-$C",
              "hide": false,
              "refId": "F",
              "type": "math"
            }
          ],
          "title": "Distance to the earliest transaction",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 5000000
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 4,
            "y": 16
          },
          "id": 709,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(sql_pg_cluster_v2{col=\"current_xid\"})",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "min(sql_pg_long_running_v2{col=~\"backend_xid\"} > 0)",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Earliest backend XID",
              "range": true,
              "refId": "C",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "min(sql_pg_long_running_v2{col=~\"backend_xmin\"} > 0)",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Earliest backend_min XID",
              "range": true,
              "refId": "D",
              "useBackend": false
            },
            {
              "datasource": {
                "name": "Expression",
                "type": "__expr__",
                "uid": "__expr__"
              },
              "expression": "$A-$D",
              "hide": false,
              "refId": "F",
              "type": "math"
            }
          ],
          "title": "Distance to the earliest snapshot",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 3000
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 8,
            "y": 16
          },
          "id": 698,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(sql_pg_backends_v2)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "editorMode": "code",
              "expr": "sum(pg_stat_database_numbackends) ",
              "hide": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B"
            }
          ],
          "title": "Number of backends",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 12,
            "y": 16
          },
          "id": 799,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "percentChangeColorMode": "standard",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showPercentChange": false,
            "textMode": "auto",
            "wideLayout": true
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by() (sql_pg_x_locks_v2{granted=\"false\"}) or vector(0)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Not-granted locks",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 16,
            "y": 16
          },
          "id": 835,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname=~\".*costedevent.*\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "costedevents inserts",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins|n_tup_del|n_tup_upd|n_tup_hot_upd\", relname=~\"billsummary|billdata|account|custhasproduct|accountratingsummary|cc_tbl_dat_inv_summary|accountrating|rejectevent|cc_tbl_dat_up_sortlog|cc_tbl_dat_up_filelog|cc_tbl_dat_transaction_change|cpdumanagerequest|jobhasfile|nrmjob|custproductcharge|physicalpayment|audittrail\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Inserts into CostedEvent per second",
          "type": "timeseries"
        }
      ],
      "title": "Database alerts",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 571,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "align": "center",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": true
              },
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "left"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/.*duration/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/.*start/"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "right"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "SubXacts"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 117
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "I blocked"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 106
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "I was blocked"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 132
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "XID age"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 116
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Pid"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 91
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Query"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 420
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "State"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 101
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "User"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 563
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 805,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Xact duration"
              }
            ]
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"backend_xid_age\", query!~\".*rater.*|.*alloca.*|.*fetch.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"xact_duration_ms\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"query_duration_ms\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "C",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"granted_locks_count\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "D",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"waiting_locks_count\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "E",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"blocking_others_count\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "F",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"blocked_by_count\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "G",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"current_subtransactions\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "H",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(backend_type, pid_text, query, query_start, state, user_name, wait_event, xact_start) (sql_pg_transactions_v2{col=\"backend_xmin_age\", query!~\".*rater.*|.*alloca.*\"})",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "I",
              "useBackend": false
            }
          ],
          "title": "Current state of selected client transactions",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Value #A": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #B": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #C": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #D": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #E": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #F": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #G": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #H": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #I": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "backend_type": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "pid_text": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "query": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "query_start": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "state": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "user_name": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "wait_event": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "xact_start": {
                    "aggregations": [],
                    "operation": "groupby"
                  }
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "backend_type": true
                },
                "includeByName": {},
                "indexByName": {
                  "Value #A (lastNotNull)": 11,
                  "Value #B (lastNotNull)": 9,
                  "Value #C (lastNotNull)": 8,
                  "Value #D (lastNotNull)": 13,
                  "Value #E (lastNotNull)": 14,
                  "Value #F (lastNotNull)": 15,
                  "Value #G (lastNotNull)": 16,
                  "Value #H (lastNotNull)": 10,
                  "Value #I (lastNotNull)": 12,
                  "backend_type": 2,
                  "pid_text": 3,
                  "query": 1,
                  "query_start": 6,
                  "state": 4,
                  "user_name": 0,
                  "wait_event": 5,
                  "xact_start": 7
                },
                "renameByName": {
                  "Value #A (lastNotNull)": "XID age",
                  "Value #B (lastNotNull)": "Xact duration",
                  "Value #C (lastNotNull)": "Query duration",
                  "Value #D (lastNotNull)": "Granted locks",
                  "Value #E (lastNotNull)": "Waiting 4 locks",
                  "Value #F (lastNotNull)": "I blocked",
                  "Value #G (lastNotNull)": "I was blocked",
                  "Value #H (lastNotNull)": "SubXacts",
                  "Value #I (lastNotNull)": "Xmin age",
                  "backend_type": "BE type",
                  "pid_text": "Pid",
                  "query": "Query",
                  "query_start": "Query start",
                  "state": "State",
                  "user_name": "User",
                  "wait_event": "Event",
                  "xact_start": "Xact start"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 9,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "dtdurationms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 15,
            "w": 12,
            "x": 0,
            "y": 20
          },
          "id": 806,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(query, user_name, xact_start) (sql_pg_transactions_v2{col=\"xact_duration_ms\", query!~\".*rater.*|.*alloca.*|.*vacuum.*\"}) > 10000",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "{{query}} | {{user_name}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Transaction execution time",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 9,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "dtdurationms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 15,
            "w": 12,
            "x": 12,
            "y": 20
          },
          "id": 786,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(query, user_name, query_start) (sql_pg_transactions_v2{col=\"query_duration_ms\", query!~\".*rater.*|.*alloca.*|.*vacuum.*\"}) > 10000",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "{{query}} | {{user_name}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Query execution time",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 9,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 16,
            "w": 12,
            "x": 0,
            "y": 35
          },
          "id": 807,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(query, user_name, xact_start, col) (sql_pg_transactions_v2{col=~\"backend_xmin_age|backend_xid_age\", query!~\".*raterdataproperties.*\", user_name!=\"system user\"}) > 100000",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "{{query}} | {{user_name}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "XID age per query ",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 16,
            "w": 12,
            "x": 12,
            "y": 35
          },
          "id": 688,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": false,
              "sortBy": "Name",
              "sortDesc": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by() (sql_pg_cluster_v2{col=\"current_xid\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name, query, col, query_start, pid_text) (sql_pg_long_running_v2{col=~\"backend_xmin|backend_xid\", query!~\".*raterdata.*\", user_name!=\"system user\"}) > 0",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{query}} | {{user_name}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Current XID and backend xmin per query per query_start",
          "type": "timeseries"
        }
      ],
      "title": "Top long-running transactions",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 782,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 827
          },
          "id": 710,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "sum"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(query, query_start) (sql_pg_long_running_v2{col=~\"current_subtransactions\"}) > 0",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{query}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Subtransactions per query execution",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 256
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "query"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 298
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 22,
            "w": 5,
            "x": 0,
            "y": 1078
          },
          "id": 783,
          "interval": "1m",
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Value (lastNotNull)"
              }
            ]
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "max by(query, pid_text) (sql_pg_long_running_v2{col=~\"current_subtransactions\"}) > 0",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Subtransactions right now (max per query|pid)",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Value": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "query": {
                    "aggregations": [],
                    "operation": "groupby"
                  }
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 255
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Value"
                },
                "properties": []
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 19,
            "x": 5,
            "y": 1078
          },
          "id": 781,
          "interval": "1m",
          "options": {
            "colWidth": 0.9,
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(query) (sql_pg_long_running_v2{col=~\"current_subtransactions\"}) > 0",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "avg by(query) (sql_pg_long_running_v2{col=~\"current_subtransactions\"}) > 0",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "label_replace(\r\n  max by (query) (\r\n    sql_pg_transactions_v2{col=~\"current_subtransactions\"}\r\n  ),\r\n  \"legend\", \"$1\", \"query\", \"^(.{1,100}).*$\"\r\n) > 0\r\n",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{legend}}",
              "range": true,
              "refId": "C",
              "useBackend": false
            }
          ],
          "title": "Subtransactions per query (red means 256+)",
          "type": "status-history"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 255
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 19,
            "x": 5,
            "y": 1089
          },
          "id": 792,
          "interval": "1m",
          "options": {
            "colWidth": 0.9,
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "rowHeight": 0.9,
            "showValue": "always",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name, ) (sql_pg_long_running_v2{col=~\"current_subtransactions\"}) > 0",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "max by(user_name) (sql_pg_transactions_v2{col=~\"current_subtransactions\"}) > 0",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "label_replace(\r\n  max by (query) (\r\n    sql_pg_long_running_v2{col=~\"current_subtransactions\"}\r\n  ),\r\n  \"legend\", \"$1\", \"query\", \"^(.{1,100}).*$\"\r\n) > 0\r\n",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{legend}}",
              "range": true,
              "refId": "C",
              "useBackend": false
            }
          ],
          "title": "Subtransactions per user (red means 256+)",
          "transformations": [
            {
              "id": "organize",
              "options": {}
            }
          ],
          "type": "status-history"
        }
      ],
      "title": "Subtransactions",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 820,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Query"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 628
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 290
          },
          "id": 821,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": true
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "tuple_details"
              }
            ]
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "exemplar": false,
              "expr": "sum by(granted, lock_type, mode, pid, query, user_name, table_name, tuple_details, tuple_id) (sql_pg_x_locks_v2)",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Current locks",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "Value": false
                },
                "includeByName": {},
                "indexByName": {
                  "Time": 0,
                  "Value": 10,
                  "granted": 6,
                  "lock_type": 4,
                  "mode": 5,
                  "pid": 3,
                  "query": 2,
                  "table_name": 7,
                  "tuple_details": 8,
                  "tuple_id": 9,
                  "user_name": 1
                },
                "renameByName": {
                  "lock_type": "",
                  "pid": "pid",
                  "query": "Query",
                  "user_name": "User"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "aaf_component",
                      "aaf_historical_password",
                      "aaf_perm_class_map",
                      "aaf_property",
                      "aaf_resource_perm",
                      "aaf_role",
                      "aaf_role_member",
                      "aaf_role_resource_perm",
                      "aaf_user",
                      "aaf_user_attribute",
                      "aaf_user_member",
                      "abstractplugin",
                      "abstractplugin_key_name",
                      "abstractplugin_name_key",
                      "abstractplugininput",
                      "abstractpluginoutput",
                      "accactionthreshold",
                      "accactionthresholdset",
                      "accactthreset_key_name",
                      "accactthreset_name_key",
                      "accessgroup",
                      "accessgroupmember",
                      "account",
                      "accountdetails",
                      "accountingperiod",
                      "accountpayment",
                      "accountpayment_key_name",
                      "accountpayment_name_key",
                      "accountrating",
                      "accountratingsummary",
                      "action",
                      "action_key_name",
                      "action_name_key",
                      "actionparamdata",
                      "actionparamdata_key_name",
                      "actionparamdata_name_key",
                      "actionparamvalue",
                      "actiontype",
                      "actiontype_key_name",
                      "actiontype_name_key",
                      "actiontypeparam",
                      "activityrule",
                      "activityrule_key_name",
                      "activityrule_name_key",
                      "address",
                      "address_key_name",
                      "address_name_key",
                      "addressformat",
                      "addressformat_key_name",
                      "addressformat_name_key",
                      "addressformatitem",
                      "adjtypeattributes_key_name",
                      "adjtypeattributes_name_key",
                      "adjustmenttype",
                      "adjustmenttype_key_name",
                      "adjustmenttype_name_key",
                      "adjustmenttypeattributes",
                      "aegcataloguechange",
                      "agedependentprice",
                      "agedependentprice_key_name",
                      "agedependentprice_name_key",
                      "agedependentpriceband",
                      "agedeppricev2_key_name",
                      "agedeppricev2_name_key",
                      "allocationtobill",
                      "amfattributetype",
                      "amfattrtypetotable",
                      "amfcluster",
                      "amfclustertohost",
                      "amfclustertype",
                      "amfcomponent",
                      "amfcomponentargument",
                      "amfcomponenttype",
                      "amfcomponenttypeargument",
                      "amfcomptypetosutype",
                      "amfcsiattribute",
                      "amfservicegroup",
                      "amfservicegroupargument",
                      "amfservicegrouptype",
                      "amfserviceunit",
                      "amfserviceunittype",
                      "amfsgtypetoclustertype",
                      "amftable",
                      "announcementdef",
                      "announcementdef_key_name",
                      "announcementdef_name_key",
                      "async_operation_catsync",
                      "attributeset",
                      "attributeset_key_name",
                      "attributeset_name_key",
                      "attributesetattribute",
                      "attributesetnamespace",
                      "attributetype",
                      "attributetype_key_name",
                      "attributetype_name_key",
                      "attributevaluelist",
                      "attronlinereamapping",
                      "attrsetattribute_key_name",
                      "attrsetattribute_name_key",
                      "attrsetnamespace_key_name",
                      "attrsetnamespace_name_key",
                      "audittrail",
                      "audittransaction",
                      "audittransactionaction",
                      "audittransactionclass",
                      "balancemodifact_key_name",
                      "balancemodifact_name_key",
                      "balancemodificationaction",
                      "bandingmodel",
                      "bandingmodel_key_name",
                      "bandingmodel_name_key",
                      "bandingmodelv2_key_name",
                      "bandingmodelv2_name_key",
                      "basetimerate",
                      "billhaslatefeeschedule",
                      "billsummary",
                      "cancelbillcustpc",
                      "catalogueaudit",
                      "cc_tbl_dat_inv_bm_rerun_hist",
                      "cc_tbl_dat_late_cdr",
                      "cc_tbl_dat_oml_message",
                      "cc_tbl_dat_online_tr",
                      "cc_tbl_dat_pc_add_info",
                      "cc_tbl_dat_pc_excess_payment",
                      "cc_tbl_dat_transaction_change",
                      "cc_tbl_dat_up_filelog",
                      "cc_tbl_dat_up_filelog_fail",
                      "cc_tbl_dat_up_sortlog",
                      "cc_tbl_dat_usage_file_ind",
                      "cc_tbl_dat_variables",
                      "chargesegment",
                      "chargesegmentv2_key_name",
                      "chargesegmentv2_name_key",
                      "compositepredicate",
                      "contactdetails",
                      "costband",
                      "costbandv2_key_name",
                      "costbandv2_name_key",
                      "costcode",
                      "cpdumanagerequest",
                      "custeventsource",
                      "custfilterelement",
                      "custhasproduct",
                      "custhasproduct_key_name",
                      "custhasproduct_name_key",
                      "custoverrideprice",
                      "custoverriderate",
                      "custprodaddonratedetails",
                      "custprodextendedattrdet",
                      "custprodinvoicediscusage",
                      "custprodratingdiscount",
                      "custproductaddress",
                      "custproductattrdetails",
                      "custproductcharge",
                      "custproductdetails",
                      "custproducteventtypes",
                      "custproductstatus",
                      "custproducttariffdetails",
                      "debtagerequest",
                      "eventsourceusage",
                      "filegrouplog",
                      "jobhasfile",
                      "krai_account_nrm_all",
                      "managedfile",
                      "nrmjob",
                      "ongoingtransactions",
                      "paysettlementaction",
                      "physicalpayment",
                      "physicalpayment_key_name",
                      "physicalpayment_name_key",
                      "ratingcatalogue",
                      "rdbcostedeventv1_250920000_250921000",
                      "rdbcostedeventv1_250924000_250925000",
                      "rdbcostedeventv1_250928000_250929000",
                      "rdbcostedeventv1_251001000_251002000",
                      "rdbcostedeventv1_251004000_251005000",
                      "rdbcostedeventv1_251008000_251009000",
                      "rdbcostedeventv1_251012000_251013000",
                      "rdbcostedeventv1_251016000_251017000",
                      "reraterequest",
                      "tmppaymentallocation",
                      "vhbandmap"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": []
              }
            ]
          },
          "gridPos": {
            "h": 22,
            "w": 12,
            "x": 0,
            "y": 300
          },
          "id": 815,
          "interval": "1m",
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "editorMode": "code",
              "expr": "sum by(granted, lock_type, mode, pid, query, user_name, table_name, tuple_details, tuple_id) (sql_pg_x_locks_v2)",
              "hide": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(table_name) (sql_pg_x_locks_v2)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Table locks",
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "aaf_component",
                      "aaf_historical_password",
                      "aaf_perm_class_map",
                      "aaf_property",
                      "aaf_resource_perm",
                      "aaf_role",
                      "aaf_role_member",
                      "aaf_role_resource_perm",
                      "aaf_user",
                      "aaf_user_attribute",
                      "aaf_user_member",
                      "abstractplugin",
                      "abstractplugin_key_name",
                      "abstractplugin_name_key",
                      "abstractplugininput",
                      "abstractpluginoutput",
                      "accactionthreshold",
                      "accactionthresholdset",
                      "accactthreset_key_name",
                      "accactthreset_name_key",
                      "accessgroup",
                      "accessgroupmember",
                      "account",
                      "accountdetails",
                      "accountingperiod",
                      "accountpayment",
                      "accountpayment_key_name",
                      "accountpayment_name_key",
                      "accountrating",
                      "accountratingsummary",
                      "action",
                      "action_key_name",
                      "action_name_key",
                      "actionparamdata",
                      "actionparamdata_key_name",
                      "actionparamdata_name_key",
                      "actionparamvalue",
                      "actiontype",
                      "actiontype_key_name",
                      "actiontype_name_key",
                      "actiontypeparam",
                      "activityrule",
                      "activityrule_key_name",
                      "activityrule_name_key",
                      "address",
                      "address_key_name",
                      "address_name_key",
                      "addressformat",
                      "addressformat_key_name",
                      "addressformat_name_key",
                      "addressformatitem",
                      "adjtypeattributes_key_name",
                      "adjtypeattributes_name_key",
                      "adjustmenttype",
                      "adjustmenttype_key_name",
                      "adjustmenttype_name_key",
                      "adjustmenttypeattributes",
                      "aegcataloguechange",
                      "agedependentprice",
                      "agedependentprice_key_name",
                      "agedependentprice_name_key",
                      "agedependentpriceband",
                      "agedeppricev2_key_name",
                      "agedeppricev2_name_key",
                      "allocationtobill",
                      "amfattributetype",
                      "amfattrtypetotable",
                      "amfcluster",
                      "amfclustertohost",
                      "amfclustertype",
                      "amfcomponent",
                      "amfcomponentargument",
                      "amfcomponenttype",
                      "amfcomponenttypeargument",
                      "amfcomptypetosutype",
                      "amfcsiattribute",
                      "amfservicegroup",
                      "amfservicegroupargument",
                      "amfservicegrouptype",
                      "amfserviceunit",
                      "amfserviceunittype",
                      "amfsgtypetoclustertype",
                      "amftable",
                      "announcementdef",
                      "announcementdef_key_name",
                      "announcementdef_name_key",
                      "async_operation_catsync",
                      "attributeset",
                      "attributeset_key_name",
                      "attributeset_name_key",
                      "attributesetattribute",
                      "attributesetnamespace",
                      "attributetype",
                      "attributetype_key_name",
                      "attributetype_name_key",
                      "attributevaluelist",
                      "attronlinereamapping",
                      "attrsetattribute_key_name",
                      "attrsetattribute_name_key",
                      "attrsetnamespace_key_name",
                      "attrsetnamespace_name_key",
                      "audittrail",
                      "audittransaction",
                      "audittransactionaction",
                      "audittransactionclass",
                      "balancemodifact_key_name",
                      "balancemodifact_name_key",
                      "balancemodificationaction",
                      "bandingmodel",
                      "bandingmodel_key_name",
                      "bandingmodel_name_key",
                      "bandingmodelv2_key_name",
                      "bandingmodelv2_name_key",
                      "basetimerate",
                      "billhaslatefeeschedule",
                      "billsummary",
                      "cancelbillcustpc",
                      "catalogueaudit",
                      "cc_tbl_dat_inv_bm_rerun_hist",
                      "cc_tbl_dat_late_cdr",
                      "cc_tbl_dat_oml_message",
                      "cc_tbl_dat_online_tr",
                      "cc_tbl_dat_pc_add_info",
                      "cc_tbl_dat_pc_excess_payment",
                      "cc_tbl_dat_transaction_change",
                      "cc_tbl_dat_up_filelog",
                      "cc_tbl_dat_up_filelog_fail",
                      "cc_tbl_dat_up_sortlog",
                      "cc_tbl_dat_usage_file_ind",
                      "cc_tbl_dat_variables",
                      "chargesegment",
                      "chargesegmentv2_key_name",
                      "chargesegmentv2_name_key",
                      "compositepredicate",
                      "contactdetails",
                      "costband",
                      "costbandv2_key_name",
                      "costbandv2_name_key",
                      "costcode",
                      "cpdumanagerequest",
                      "custeventsource",
                      "custfilterelement",
                      "custhasproduct",
                      "custhasproduct_key_name",
                      "custhasproduct_name_key",
                      "custoverrideprice",
                      "custoverriderate",
                      "custprodaddonratedetails",
                      "custprodextendedattrdet",
                      "custprodinvoicediscusage",
                      "custprodratingdiscount",
                      "custproductaddress",
                      "custproductattrdetails",
                      "custproductcharge",
                      "custproductdetails",
                      "custproducteventtypes",
                      "custproductstatus",
                      "custproducttariffdetails",
                      "debtagerequest",
                      "eventsourceusage",
                      "filegrouplog",
                      "jobhasfile",
                      "krai_account_nrm_all",
                      "managedfile",
                      "nrmjob",
                      "ongoingtransactions",
                      "paysettlementaction",
                      "physicalpayment",
                      "physicalpayment_key_name",
                      "physicalpayment_name_key",
                      "ratingcatalogue",
                      "rdbcostedeventv1_250920000_250921000",
                      "rdbcostedeventv1_250924000_250925000",
                      "rdbcostedeventv1_250928000_250929000",
                      "rdbcostedeventv1_251001000_251002000",
                      "rdbcostedeventv1_251004000_251005000",
                      "rdbcostedeventv1_251008000_251009000",
                      "rdbcostedeventv1_251012000_251013000",
                      "rdbcostedeventv1_251016000_251017000",
                      "reraterequest",
                      "tmppaymentallocation",
                      "vhbandmap"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": []
              }
            ]
          },
          "gridPos": {
            "h": 22,
            "w": 12,
            "x": 12,
            "y": 300
          },
          "id": 814,
          "interval": "1m",
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "editorMode": "code",
              "expr": "sum by(granted, lock_type, mode, pid, query, user_name, table_name, tuple_details, tuple_id) (sql_pg_x_locks_v2)",
              "hide": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name) (sql_pg_x_locks_v2)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "User locks",
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 81,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "aaf_component",
                      "aaf_historical_password",
                      "aaf_perm_class_map",
                      "aaf_property",
                      "aaf_resource_perm",
                      "aaf_role",
                      "aaf_role_member",
                      "aaf_role_resource_perm",
                      "aaf_user",
                      "aaf_user_attribute",
                      "aaf_user_member",
                      "abstractplugin",
                      "abstractplugin_key_name",
                      "abstractplugin_name_key",
                      "abstractplugininput",
                      "abstractpluginoutput",
                      "accactionthreshold",
                      "accactionthresholdset",
                      "accactthreset_key_name",
                      "accactthreset_name_key",
                      "accessgroup",
                      "accessgroupmember",
                      "account",
                      "accountdetails",
                      "accountingperiod",
                      "accountpayment",
                      "accountpayment_key_name",
                      "accountpayment_name_key",
                      "accountrating",
                      "accountratingsummary",
                      "action",
                      "action_key_name",
                      "action_name_key",
                      "actionparamdata",
                      "actionparamdata_key_name",
                      "actionparamdata_name_key",
                      "actionparamvalue",
                      "actiontype",
                      "actiontype_key_name",
                      "actiontype_name_key",
                      "actiontypeparam",
                      "activityrule",
                      "activityrule_key_name",
                      "activityrule_name_key",
                      "address",
                      "address_key_name",
                      "address_name_key",
                      "addressformat",
                      "addressformat_key_name",
                      "addressformat_name_key",
                      "addressformatitem",
                      "adjtypeattributes_key_name",
                      "adjtypeattributes_name_key",
                      "adjustmenttype",
                      "adjustmenttype_key_name",
                      "adjustmenttype_name_key",
                      "adjustmenttypeattributes",
                      "aegcataloguechange",
                      "agedependentprice",
                      "agedependentprice_key_name",
                      "agedependentprice_name_key",
                      "agedependentpriceband",
                      "agedeppricev2_key_name",
                      "agedeppricev2_name_key",
                      "allocationtobill",
                      "amfattributetype",
                      "amfattrtypetotable",
                      "amfcluster",
                      "amfclustertohost",
                      "amfclustertype",
                      "amfcomponent",
                      "amfcomponentargument",
                      "amfcomponenttype",
                      "amfcomponenttypeargument",
                      "amfcomptypetosutype",
                      "amfcsiattribute",
                      "amfservicegroup",
                      "amfservicegroupargument",
                      "amfservicegrouptype",
                      "amfserviceunit",
                      "amfserviceunittype",
                      "amfsgtypetoclustertype",
                      "amftable",
                      "announcementdef",
                      "announcementdef_key_name",
                      "announcementdef_name_key",
                      "async_operation_catsync",
                      "attributeset",
                      "attributeset_key_name",
                      "attributeset_name_key",
                      "attributesetattribute",
                      "attributesetnamespace",
                      "attributetype",
                      "attributetype_key_name",
                      "attributetype_name_key",
                      "attributevaluelist",
                      "attronlinereamapping",
                      "attrsetattribute_key_name",
                      "attrsetattribute_name_key",
                      "attrsetnamespace_key_name",
                      "attrsetnamespace_name_key",
                      "audittrail",
                      "audittransaction",
                      "audittransactionaction",
                      "audittransactionclass",
                      "balancemodifact_key_name",
                      "balancemodifact_name_key",
                      "balancemodificationaction",
                      "bandingmodel",
                      "bandingmodel_key_name",
                      "bandingmodel_name_key",
                      "bandingmodelv2_key_name",
                      "bandingmodelv2_name_key",
                      "basetimerate",
                      "billhaslatefeeschedule",
                      "billsummary",
                      "cancelbillcustpc",
                      "catalogueaudit",
                      "cc_tbl_dat_inv_bm_rerun_hist",
                      "cc_tbl_dat_late_cdr",
                      "cc_tbl_dat_oml_message",
                      "cc_tbl_dat_online_tr",
                      "cc_tbl_dat_pc_add_info",
                      "cc_tbl_dat_pc_excess_payment",
                      "cc_tbl_dat_transaction_change",
                      "cc_tbl_dat_up_filelog",
                      "cc_tbl_dat_up_filelog_fail",
                      "cc_tbl_dat_up_sortlog",
                      "cc_tbl_dat_usage_file_ind",
                      "cc_tbl_dat_variables",
                      "chargesegment",
                      "chargesegmentv2_key_name",
                      "chargesegmentv2_name_key",
                      "compositepredicate",
                      "contactdetails",
                      "costband",
                      "costbandv2_key_name",
                      "costbandv2_name_key",
                      "costcode",
                      "cpdumanagerequest",
                      "custeventsource",
                      "custfilterelement",
                      "custhasproduct",
                      "custhasproduct_key_name",
                      "custhasproduct_name_key",
                      "custoverrideprice",
                      "custoverriderate",
                      "custprodaddonratedetails",
                      "custprodextendedattrdet",
                      "custprodinvoicediscusage",
                      "custprodratingdiscount",
                      "custproductaddress",
                      "custproductattrdetails",
                      "custproductcharge",
                      "custproductdetails",
                      "custproducteventtypes",
                      "custproductstatus",
                      "custproducttariffdetails",
                      "debtagerequest",
                      "eventsourceusage",
                      "filegrouplog",
                      "jobhasfile",
                      "krai_account_nrm_all",
                      "managedfile",
                      "nrmjob",
                      "ongoingtransactions",
                      "paysettlementaction",
                      "physicalpayment",
                      "physicalpayment_key_name",
                      "physicalpayment_name_key",
                      "ratingcatalogue",
                      "rdbcostedeventv1_250920000_250921000",
                      "rdbcostedeventv1_250924000_250925000",
                      "rdbcostedeventv1_250928000_250929000",
                      "rdbcostedeventv1_251001000_251002000",
                      "rdbcostedeventv1_251004000_251005000",
                      "rdbcostedeventv1_251008000_251009000",
                      "rdbcostedeventv1_251012000_251013000",
                      "rdbcostedeventv1_251016000_251017000",
                      "reraterequest",
                      "tmppaymentallocation",
                      "vhbandmap"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": []
              }
            ]
          },
          "gridPos": {
            "h": 22,
            "w": 24,
            "x": 0,
            "y": 322
          },
          "id": 818,
          "interval": "1m",
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "editorMode": "code",
              "expr": "sum by(granted, lock_type, mode, pid, query, user_name, table_name, tuple_details, tuple_id) (sql_pg_x_locks_v2)",
              "hide": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by (query) (\r\n  label_replace(\r\n    sql_pg_x_locks_v2,\r\n    \"query\",\r\n    \"$1\",\r\n    \"query\",\r\n    \"^(.{100}).*\"\r\n  )\r\n)\r\n",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Query locks",
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "aaf_component",
                      "aaf_historical_password",
                      "aaf_perm_class_map",
                      "aaf_property",
                      "aaf_resource_perm",
                      "aaf_role",
                      "aaf_role_member",
                      "aaf_role_resource_perm",
                      "aaf_user",
                      "aaf_user_attribute",
                      "aaf_user_member",
                      "abstractplugin",
                      "abstractplugin_key_name",
                      "abstractplugin_name_key",
                      "abstractplugininput",
                      "abstractpluginoutput",
                      "accactionthreshold",
                      "accactionthresholdset",
                      "accactthreset_key_name",
                      "accactthreset_name_key",
                      "accessgroup",
                      "accessgroupmember",
                      "account",
                      "accountdetails",
                      "accountingperiod",
                      "accountpayment",
                      "accountpayment_key_name",
                      "accountpayment_name_key",
                      "accountrating",
                      "accountratingsummary",
                      "action",
                      "action_key_name",
                      "action_name_key",
                      "actionparamdata",
                      "actionparamdata_key_name",
                      "actionparamdata_name_key",
                      "actionparamvalue",
                      "actiontype",
                      "actiontype_key_name",
                      "actiontype_name_key",
                      "actiontypeparam",
                      "activityrule",
                      "activityrule_key_name",
                      "activityrule_name_key",
                      "address",
                      "address_key_name",
                      "address_name_key",
                      "addressformat",
                      "addressformat_key_name",
                      "addressformat_name_key",
                      "addressformatitem",
                      "adjtypeattributes_key_name",
                      "adjtypeattributes_name_key",
                      "adjustmenttype",
                      "adjustmenttype_key_name",
                      "adjustmenttype_name_key",
                      "adjustmenttypeattributes",
                      "aegcataloguechange",
                      "agedependentprice",
                      "agedependentprice_key_name",
                      "agedependentprice_name_key",
                      "agedependentpriceband",
                      "agedeppricev2_key_name",
                      "agedeppricev2_name_key",
                      "allocationtobill",
                      "amfattributetype",
                      "amfattrtypetotable",
                      "amfcluster",
                      "amfclustertohost",
                      "amfclustertype",
                      "amfcomponent",
                      "amfcomponentargument",
                      "amfcomponenttype",
                      "amfcomponenttypeargument",
                      "amfcomptypetosutype",
                      "amfcsiattribute",
                      "amfservicegroup",
                      "amfservicegroupargument",
                      "amfservicegrouptype",
                      "amfserviceunit",
                      "amfserviceunittype",
                      "amfsgtypetoclustertype",
                      "amftable",
                      "announcementdef",
                      "announcementdef_key_name",
                      "announcementdef_name_key",
                      "async_operation_catsync",
                      "attributeset",
                      "attributeset_key_name",
                      "attributeset_name_key",
                      "attributesetattribute",
                      "attributesetnamespace",
                      "attributetype",
                      "attributetype_key_name",
                      "attributetype_name_key",
                      "attributevaluelist",
                      "attronlinereamapping",
                      "attrsetattribute_key_name",
                      "attrsetattribute_name_key",
                      "attrsetnamespace_key_name",
                      "attrsetnamespace_name_key",
                      "audittrail",
                      "audittransaction",
                      "audittransactionaction",
                      "audittransactionclass",
                      "balancemodifact_key_name",
                      "balancemodifact_name_key",
                      "balancemodificationaction",
                      "bandingmodel",
                      "bandingmodel_key_name",
                      "bandingmodel_name_key",
                      "bandingmodelv2_key_name",
                      "bandingmodelv2_name_key",
                      "basetimerate",
                      "billhaslatefeeschedule",
                      "billsummary",
                      "cancelbillcustpc",
                      "catalogueaudit",
                      "cc_tbl_dat_inv_bm_rerun_hist",
                      "cc_tbl_dat_late_cdr",
                      "cc_tbl_dat_oml_message",
                      "cc_tbl_dat_online_tr",
                      "cc_tbl_dat_pc_add_info",
                      "cc_tbl_dat_pc_excess_payment",
                      "cc_tbl_dat_transaction_change",
                      "cc_tbl_dat_up_filelog",
                      "cc_tbl_dat_up_filelog_fail",
                      "cc_tbl_dat_up_sortlog",
                      "cc_tbl_dat_usage_file_ind",
                      "cc_tbl_dat_variables",
                      "chargesegment",
                      "chargesegmentv2_key_name",
                      "chargesegmentv2_name_key",
                      "compositepredicate",
                      "contactdetails",
                      "costband",
                      "costbandv2_key_name",
                      "costbandv2_name_key",
                      "costcode",
                      "cpdumanagerequest",
                      "custeventsource",
                      "custfilterelement",
                      "custhasproduct",
                      "custhasproduct_key_name",
                      "custhasproduct_name_key",
                      "custoverrideprice",
                      "custoverriderate",
                      "custprodaddonratedetails",
                      "custprodextendedattrdet",
                      "custprodinvoicediscusage",
                      "custprodratingdiscount",
                      "custproductaddress",
                      "custproductattrdetails",
                      "custproductcharge",
                      "custproductdetails",
                      "custproducteventtypes",
                      "custproductstatus",
                      "custproducttariffdetails",
                      "debtagerequest",
                      "eventsourceusage",
                      "filegrouplog",
                      "jobhasfile",
                      "krai_account_nrm_all",
                      "managedfile",
                      "nrmjob",
                      "ongoingtransactions",
                      "paysettlementaction",
                      "physicalpayment",
                      "physicalpayment_key_name",
                      "physicalpayment_name_key",
                      "ratingcatalogue",
                      "rdbcostedeventv1_250920000_250921000",
                      "rdbcostedeventv1_250924000_250925000",
                      "rdbcostedeventv1_250928000_250929000",
                      "rdbcostedeventv1_251001000_251002000",
                      "rdbcostedeventv1_251004000_251005000",
                      "rdbcostedeventv1_251008000_251009000",
                      "rdbcostedeventv1_251012000_251013000",
                      "rdbcostedeventv1_251016000_251017000",
                      "reraterequest",
                      "tmppaymentallocation",
                      "vhbandmap"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": []
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 344
          },
          "id": 819,
          "interval": "1m",
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "editorMode": "code",
              "expr": "sum by(granted, lock_type, mode, pid, query, user_name, table_name, tuple_details, tuple_id) (sql_pg_x_locks_v2)",
              "hide": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(tuple_details, table_name) (sql_pg_x_locks_v2{tuple_details!=\"no details\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "{{table_name}} ~ {{tuple_details}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Tuple locks",
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 344
          },
          "id": 575,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, database_name) (increase(sql_pg_dbstats_v2{col=~\"deadlocks|checksum_failures\", database_name=\"aisprod-bg2\"}[2m])) / 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Deadlocks and checksum failures PER MINUTE",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Query"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 628
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pid"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 92
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "table_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 116
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 134
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 187
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 362
          },
          "id": 816,
          "interval": "1m",
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Time"
              }
            ]
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "exemplar": false,
              "expr": "sum by(granted, lock_type, mode, pid, query, user_name, table_name, tuple_details, tuple_id) (sql_pg_x_locks_v2{user_name!~\".*costed.*\", granted=\"false\"})",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Not-granted locks history (remove filter in the query to include all locks)",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "granted": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "lock_type": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "mode": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "pid": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "query": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "table_name": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "tuple_details": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "tuple_id": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "user_name": {
                    "aggregations": [],
                    "operation": "groupby"
                  }
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": false,
                  "Value": true,
                  "granted": true,
                  "tuple_id": true
                },
                "includeByName": {},
                "indexByName": {
                  "Time": 0,
                  "Value": 10,
                  "granted": 6,
                  "lock_type": 4,
                  "mode": 5,
                  "pid": 3,
                  "query": 2,
                  "table_name": 7,
                  "tuple_details": 8,
                  "tuple_id": 9,
                  "user_name": 1
                },
                "renameByName": {
                  "lock_type": "",
                  "pid": "pid",
                  "query": "Query",
                  "user_name": "User"
                }
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "Locks",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 607,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 0.8
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 291
          },
          "id": 609,
          "interval": "1m",
          "options": {
            "colWidth": 0.9,
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(relname) (increase(sql_pg_tables_v2{col=\"autovacuum_count\"}[1m])) > 0",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{label_name}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Autovacuum timeline",
          "type": "status-history"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": 600000,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 302
          },
          "id": 832,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, relname) (sql_pg_vacuum_progress_v2{col=~\"scan_completion_ratio|vacuum_completion_ratio|scan_completion_ratio_2|vacuum_completion_ratio_4\"}) > 0",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "{{relname}} - {{col}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Vacuum Progress",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 314
          },
          "id": 839,
          "interval": "1m",
          "options": {
            "colWidth": 0.9,
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, relname) (sql_pg_vacuum_progress_v2{col=\"phase_state\"}) > 0",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "{{relname}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Vacuum Progress",
          "type": "status-history"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 4,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 326
          },
          "id": 706,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "last"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Last",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(relname) (sql_pg_tables_vacuum_v2{col=\"n_dead_tup\"}) > 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Number of dead tuples",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 4,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 337
          },
          "id": 616,
          "options": {
            "legend": {
              "calcs": [
                "last",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Last",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(relname) (sql_pg_tables_vacuum_v2{col=\"dead_tuple_vacuum_ratio\"}) > 0",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Dead tuples as percentage of vacuum triggering threshold",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 4,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 349
          },
          "id": 602,
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Last *",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(relname) (sql_pg_tables_vacuum_v2{col=\"inserts_vacuum_ratio\", relname!~\".*tmp.*\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Inserts as percentage of vacuum triggering threshold",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 359
          },
          "id": 618,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Last *",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(table_name) (sql_pg_wraparound_threshold_v2{col=\"percent_to_freeze_max_age\", table_name!~\"pg_temp.*\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Approaching aggressive autovacuum threshold",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 0.8
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 371
          },
          "id": 608,
          "interval": "1m",
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "mergeValues": false,
            "rowHeight": 0.9,
            "showValue": "never",
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(relname) (rate(sql_pg_tables_v2{col=\"vacuum_count\"}[1m])) > 0",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{label_name}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Vacuum timeline",
          "type": "state-timeline"
        }
      ],
      "title": "Vacuum ",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 790,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "center",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": true
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "pid_text"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 95
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "query_start"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 280
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "state"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 111
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "wait_event"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 133
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "xact_start"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 312
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "pid_text"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "string"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/.*duration/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.align",
                    "value": "left"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/.*start/"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "dateTimeAsSystem"
                  },
                  {
                    "id": "custom.align",
                    "value": "right"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "query"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 268
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Query"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 344
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 26,
            "w": 24,
            "x": 0,
            "y": 21396
          },
          "id": 812,
          "interval": "1m",
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Query start"
              }
            ]
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name,xact_start) (max_over_time(sql_pg_transactions_v2{col=\"query_duration_ms\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"xact_duration_ms\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"current_subtransactions\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "C",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"backend_xid_age\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "D",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"backend_xmin_age\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "E",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"blocked_by_count\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "F",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"blocking_others_count\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "G",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"granted_locks_count\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "H",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(backend_type, pid_text, query, query_start, user_name, xact_start) (max_over_time(sql_pg_transactions_v2{col=\"waiting_locks_count\", query!~\".*vacuum.*|.*rater.*|.*alloca.*\"}[$__range]))",
              "format": "table",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "I",
              "useBackend": false
            }
          ],
          "title": "Transaction log, does not reflect current state",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Value": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #A": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #B": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #C": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #D": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #E": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #F": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #G": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #H": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "Value #I": {
                    "aggregations": [
                      "lastNotNull"
                    ],
                    "operation": "aggregate"
                  },
                  "backend_type": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "pid_text": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "query": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "query_start": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "state": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "user_name": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "wait_event": {
                    "aggregations": [],
                    "operation": "groupby"
                  },
                  "xact_start": {
                    "aggregations": [],
                    "operation": "groupby"
                  }
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "backend_type": true
                },
                "includeByName": {},
                "indexByName": {
                  "Value #A (lastNotNull)": 6,
                  "Value #B (lastNotNull)": 7,
                  "backend_type": 0,
                  "pid_text": 2,
                  "query": 3,
                  "query_start": 4,
                  "user_name": 1,
                  "xact_start": 5
                },
                "renameByName": {
                  "Value #A (lastNotNull)": "Query duration",
                  "Value #B (lastNotNull)": "Xact duration",
                  "Value #C (lastNotNull)": "Subtrans",
                  "Value #D (lastNotNull)": "XID age",
                  "Value #E (lastNotNull)": "Xmin age",
                  "Value #F (lastNotNull)": "I was blocked",
                  "Value #G (lastNotNull)": "I blocked",
                  "Value #H (lastNotNull)": "Granted",
                  "Value #I (lastNotNull)": "Waiting",
                  "backend_type": "",
                  "pid_text": "Pid",
                  "query": "Query",
                  "query_start": "Query start",
                  "user_name": "User",
                  "xact_start": "Xact start"
                }
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "Transaction log",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 676,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 31318
          },
          "id": 679,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "sum"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_ins\", relname!~\".*tmp.*\"}[2m])) / 120 > 0",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Insert operations",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": true,
                "axisCenteredZero": false,
                "axisColorMode": "series",
                "axisGridShow": false,
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "log": 10,
                  "type": "log"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 31564
          },
          "id": 680,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "sum"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Total",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "topk(100, sum by(col, relname) (increase(sql_pg_tables_v2{col=~\"n_tup_del|n_tup_upd|n_tup_ins\", relname!~\"tmp.*\"}[2m])) / 2)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{relname}} â€“ {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "All table operations ",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 31578
          },
          "id": 826,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "sum"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Total",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(relname, col) (increase(sql_pg_tables_v2{col=~\"seq_scan\"}[1m])) > 0",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "{{relname}} | {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(relname, col) (increase(sql_pg_tables_v2{col=~\"idx_scan\"}[1m])) > 0",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "{{relname}} | {{col}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Seq scans vs index scans PER MINUTE",
          "type": "timeseries"
        }
      ],
      "title": "Table operations statistics",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 562,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "( select cc_f_find_filter(ed.discounting_filter_id) d_filter_id, ted.tariff_id, ed.discounting_aggregation_level, ted.product_id, ed.event_discount_id, ed.discount_name, (select p2.product_id from ais_producthasparentproduct p, ais_producthasparentproduct p2 where p.product_id = ted.product_id and p.parent_product_id = p2.product_id limit $67) mobile_flag from ais_tariffelementdiscount ted , ais_eventdiscount ed where ted.catalogue_change_id in (select max(catalogue_change_id) from ais_cataloguechange where catalogue_status = $68 and currency_code = $69) and ted.catalogue_change_id = ed.catalogue_change_id and ted.event_discount_id = ed.event_discount_id and ted.end_dat is null and ed.discounting_aggregation_level = $70 and ted.tariff_id = any(cc_extract2integerarray(pin_billingtariffid, v_hash)) )",
                      "-- mon select * from ak_dbstats",
                      "-- mon select * from ak_long_running_transactions",
                      "-- mon select * from ak_top_queries",
                      "-- mon select * from ak_top_ranked_tables",
                      "-- mon select * from public.ak_jobs_status",
                      "begin",
                      "billseq",
                      "call bl_admin.cc_p_change_accnt_info($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42)",
                      "call bl_admin.cc_p_change_bill_addr($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)",
                      "call bl_admin.cc_p_change_billing_account($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30)",
                      "call bl_admin.cc_p_change_sim($1, $2, $3, $4, $5, $6, $7)",
                      "call bl_admin.cc_p_disconn_parent_prod_tx($1, $2, $3, $4, $5, $6, $7, $8, $9)",
                      "call bl_admin.cc_p_reconnect_all_product($1, $2, $3, $4, $5, $6, $7)",
                      "call bl_admin.cc_p_remove_promotion($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)",
                      "call bl_admin.cc_p_removeservice($1, $2, $3, $4, $5, $6, $7, $8, $9)",
                      "call bl_admin.cc_p_suspend_all_product($1, $2, $3, $4, $5, $6, $7, $8)",
                      "call bl_admin.cc_p_update_promotion_tariffs($1, $2, $3, $4, $5, $6, $7, $8, $9)",
                      "call blo0085100$gen_report_pickup_update_y()",
                      "call blo0085100$varify_data_bf_split()",
                      "call blo0122400_mvpn_all$chk_mvpn_wrong_type(v_process_seq, v_bill_cycle, v_next_bill_date, v_random_hash_rn_start, v_random_hash_rn_end, v_process_type)",
                      "call cc_p_add_change_bill_accnt ( -- terminate account -------------------------------- pin_termaccntnum, pin_termdate, pin_terminationreasonid, -- teminate product ________________________________ pin_productseq, pin_statusreason, -- add parent product to new account --------------- vproductid::integer, pin_newaccountnum, pin_productquantity, pin_cpstaxexemptref, vbillingtariffid::integer, veventtypeid, pin_eventsource, vratingtariffid, pin_attrvalue1, pin_attrvalue2, pin_attrvalue3, pin_attrvalue4, pin_attrvalue5, pin_attrvalue6, pin_integrationname, pin_attrvalue8, pin_attrvalue9, pin_attrvalue10, pin_termflag, pin_attrvalue11, -- add aug 30, 2005 cr477 to_char( pin_attrvalue12, cc_f_get_crm_constant_val('dtm_format') ) , -- add aug 30, 2005 cr477 pin_productseqpromo, --add 11 apr 2011 ,pimonrat pin_productseqaccount, --add 11 apr 2011 ,pimonrat pin_recurringnum, --add 11 apr 2011 ,pimonrat pout_newproductseq --add 11 apr 2011 ,pimonrat )",
                      "call cc_p_add_prod( 'p', v_customerref, -- pin_customerref, pin_productid, pin_eventsource , -- for parent product, need the event source to be a product label. pin_startdtm, null, pin_accountnum, pin_billingtariffid, pin_productquantity, 'ok', -- pin_productstatus, pin_eventtypeid, pin_eventsource, pin_ratingtariffid, pin_attrvalue1, pin_attrvalue2, pin_attrvalue3, pin_attrvalue4, pin_attrvalue5, pin_attrvalue6, pin_attrvalue7, pin_attrvalue8, pin_attrvalue9, pin_attrvalue10, pin_attrvalue11, pin_attrvalue12, v_parentprod, --pin_parentproductseq, pout_productseq )",
                      "call cc_p_add_prod( pin_producttype => $150, pin_customerref => v_customerref, pin_productid => v_productid, pin_productlabel => $151, pin_startdtm => v_promostartdtm, pin_enddtm => v_promoenddtm, pin_accountnum => pin_accountnum, pin_billingtariffid => v_billingid, pin_productquantity => v_quantity, pin_productstatus => $152, pin_eventtypeid => to_char(v_eventtypeid), pin_eventsource => pin_eventsource, pin_ratingtariffid => to_char(v_ratingtariffid), pin_attrvalue1 => v_btname1, pin_attrvalue2 => v_btname2, pin_attrvalue3 => v_btname3, pin_attrvalue4 => v_btname4, pin_attrvalue5 => v_btname5, pin_attrvalue6 => v_btname6, pin_attrvalue7 => v_btname7, pin_attrvalue8 => v_btname8, pin_attrvalue9 => v_btname9, pin_attrvalue10 => v_btname10, pin_attrvalue11 => v_btname11, pin_attrvalue12 => v_btname12, pin_parentproductseq => v_parentproductseq, pout_productseq => vbigintout_productseq )",
                      "call cc_p_add_promotion_tariffs(vproductid, pin_startdtm, pin_promotionenddate, pin_accountnum, vbillingtariffid, null, --pin_cpstaxexemptref, vfilterid, pin_eventsource, veventtypeid, vratingtariffid, vduration, voffset, pin_parentproductseq, 'n', --pin_tariffflag, 'n', --pin_otcflag null, --pin_ordernum null, --pin_orderdate null, --pin_orderlineitemid null, --pin_orderdevisionname null, --pin_itemservicenum null, --pin_itemsiebelproductid null, --pin_siebelrowid pin_nominatedattrvalue, pin_oldaccountnum, pin_oldproductseq, vquantity, vdiscountid, pin_promotioncode, pin_promotionclass, pin_assetsuspendtype, pin_row_id, pin_resend_flag, pin_simserialno, v_commercialtype,--'n', --pin_packagetype pin_total_price, pin_unit_price, pin_units, pin_location, pin_product_desc, null, --pin_purchase_seq vnominatedname, pout_nominatedseq, pout_productseq)",
                      "call cc_p_change_owner_mobile_num ( -- terminate account -------------------------------- pin_termaccntnum, pin_termdate, pin_terminationreasonid, -- teminate product ________________________________ pin_productseq, pin_statusreason, -- add parent product to new account --------------- pin_newproductid, pin_newaccountnum, pin_productquantity, pin_cpstaxexemptref, pin_billingtariffid, pin_eventtypeid, pin_eventsource, pin_ratingtariffid, pin_attrvalue1, pin_attrvalue2, pin_attrvalue3, pin_attrvalue4, pin_attrvalue5, pin_attrvalue6, pin_attrvalue7, pin_attrvalue8, pin_attrvalue9, pin_attrvalue10, pin_termflag, pin_attrvalue11, pin_attrvalue12, pout_newproductseqchar, pout_cntproduct)",
                      "call cc_p_del_reguiding( v_customerref, pinout_productseq::varchar, --pin_eventsource, pin_effectivedate )",
                      "call cc_p_modifier_accnt_info ( pin_acctnbr, pin_acctname, pin_billname, pin_billhandlingcd, pin_mobilenbr, pin_emailaddr, pin_language, pin_billstyle, pin_stmtmedia, pin_itemmedia, pin_itemflags, pin_ctrtphoneref, pin_ctrtphonename, pin_addrname, pin_infocurrency, pin_faxbillto, pin_accnteffectivedate, pin_bfeffectivedate, pin_printbill, pin_specialaccount, pin_chargetype, pin_itemisationflagstartdate, pin_itemisationflagenddate, pin_cdrrequestdate, pin_waiveflag, pin_emailsummary, pin_faxsummaryto, pin_emailitem, pin_faxitemto, pin_paymentterm, pin_specialsubaccount, --31 pin_bill_currency, pin_oversea_flag, pin_boi_no, pin_sap_cust_id, pin_vat_sss, pin_accnt_source, pin_payment_type, pin_bom_no, pin_po_no, pout_status, pout_errormessage)",
                      "call cc_p_react_parent_child_prod ( pin_accountnum , pin_productseq, pin_effectivedate , pin_statusreason , null , -- pin_lumpsumflag, parameter not use pin_suspendtype )",
                      "call cc_p_react_parent_child_prod ( pin_accountnum , v_productseq, pin_effectivedate , pin_statusreason , null , -- pin_lumpsumflag, parameter not use null -- child product set suspend_type = null )",
                      "call cc_p_remove_child_prod ( pin_accountnum, vproductseq, -- parameter in/out pin_effectivedate, pin_statusreason, veventtypeid, -- # veventsource, vproductid -- if tariff product, product id is zero otherwise null. )",
                      "call cc_p_remove_prod( pin_accountnum, v_productseq, -- child product seq . pin_effectivedate, pin_statusreason, pin_eventtypeid, pin_eventsource, null, -- year2004_wli_sir_953 add 1 nov 2007 by pisutsik null -- year2004_wli_sir_953 add 1 nov 2007 by pisutsik )",
                      "call cc_p_remove_prod_tariffs( pin_accountnum, pin_productseq, pin_effectivedate, pin_statusreason, pin_productname, -- year2004_wli_sir_953 add 1 nov 2007 by pisutsik pin_orderdate -- year2004_wli_sir_953 add 1 nov 2007 by pisutsik )",
                      "call cc_p_remove_promotion_tariffs( pin_accountnum, pin_effectivedate, pin_statusreason, pin_eventsource, pin_parentproductseq, pin_productname, pin_orderdate, v_commercialtype, pin_productseq )",
                      "commit",
                      "copy cc_tbl_dat_echannel_list_acc(account_num,seq,list_file_name,echannel_code,status) from stdin (delimiter '|')",
                      "copy rdbcostedeventv1 ( account_num , billed_cost_mny , charge_number , cluster_sub_id , competitor_cost_mny , cost_centre_id , created_dtm , discount_data , event_attr_1 , event_attr_10 , event_attr_11 , event_attr_12 , event_attr_13 , event_attr_14 , event_attr_15 , event_attr_16 , event_attr_17 , event_attr_18 , event_attr_19 , event_attr_2 , event_attr_20 , event_attr_21 , event_attr_22 , event_attr_23 , event_attr_24 , event_attr_25 , event_attr_26 , event_attr_27 , event_attr_28 , event_attr_29 , event_attr_3 , event_attr_30 , event_attr_31 , event_attr_32 , event_attr_33 , event_attr_34 , event_attr_35 , event_attr_36 , event_attr_4 , event_attr_5 , event_attr_6 , event_attr_7 , event_attr_8 , event_attr_9 , event_cost_mny , event_dtm , event_lifecycle_type , event_ref , event_seq , event_source , event_type_id , external_cost_mny , fragment_number , highest_priority_discount_id , highest_priority_prod_seq , host_event_type_id , imported_cost_mny , imported_currency_code , inhost_costed_boo , internal_cost_mny , loyalty_points , managed_file_id , mask_bill_rule_id , mask_store_rule_id , modified_boo , original_account_num , post_bill_retention_days , previous_event_ref , previous_event_seq , pre_discounted_cost_mny , primary_event_ref , product_seq , rating_discounted_usage_total , receivable_class_id , revenue_code_id , row_number , rule_number , tariff_id , tax_override_id , twin_event_boo , ust_category_id , ust_code_id , extended_attributes ) from stdin binary",
                      "create temp table tmp_export as select distinct ac.customer_ref, ac.account_num, gnvacc$getaccountstatus1nc(ac.account_num::text, now()) as account_status, to_char(ac.next_bill_dtm, 'dd/mm/yyyy') as next_bill_dtm, to_char(ac.last_bill_dtm, 'dd/mm/yyyy') as last_bill_dtm, ac.billing_driver, ac.invoicing_co_id from geneva_data.custproductdetails cpd join geneva_data.account ac on ac.account_num = cpd.account_num -- join for test join ais_accountstatus ais_as on ac.account_num = ais_as.account_num where ac.last_bill_dtm < case when to_char(ac.next_bill_dtm, 'dd/mm') = '28/02' then ac.next_bill_dtm - interval '31 days' else ac.next_bill_dtm - interval '1 month' end -- <- by pass function error but prod is need -> and gnvacc$getaccountstatus1nc(ac.account_num::text, now()) <> 'tx' -- for test and ais_as.account_status <> 'tx' and ais_as.effective_dtm = ( select max(effective_dtm) from ais_accountstatus aa where aa.account_num = ais_as.account_num and aa.effective_dtm <= current_timestamp ) -- end for test and ac.invoicing_co_id <> 6 and cpd.product_label is not null and (cpd.end_dat is null or cpd.end_dat > case when to_char(ac.next_bill_dtm, 'dd/mm') = '28/02' then ac.next_bill_dtm - interval '31 days' else ac.next_bill_dtm - interval '1 month' end) and cpd.start_dat < case when to_char(ac.next_bill_dtm, 'dd/mm') = '28/02' then ac.next_bill_dtm - interval '31 days' else ac.next_bill_dtm - interval '1 month' end",
                      "delete from bl_admin.cc_tbl_dat_ops_account_bc18 ss where ss.user_id = $1 and ss.insert_seq =$2 and ss.account_type = $3 and ss.account_status = $4 and ss.account_num in (select cc.account_num from bl_admin.cc_tbl_dat_ops_account_bc18 cc where cc.account_type = $5 and cc.user_id = $6 and cc.insert_seq = $7)",
                      "delete from bl_admin.cc_tbl_dat_ops_account_bc18 where user_id = $1 and ((insert_seq = $2) or (insert_seq > $3))",
                      "do $$ begin create temp table tmp_export as select distinct ac.customer_ref, ac.account_num, gnvacc$getaccountstatus1nc(ac.account_num::text, now()) as account_status, to_char(ac.next_bill_dtm, 'dd/mm/yyyy') as next_bill_dtm, to_char(ac.last_bill_dtm, 'dd/mm/yyyy') as last_bill_dtm, ac.billing_driver, ac.invoicing_co_id from geneva_data.custproductdetails cpd join geneva_data.account ac on ac.account_num = cpd.account_num -- join for test join ais_accountstatus ais_as on ac.account_num = ais_as.account_num where ac.last_bill_dtm < case when to_char(ac.next_bill_dtm, 'dd/mm') = '28/02' then ac.next_bill_dtm - interval '31 days' else ac.next_bill_dtm - interval '1 month' end -- <- by pass function error but prod is need -> and gnvacc$getaccountstatus1nc(ac.account_num::text, now()) <> 'tx' -- for test and ais_as.account_status <> 'tx' and ais_as.effective_dtm = ( select max(effective_dtm) from ais_accountstatus aa where aa.account_num = ais_as.account_num and aa.effective_dtm <= current_timestamp ) -- end for test and ac.invoicing_co_id <> 6 and cpd.product_label is not null and (cpd.end_dat is null or cpd.end_dat > case when to_char(ac.next_bill_dtm, 'dd/mm') = '28/02' then ac.next_bill_dtm - interval '31 days' else ac.next_bill_dtm - interval '1 month' end) and cpd.start_dat < case when to_char(ac.next_bill_dtm, 'dd/mm') = '28/02' then ac.next_bill_dtm - interval '31 days' else ac.next_bill_dtm - interval '1 month' end; end $$",
                      "do $$ declare rows_effected integer=0; begin update cc_tbl_dat_echannel_list_acc set status = '3' , status_desc = 'bill data not found' where status='1' and account_num not in ( select distinct bd.account_num from cc_tbl_dat_echannel_billdata bd where bd.exp_filename is not null ); get diagnostics rows_effected = row_count ; raise notice '%',rows_effected ; end; $$",
                      "do $$ declare rows_effected integer=0; begin update cc_tbl_dat_echannel_list_file set status = '3' where exp_filename not in ( select distinct lc.file_name from cc_tbl_dat_echannel_list_acc lc where lc.status = '1' and lc.file_name is not null ) and status <> '4' and ftype = 'i'; get diagnostics rows_effected = row_count ; raise notice '%',rows_effected ; end; $$",
                      "do $$ declare v_process_seq varchar(10) := current_setting('input.v2'); v_bill_cycle varchar(10) := current_setting('input.v3'); v_next_bill_date varchar(10) := current_setting('input.v4'); v_random_hash_rn_start numeric := current_setting('input.v5')::numeric; v_random_hash_rn_end numeric := current_setting('input.v6')::numeric; v_process_type varchar(10) := current_setting('input.v7'); begin call blo0122400_mvpn_all$chk_mvpn_wrong_type(v_process_seq, v_bill_cycle, v_next_bill_date, v_random_hash_rn_start, v_random_hash_rn_end, v_process_type); end; $$ language plpgsql",
                      "gname, gnvgen$systemdate()",
                      "insert into accountpayment (account_num, account_payment_seq, deposit_boo, payment_origin_id, account_payment_mny, account_payment_dat, created_dtm, account_payment_status, alt_account_payment_mny, alt_currency_code, cancelled_dtm, cancelled_by_ora, failed_by_ora, failed_dtm, physical_payment_seq, account_payment_txt, account_payment_ref, customer_ref, transfer_acc_no, transfer_acc_pay_seq, linked_writeoff_payment_seq, deposit_balance_seq, deposit_request_seq, event_ref, payment_balance_type, deposit_funding_acc_pay_seq, invoice_num, --individual_id, --service_group, dep_payment_ind, created_bill_seq, source_vpa_process, pending_pay_created_dtm, receivables_group_attr_1, receivables_group_attr_2, receivables_group_attr_3, receivables_group_attr_4, receivables_group_attr_5, receivables_group_attr_6, linked_writeoff_balance_seq) values (accountnum, nextaccountseq, depositboo, originid, varconvertedmoney, trunc(paymentdate), varcreationdtm, paymentstatus, varactualpaymoney, varpaycurrin, $70, $71, $72, $73, physicalpayseq, paymenttext, paymentref, physicalcustomerref, transferaccno, transferpayseq, writeoffseq, depositbalseq, depositreqseq, eventref, paymentbalancetype, depositfundingaccpayseq, invoicenumber, --individualid, -- servicegroup, deppaymentind, billseq, sourceprocess, varpendingdtm, recgrpattr1, recgrpattr2, recgrpattr3, recgrpattr4, recgrpattr5, recgrpattr6, linkedwriteoffbalanceseq)",
                      "insert into billdata (account_num, bill_seq, bill_version, copy_bill_num, domain_id, segment_number, bill_data_content_type, blocksize_used_for_comp, compressed_data, data, data_compressed_boo, solution_data, solution_data_content_type) values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13)",
                      "insert into billdetails (account_num, bill_revenue_feed_seq, bill_seq, bill_version, domain_id, revenue_feed_id, created_dtm, group_attr_1, group_attr_10, group_attr_11, group_attr_12, group_attr_13, group_attr_14, group_attr_15, group_attr_16, group_attr_17, group_attr_18, group_attr_19, group_attr_2, group_attr_20, group_attr_3, group_attr_4, group_attr_5, group_attr_6, group_attr_7, group_attr_8, group_attr_9, invoiced_charge_boo, revenue_charge_type, revenue_end_dat, revenue_start_dat, re_calculated_charge_mny, re_engineered_chrg_grp_seq, sum_attr_1_value, sum_attr_2_value, sum_attr_3_value, sum_attr_4_value, sum_attr_5_value, sum_attr_6_value, tax_inclusive_charge_mny) values ($1, $2, $3, $4, $5, $6, $7::timestamptz, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30::timestamptz, $31::timestamptz, $32, $33, $34, $35, $36, $37, $38, $39, $40)",
                      "insert into billproductcharge (account_num, charge_number, charge_seq, domain_id, accumulated_points, activation_rule, actual_charge_end_dat, actual_charge_start_dat, additions_quantity, adp_from_number, adp_period_units, adp_recur_disc_rev_code_id, adp_to_number, age_dependent_price_id, anchor_dat, bpc_status, budget_centre_seq, charge_cost_mny, charge_end_dat, charge_end_dtm, charge_source, charge_start_dat, charge_start_dtm, charge_sub_type, charge_type, cog_member_qty, contract_ref, contract_start_dat, contract_term, contract_term_units, contract_type_id, cps_id, created_dtm, customer_ref, early_term_mult_cost_mny, early_term_mult_rev_code_id, full_period_boo, full_period_cost_mny, in_advance_boo, override_mod_type_id, override_number, override_rev_code_id, package_basic_cost_mny, package_basic_tariff_id, package_disc_rev_code_id, package_id, package_seq, parent_product_seq, percentage_pct, pre_adp_cost_mny, pre_loyalty_cost_mny, pre_override_cost_mny, pre_split_full_period_cost_mny, price_attr_1, price_attr_2, price_attr_3, price_attr_4, price_attr_5, price_attr_6, product_age, product_attr_1, product_attr_2, product_attr_3, product_attr_4, product_attr_5, product_attr_6, product_attr_data, product_id, product_label, product_package_instance, product_quantity, product_seq, reactivation_rule, receivable_class_id, redeemed_points, revenue_code_id, rev_recognition_class_id, split_amount_overruled_boo, split_charge_acct_num, split_charge_amount_mny, split_charge_cust_ref, split_charge_source, suspension_rule, tariff_id, tariff_version, taxcode_id, tax_rate_currency_code, tax_rate_mny, tax_rate_pct, terminations_quantity, termination_rule) values ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15::timestamptz, $16, $17, $18, $19::timestamptz, $20, $21, $22::timestamptz, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33::timestamptz, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $65, $66, $67, $68, $69, $70, $71, $72, $73, $74, $75, $76, $77, $78, $79, $80, $81, $82, $83, $84, $85, $86, $87, $88, $89, $90, $91)",
                      "insert into bl_admin.tmp_list_err_bc18 select c.customer_ref,e.account_num,c.product_id,d.tariff_id,c.parent_product_seq,c.product_seq,d.start_dat,d.end_dat,$1 , product_desc,m.tariff_id, te.in_advance_boo , chp.parent_product_seq from ais_custhasproduct c join ais_custproducttariffdetails d on c.product_seq = d.product_seq and c.customer_ref = d.customer_ref join ais_custproductdetails e on c.product_seq = e.product_seq and c.customer_ref = e.customer_ref join ais_product p on c.product_id = p.product_id left join cc_tbl_dat_ops_map_rt_tariff m on m.tariff_id = d.tariff_id join ais_tariffelement te on te.tariff_id = d.tariff_id and te.product_id = c.product_id and te.catalogue_change_id = $2 left join ais_custhasproduct chp on chp.customer_ref = c.customer_ref and chp.product_seq = c.parent_product_seq where e.account_num = $3 and d.start_dat < case when to_char( $4::timestamp, $5) = $6 then $7::timestamp + interval $8 else $9::timestamp + interval $10 end and (d.end_dat >= case when to_char($11::timestamp, $12) = $13 then $14::timestamp - interval $15 else $16::timestamp - interval $17 end or d.end_dat is null) and (te.end_dat is null or te.end_dat > current_date)",
                      "insert into cancelbillcustpc (account_num, bill_seq, budget_centre_seq, charge_type, customer_ref, domain_id, product_seq, start_dat, accruals_mny, billed_to_dat, cpc_status, earliest_change_dat, end_dat, finished_boo, last_invoice_dat, last_taxed_cps_id, last_taxed_dat, percentage_pct, prev_bill_to_dat, tariff_id, tariff_version, unused_mny) values ($1, $2, $3, $4, $5, $6, $7, $8::timestamptz, $9, $10::timestamptz, $11, $12, $13::timestamptz, $14, $15, $16, $17::timestamptz, $18, $19, $20, $21, $22)",
                      "insert into cc_tbl_arc_tmp_inv_call ( select invoice_num, 0 flag from cc_tbl_arc_tmp_inv_master )",
                      "insert into cc_tbl_arc_tmp_inv_mg_amt ( select invoice_num, account_num, 0 flag from cc_tbl_arc_tmp_inv_master )",
                      "insert into cc_tbl_dat_inv_product (invoice_dat, invoice_num, invoice_item, product_seq, charge_type, charge_mny, charge_start, charge_end, ref_account_num, product_id, tariff_id) select to_date($1 , $14), $2 , $3 , $4 , $5 , $6 , to_date($7 ,$15), to_date($8 , $16), $9 , chp.product_id, cpt.tariff_id from ais_custhasproduct chp, ais_custproducttariffdetails cpt where chp.customer_ref = $10 and chp.product_seq = $11 and cpt.customer_ref = chp.customer_ref and cpt.product_seq = chp.product_seq and cpt.start_dat <= to_date($12 , $17) and (cpt.end_dat >= to_date($13 , $18) or cpt.end_dat is null)",
                      "insert into cc_tbl_dat_inv_sms_compare(customer_ref,account_num,sms_contact_number,wording_sms,ver_wording_sms,company,sms_type,bill_language,payment_method,customer_type,ver_status,invoice_num,create_date) values($1 ,$2 ,$3 ,$4 ,$5 ,$6 ,$7 ,to_char($8 ),$9 ,$10 ,$11 ,$12 ,now())",
                      "insert into cc_tbl_dat_inv_sms_dat( customer_ref,account_num,sms_contact_number,wording_sms,invoice_num,company,sms_type,sms_flag,response_flag,upd_date,create_date) values($1 ,$2 ,$3 ,$4 ,$5 ,$6 ,$7 ,$8 ,$9 ,now(),now())",
                      "insert into cc_tbl_dat_inv_summary (invoice_dat,invoice_num,account_num,customer_ref, bill_sequence,previous_balance,total_payment,mobile_level_monthly_mny, acc_level_monthly_mny,monthly_fee_mny,mobile_level_otc_mny,acc_level_otc_mny, one_time_charge_mny,mobile_level_lumpsum_mny,acc_level_lumpsum_mny,lump_sum_mny, call_and_vas_charge,prd_call_and_vas_charge,ir_markup_charge,prd_ir_markup_charge, mob_discount_mny,mob_bill_discount_mny,mob_rate_discount_mny, acc_discount_mny, acc_bill_discount_mny,acc_rate_discount_mny, discount_mny,bill_discount_mny,rate_discount_mny, adjustment_mny,split_charge_mny,event_reguided_mny, nettaxable_mny,invoice_vat_mny,gross_nontaxable_mny, mob_nontaxable_discount_mny,acc_nontaxable_discount_mny,nontaxable_discount_mny, netnontaxable_mny,invoice_total_mny,cash_incentive,credit_adjustment,balance_out_mny, vat_rate,taxpoint,volume_download,ir_volume_download,payment_due_dat,actual_bill_dat, periodstart,periodend,invoicing_co_name,number_of_mobile,invoice_net_mny,payment_method_id,vat_date,debt_analysis_dtm, invoice_type, app_balance_mny, app_using_mny, debit_adjustment, bill_handling_code, adj_airtime_mny, adj_ir_mny, adj_idd_mny, adj_data_mny, adj_goods_mny, main_lump_sum_mny, ontop_lump_sum_mny, ir_lump_sum_mny, main_mobile_num ,vatexempt ,billtype_id,periodstart_fbb,periodend_fbb,periodmonth_fbb, suspend_2_way ,sap_ext_group_id ,bord_inter_ext_group_id ) values ( to_date($1 ,$80),$2 ,$3 ,$4 , $5 , $6 ,$7 , $8 , $9 , $10 , $11 , $12 , $13 , $14 , $15 , $16 , $17 , $18 , $19 , $20 , $21 , $22 , $23 , $24 ,$25 ,$26 , $27 ,$28 ,$29 , $30 ,$31 ,$32 , $33 ,$34 ,$35 , $36 ,$37 ,$38 , $39 ,$40 ,$41 , $42 ,$43 ,$44 , $45 ,$46 ,$47 , to_date($48 ,$81), to_date($49 ,$82), to_date($50 ,$83), to_date($51 ,$84), $52 ,$53 ,$54 ,$55 ,to_date($56 ,$85), to_timestamp($57 ,$86), $58 , $59 , $60 , $61 , $62 , $63 , $64 , $65 , $66 , $67 , $68 , $69 , $70 , $71 ,$72 ,$73 , to_date(nullif($74 ,$87),$88), to_date(nullif($75 ,$89),$90), $76 , $77 , $78 , $79 )",
                      "insert into cc_tbl_dat_ops_mvpn ( customer_ref , account_num , event_source , parent_product_seq , product_seq , start_date_service , end_date_service , tariff_id_pro , start_date_pro , end_date_pro , event_seq , event_type_id , event_ref , event_dtm , event_cost_mny , managed_file_id , row_number , event_attr_1 , event_attr_4 , event_attr_5 , event_attr_6 , event_attr_7 , event_attr_8 , event_attr_9 , event_attr_10 , event_attr_11 , event_attr_15 , event_attr_24 , cdr_flag , created_dtm , user_id , process_seq ) select $1 , $2 , $3 , $4 , $5 , $6 , $7 , $8 , $9 , $10 , ce.event_seq , ce.event_type_id , ce.event_ref , ce.event_dtm , ce.event_cost_mny , ce.managed_file_id , ce.row_number , ce.event_attr_1 , ce.event_attr_4 , ce.event_attr_5 , ce.event_attr_6 , ce.event_attr_7 , ce.event_attr_8 , ce.event_attr_9 , ce.event_attr_10 , ce.event_attr_11 , ce.event_attr_15 , ce.event_attr_24 , $18 , now() , $11 , $12 from ais_costedevent ce -- partition (costed_events.rdbcostedeventv1_250930000_251001000) ce where ce.account_num = $13 and ce.event_source = $14 and ce.event_type_id = $15 and ce.event_dtm between $16 and coalesce($17, now())",
                      "insert into cc_tbl_dat_up_stat_costband (event_date,network_company_id,cost_band_name,total_record, process_dtm) values (to_date( $1 , $6), $2 , $3 , $4 , to_date($5 , $7))",
                      "insert into cc_tbl_dat_verify_spl_bf_split (count_num, case_value) select count(account_num) , upper(trim(case_name)) from cc_tbl_dat_summary_pickup ---à¸•à¸±à¹‰à¸‡à¸•à¹‰à¸™ where group_account = $1 and status is null group by case_name order by case_name",
                      "insert into eventsourceusage ( account_num, event_seq, event_source, event_type_id, domain_id, loaded_event_count, loaded_event_mny, billed_event_count, billed_event_mny, loaded_anti_event_count ) values ($1 , $2 , $3 , $4 , $5 , $6 , $7::float8 , $8 , $9::float8 , $10 ) on conflict (account_num, event_seq, event_source, event_type_id, domain_id) do update set loaded_event_count = eventsourceusage.loaded_event_count + excluded.loaded_event_count, loaded_event_mny = eventsourceusage.loaded_event_mny + excluded.loaded_event_mny",
                      "p_name, gnvsessiongparams$getsystemdate()",
                      "release _per_query_svp_",
                      "savepoint _per_query_svp_",
                      "select $1 + interval $3 * $2",
                      "select $1 + interval $3 * floor( $2 )",
                      "select $1 as procedure_cat, n.nspname as procedure_schem, p.proname as procedure_name, $2, $3, $4, d.description as remarks, $5 as procedure_type, p.proname || $6 || p.oid as specific_name from pg_catalog.pg_namespace n, pg_catalog.pg_proc p left join pg_catalog.pg_description d on (p.oid=d.objoid) left join pg_catalog.pg_class c on (d.classoid=c.oid and c.relname=$7) left join pg_catalog.pg_namespace pn on (c.relnamespace=pn.oid and pn.nspname=$8) where p.pronamespace=n.oid and p.prokind=$9 and n.nspname like $10 and p.proname like $11 order by procedure_schem, procedure_name, p.oid::text",
                      "select $2 from pg_cursors where name = lower($1)",
                      "select * from account where account_num = accountnum and coalesce(logically_deleted_boo, gnvgen$gnvfalsestring() ) <> gnvgen$gnvtruestring()",
                      "select * from accountrating where account_num = accountnum",
                      "select * from ais_accountattributes where (account_num)::text like pin_acctnbr",
                      "select * from ais_gnvacc$modifyaccdetailsseparate( p_accountnum => pin_accountnum, p_fromdat => sysdate(), p_uptodat => $55, p_bitflags => $56, p_billperiod => $57, p_billperiodunits => $58, p_billstyleid => v_oldaccdetails.bill_style_id, p_paymentmethodid => v_oldaccdetails.payment_method_id, p_billingcontactseq => v_oldaccdetails.billing_contact_seq, p_creditclassid => v_oldaccdetails.credit_class_id, p_creditlimitmny => pin_creditlimit*$59, p_packagediscaccnum => v_oldaccdetails.package_disc_account_num, p_eventdiscaccnum => v_oldaccdetails.event_disc_account_num, p_accountingmethod => v_oldaccdetails.accounting_method, p_statementfrequency => $60, p_billhandlingcode => v_oldaccdetails.bill_handling_code, p_defaultserviceaddr => v_oldaccdetails.default_service_address_seq, p_donateddiscountcps => v_oldaccdetails.donated_discount_cps_id, p_eventdeletionmode => $61, p_reguidedeventdelmode => $62, p_maskeventsonbillboo => $63, p_maskeventsinstoreboo => $64, p_maskreguidedonbillboo => $65, p_maskreguidedinstoreboo => $66, p_ticketboo => $67, p_prodchargeprofileid => $68, p_eventtidemark => $69, p_rechargepaymentsboo => $70, p_billdayofthemonth => $71, p_currencymode => $72, p_currencyconvcalday => $73, p_announcementsmode => $74, p_autodepallocforoiaboo => $75, p_excesspymtallocforoiaboo => $76, p_negativeinvallocforoiaboo => $77, p_paymentautocreateboo => $78, p_accountlockversion => v_accountlockversion)",
                      "select * from ais_gnvacc$modifyaccdetailsseparate( p_accountnum => pin_accountnum, p_fromdat => sysdate(), p_uptodat => $60, p_bitflags => $61, p_billperiod => v_oldaccdetails.bill_period, p_billperiodunits => v_oldaccdetails.bill_period_units, p_billstyleid => v_oldaccdetails.bill_style_id, p_paymentmethodid => v_oldaccdetails.payment_method_id, p_billingcontactseq => v_oldaccdetails.billing_contact_seq, p_creditclassid => v_oldaccdetails.credit_class_id, p_creditlimitmny => pin_creditlimit*$62, p_packagediscaccnum => v_oldaccdetails.package_disc_account_num, p_eventdiscaccnum => v_oldaccdetails.event_disc_account_num, p_accountingmethod => v_oldaccdetails.accounting_method, p_statementfrequency => v_oldaccdetails.bills_per_statement, p_billhandlingcode => v_oldaccdetails.bill_handling_code, p_defaultserviceaddr => v_oldaccdetails.default_service_address_seq, p_donateddiscountcps => v_oldaccdetails.donated_discount_cps_id, p_eventdeletionmode => $63, p_reguidedeventdelmode => $64, p_maskeventsonbillboo => $65, p_maskeventsinstoreboo => $66, p_maskreguidedonbillboo => $67, p_maskreguidedinstoreboo => $68, p_ticketboo => $69, p_prodchargeprofileid => $70, p_eventtidemark => $71, p_rechargepaymentsboo => $72, p_billdayofthemonth => $73, p_currencymode => $74, p_currencyconvcalday => $75, p_announcementsmode => $76, p_autodepallocforoiaboo => $77, p_excesspymtallocforoiaboo => $78, p_negativeinvallocforoiaboo => $79, p_paymentautocreateboo => $80, p_accountlockversion => v_accountlockversion)",
                      "select * from ais_gnvcustproduct$createcustproduct ( p_customerref => pin_customerref , p_productid => pin_productid , p_startdtm => v_startdtm , p_termdtm => v_enddtm , p_parentproductseq => pin_parentproductseq , p_packageseq => null , p_productpackageinstance => null , p_accountnum => v_tmp_account_num , p_budgetcentreseq => null , p_tariffid => pin_billingtariffid , p_competitortariffid => null , p_productlabel => pin_productlabel , p_productquantity => pin_productquantity , p_custordernum => null , p_supplierordernum => null , p_custproductcontactseq => null , p_contractedpos => null , p_cpstaxexemptref => v_taxexemptref , p_cpstaxexempttxt => null , p_contractseq => null , p_additions_quantity => pin_productquantity , p_terminations_quantity => null , p_productstatus => pin_productstatus , p_statusreasontxt => null , p_subscription_ref => null , p_productoptionalboo => 'f' , p_eventdeletionmode => null , p_communitygroupid => v_communitygroupid , p_communitygroupownerboo => v_communitygroupownerboo )",
                      "select * from ais_gnvpay$createautoappaccpay(accountnumber => (p_inaccountnum), paymentdate => (p_inpaymentdat), paymentmoney => (v_total_mny), paymentcurrency => ($39)::varchar, paymentmethodid => (p_inpaymentmethodid), paymenttext => (p_inpaymentdescription), paymentref => ($40)::varchar, physicalcustomerref => (v_customer_ref)::varchar, creationdate => ($41)::timestamptz(0), batchid => ($42)::numeric, p_paymentrule => ($43)::numeric, p_depositrequestseq => ($44)::numeric, p_depositbalanceseq => ($45)::numeric, p_pendingpaymentmode => ($46)::numeric, p_refundboo => $47::varchar, p_attribindexarray => $48, p_newstringvaluesarray => $49, p_oldstringvaluesarray => $50, p_invoicenumber => ($51)::varchar, p_individualid => ($52)::integer, p_servicegroup => ($53)::varchar )",
                      "select * from bl_admin.blc0180000$cc_pc_create_payment($1,$2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34) as result",
                      "select * from bl_admin.cc_p_add_promotion($1,$2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27) as result",
                      "select * from bl_admin.cc_p_add_service($1,$2, $3, $4, $5, $6, $7, $8, $9, $10, $11) as result",
                      "select * from bl_admin.cc_p_add_tariff($1,$2, $3, $4, $5, $6, $7, $8) as result",
                      "select * from bl_admin.cc_p_create_mobile($1,$2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) as result",
                      "select * from blc0180000$cc_pc_create_payment$addtext2online(p_txt => (v_send_txt_to_online_tr), p_add_txt => ($60))",
                      "select * from blc0180000$cc_pc_create_payment$x_allocation(v_numinv => (v_numinv)::numeric, p_inbillseqlist => (p_inbillseqlist)::varchar, v_totalallocatemny => (v_totalallocatemny)::numeric, p_innewppsboo => (v_innewppsboo)::varchar, v_aps => (v_aps)::numeric, v_old_aps_seq => (v_old_aps_seq)::integer, v_total_pay => (v_total_pay)::numeric, v_old_pay_mny => (v_old_pay_mny)::bigint, v_accountpayseq => (v_accountpayseq)::integer, v_total_mny => (v_total_mny)::numeric, v_send_txt_to_online_tr => (v_send_txt_to_online_tr)::text, v_billseqlist => (v_billseqlist)::varchar(1000), v_paymentallocationmny => (v_paymentallocationmny)::varchar(1000), p_inpaymentallocationmny => (p_inpaymentallocationmny)::varchar, v_invbalancelist => (v_invbalancelist)::varchar(1000), p_ininvbalancelist => (p_ininvbalancelist)::varchar, v_prevtaxchangemny => (v_prevtaxchangemny), p_inaccountnum => (p_inaccountnum)::varchar, p_inpaymentsourcetype => (p_inpaymentsourcetype)::numeric, p_inpayfor => (p_inpayfor)::numeric, v_invfullpay => (v_invfullpay)::char(1), p_inpaymentdat => (p_inpaymentdat)::timestamptz(0), p_inpaymentchannelid => (p_inpaymentchannelid)::numeric, p_outphysicalpayseq => (p_outphysicalpayseq)::numeric, p_inoldppsseq => (p_inoldppsseq)::numeric, p_outaccountpayseq => (p_outaccountpayseq)::numeric, v_customer_ref => (v_customer_ref), v_physicalpayseq => (v_physicalpayseq), v_errcode => (v_errcode)::numeric, v_errmsg => (v_errmsg)::varchar(1000))",
                      "select * from gnvacc$modifyaccount26nc ( p_accountnum , p_fromdat , p_uptodat , p_bitflags , p_accountname , p_currencycode , p_nextbilldtm , p_billperiod , p_billperiodunits , p_billstyleid , p_paymentmethodid , p_billingcontactseq , p_creditclassid , p_creditlimitmny , p_infocurrencycode , p_packagediscaccnum , p_eventdiscaccnum , p_accountingmethod , p_statementfrequency , p_billhandlingcode , p_defaultserviceaddr , p_invoicingcoid , p_defaultcpsid , p_donateddiscountcps , p_autodelbilledeventboo , p_businessboo , p_endcustomerboo , p_prepayboo , p_thresholdsetid , p_taxinclusiveboo , p_eventsperday , p_holidayprofileid , p_templateref , p_eventdeletionmode , p_reguidedeventdelmode , p_maskeventsonbillboo , p_maskeventsinstoreboo , p_maskreguidedonbillboo , p_maskreguidedinstoreboo , p_ticketboo , p_languageid , p_lcprofileid , p_lcstateid , p_nextlcsprocessdays , p_lcstatereasontext , p_csruser , p_prodchargeprofileid , p_disablerealtimebillboo , p_eventtidemark , p_rechargepaymentsboo , p_rechargeeventtypeid , p_rechargeeventsource , p_outputeventtofileboo , p_aggregatestartdat , p_eventdispatchprofileid , p_dormancylcprofileid , p_dormancychecknbrofdays , p_excludefrompromoboo , p_taxreengineerboo , p_creditcheckedboo , p_billdayofthemonth , p_eventstoretype , p_currencymode , p_currencyconvcalday , p_seteventtransitionseq , p_announcementsmode , p_autodepallocforoiaboo , p_excesspymtallocforoiaboo , p_negativeinvallocforoiaboo , p_ustaccountclassid , p_paymentautocreateboo , p_accountlockversion )",
                      "select * from gnvdebt$legaldebtandcreditadj(accountnum => p_accountnum, billseq => p_billseq, receivableclassid => p_receivableclassid, bforaccount => $16, groupid => $17, adjtidemarkdtm =>$18, prevcollwopayseq =>$19, currcollwopayseq =>$20, maxadjcollworecpayseq=>$21, recgrpattr1 => p_recgrpattr1, recgrpattr2 => p_recgrpattr2, recgrpattr3 => p_recgrpattr3, recgrpattr4 => p_recgrpattr4, recgrpattr5 => p_recgrpattr5, recgrpattr6 => p_recgrpattr6)",
                      "select * from gnvintacc$modifyaccseperateint(p_accountnum => (p_accountnum)::varchar, p_accountname => (p_accountname)::varchar, p_currencycode => (p_currencycode)::varchar, p_nextbilldtm => (p_nextbilldtm)::timestamptz(0), p_infocurrencycode => (p_infocurrencycode)::varchar, p_invoicingcoid => (p_invoicingcoid)::numeric, p_defaultcpsid => (p_defaultcpsid)::numeric, p_autodelbilledeventboo => (p_autodelbilledeventboo)::varchar, p_businessboo => (p_businessboo)::varchar, p_endcustomerboo => (p_endcustomerboo)::varchar, p_prepayboo => (p_prepayboo)::varchar, p_thresholdsetid => (p_thresholdsetid)::numeric, p_taxinclusiveboo => (p_taxinclusiveboo)::varchar, p_eventsperday => (p_eventsperday)::numeric, p_holidayprofileid => (p_holidayprofileid)::numeric, p_templateref => (p_templateref)::varchar, p_languageid => (p_languageid)::numeric, p_lcprofileid => (p_lcprofileid)::numeric, p_lcstateid => (p_lcstateid)::numeric, p_nextlcsprocessdays => (p_nextlcsprocessdays)::numeric, p_lcstatereasontxt => (p_lcstatereasontext)::varchar, p_csruser => (p_csruser)::varchar, p_disablerealtimebillboo => (p_disablerealtimebillboo)::varchar, p_rechargeeventtypeid => (p_rechargeeventtypeid)::numeric, p_rechargeeventsource => (p_rechargeeventsource)::varchar, p_outputeventtofileboo => (p_outputeventtofileboo)::varchar, p_aggregatestartdat => (p_aggregatestartdat)::timestamptz(0), p_eventdispatchprofileid => (p_eventdispatchprofileid)::numeric, p_dormancylcprofileid => (p_dormancylcprofileid)::numeric, p_dormancychecknbrofdays => (p_dormancychecknbrofdays)::numeric, p_excludefrompromoboo => (p_excludefrompromoboo)::varchar, p_taxreengineerboo => (p_taxreengineerboo)::varchar, p_creditcheckedboo => (p_creditcheckedboo)::varchar, p_accountlockversion => (p_accountlockversion)::numeric, p_bitflags => (v_bitflags)::numeric, p_validatetaxincboo => (true)::boolean, p_updateforaccounttransfer => ('f')::varchar, p_updatebdmboo => (true)::boolean, p_eventstoretype => (p_eventstoretype)::numeric, p_seteventtransitionseq => (p_seteventtransitionseq)::numeric, p_iseventseqratedboo => (p_iseventseqratedboo)::varchar)",
                      "select * from gnvintpay$checkallocationtobillamount(p_accountnumber, p_billseq, p_payseq, p_receivableclassid, p_allocmny, v_allocmny, $63, v_targetpaymentboo, v_recgrpattr1, v_recgrpattr2, v_recgrpattr3, v_recgrpattr4, v_recgrpattr5, v_recgrpattr6)",
                      "select * from gnvintpay$createallocationnc(accountnumber, billseq, payseq, allocmny, receivableclassid, notes,$13,$14, p_recgrpattr1,p_recgrpattr2,p_recgrpattr3,p_recgrpattr4,p_recgrpattr5,p_recgrpattr6)",
                      "select * from gnvintpay$createautoappaccpaync( accountnumber, paymentdate, paymentmoney, paymentcurrency, paymentmethodid, paymenttext, paymentref, physicalcustomerref, creationdate, batchid, p_paymentrule, p_depositrequestseq, p_depositbalanceseq, p_pendingpaymentmode, p_refundboo, p_attribindexarray, p_newstringvaluesarray, p_oldstringvaluesarray, p_invoicenumber, p_individualid, p_servicegroup, $34, $35, $36, p_receivablegroupattr1, p_receivablegroupattr2, p_receivablegroupattr3, p_receivablegroupattr4, p_receivablegroupattr5, p_receivablegroupattr6 )",
                      "select * from gnvintpay$insertatb( p_accountnumber, v_billseq, p_payseq, v_recclassid, coalesce(v_allocmny::numeric,$187::numeric), p_notes, $188, $189, recbillrec.receivables_group_attr_1, recbillrec.receivables_group_attr_2, recbillrec.receivables_group_attr_3, recbillrec.receivables_group_attr_4, recbillrec.receivables_group_attr_5, recbillrec.receivables_group_attr_6 )",
                      "select * from gnvintproductstatus$createcustprodstatus(p_customerref => p_customerref, p_productseq => p_productseq, p_startdatetime => p_startdatetime, p_nextstatusdatetime => p_nextstatusdatetime, p_productstatus => p_productstatus, p_statusreason => p_statusreason, p_earlytermsurchargeboo => p_earlytermsurchargeboo, p_applytoproductheirarchyboo => p_applytoproductheirarchyboo, p_addonsuperbehaviourboo => v_useaddonsuperbehaviourboo, p_issuperaddoncall => v_issuperaddcall)",
                      "select * from gnvinum$createinvoicenumber( $1 , $2 , $3 , $4 , $5 , $6 , $7 , $8 , $9 , $10 , $11 )",
                      "select * from gnvpay$createallocation5nc( accountnumber , billseq , payseq , allocmny , receivableclassid , notes , p_recgrpattr1 , p_recgrpattr2 , p_recgrpattr3 , p_recgrpattr4 , p_recgrpattr5 , p_recgrpattr6 )",
                      "select * from gnvpay$createautoappaccpay12nc( accountnumber , paymentdate , paymentmoney , paymentcurrency , paymentmethodid , paymenttext , paymentref , physicalcustomerref , creationdate , batchid , p_paymentrule , p_depositrequestseq , p_depositbalanceseq , p_pendingpaymentmode , p_refundboo , p_attribindexarray , p_newstringvaluesarray , p_oldstringvaluesarray , p_invoicenumber , p_individualid , p_servicegroup , p_receivablegroupattr1 , p_receivablegroupattr2 , p_receivablegroupattr3 , p_receivablegroupattr4 , p_receivablegroupattr5 , p_receivablegroupattr6 )",
                      "select * from gnvpaymisc$accountinformationrecord(accountnum)",
                      "select * from gnvpaymisc$accratinginforecord(accountnum)",
                      "select * from gnvpaymisc$accunbilledinforecord(accountnum)",
                      "select * from gnvprdcustproduct$deletecustproductintnc(p_customerref => p_customerref, p_productseq => v_productseq, p_subscription_boo => $23, p_productlabel => $24, p_overrideprodtrfrules => p_overrideprodtrfrules, p_overridevalforpm => p_overridevalforpm, p_deletebilledproductsboo => $25)",
                      "select * from gnvproductstatus$createcustprodstatus2nc( p_customerref , p_productseq , p_startdatetime , p_nextstatusdatetime , p_productstatus , p_statusreason , p_earlytermsurchargeboo , p_applytoproductheirarchyboo )",
                      "select * from gnvproductstatus$modifycustprodstatus3nc ( p_customerref , p_productseq , p_productstatus , p_oldstartdatetime , p_oldstatusreason , p_newstartdatetime , p_newstatusreason , p_earlytermsurchargeboo , p_applytoproducthierarchyboo )",
                      "select * from pvaccountunbilled3 where account_num = accountnum",
                      "select /*+ indexscan(cdr costedevent_pk) */ cdr.event_source , cdr.event_seq , cdr.event_attr_24 , min(cdr.event_dtm) as min_event_dtm_ppu , max(cdr.event_dtm) as max_event_dtm_ppu , sum(cdr.event_cost_mny) / $27 as sum_event_cost_mny_ppu from ais_costedevent cdr where cdr.account_num = get_data.account_num and cdr.event_dtm between greatest(get_data.start_dtm, get_data.next_bill_dtm - case to_char(get_data.next_bill_dtm, $28) when $29 then interval $30 else interval $31 end) and least(get_data.end_dtm, coalesce(get_data.end_dtm, sysdate())) and cdr.event_source = get_data.product_label and cdr.event_cost_mny > $32 and cdr.event_type_id = $33 group by cdr.event_source , cdr.event_seq , cdr.event_attr_24",
                      "select /*+ indexscan(chp,custhasproduct_pk) (cpd,custproductdetails_pk)*/ cast(chp.product_seq as text), cast(it.translated_item as text), cast(ed.discount_name as text), cast(chp.parent_product_seq as text) , cast(to_char(cpd.start_dat, $5) as text), cast(it.internal_item as text) from ais_custproductdetails cpd, ais_custhasproduct chp, ais_custproductattrdetails cpad, ais_custproducttariffdetails cptd, ais_tariffelementdiscount ted, ais_eventdiscount ed, ais_cataloguechange cc, ais_itemtranslation it where cpd.customer_ref = $1 and cpd.account_num = $2 and cpd.start_dat <= to_date($3 , $6) and (cpd.end_dat >= to_date($4 , $7 ) or cpd.end_dat is null) and chp.customer_ref = cpd.customer_ref and chp.product_seq = cpd.product_seq and cptd.customer_ref = cpd.customer_ref and cptd.product_seq = cpd.product_seq and cpad.customer_ref = cpd.customer_ref and cpad.product_seq = cpd.product_seq and ted.tariff_id = cptd.tariff_id and ted.product_id = chp.product_id and ted.event_discount_id = ed.event_discount_id and ted.catalogue_change_id = cc.catalogue_change_id and ed.catalogue_change_id = cc.catalogue_change_id and ted.catalogue_change_id = (select catalogue_change_id from ais_cataloguechange where catalogue_status = $8 and currency_code = $9) and it.translatable_item_id = $10 and it.language_id = $11 and cpad.attribute_value = it.internal_item order by cpd.start_dat desc",
                      "select /*+ indexscan(ct custproducttariffdetails_pk) */ distinct cd.account_num, ct.tariff_id, ct.product_seq, cps2.effective_dtm as start_dat, cps3.effective_dtm - interval $23 as end_dat, te.product_id, tt.tariff_name, replace(o.package_type, chr($24), $25) as package_type, a.tariff_type from ais_custproducttariffdetails ct, ais_custproductdetails cd, ais_custproductstatus cps2, ais_custproductstatus cps3, ais_tariffelement te, ais_tariff tt, cc_tbl_dat_pmt_tariff_promo o, cc_tbl_dat_ops_chk_allpromo a where ct.product_seq = cd.product_seq and ct.customer_ref = cd.customer_ref and ct.start_dat = cd.start_dat and ct.start_dat <= rnext_bill_dtm - interval $26 and cd.account_num = raccount_num and ct.tariff_id in ( select t.tariff_id from cc_tbl_dat_ops_list_criteria t where t.process_name = $27 and t.start_dat <= clock_timestamp() and (t.end_dat >= clock_timestamp() or t.end_dat is null) ) and (ct.end_dat >= case when to_char(rnext_bill_dtm, $28) = $29 then rnext_bill_dtm - interval $30 else rnext_bill_dtm - interval $31 end or ct.end_dat is null) and te.tariff_id = ct.tariff_id and te.catalogue_change_id = catalogue_change_id_tmp and te.start_dat <= rnext_bill_dtm - interval $32 and (te.end_dat >= case when to_char(rnext_bill_dtm, $33) = $34 then rnext_bill_dtm - interval $35 else rnext_bill_dtm - interval $36 end or te.end_dat is null) and tt.tariff_id = ct.tariff_id and tt.tariff_id = o.tariff_id and ct.tariff_id = a.tariff_id and (a.next_bill_date1 is null or a.next_bill_date2 is null) and tt.catalogue_change_id = te.catalogue_change_id and tt.sales_start_dat <= rnext_bill_dtm - interval $37 and (tt.sales_end_dat >= case when to_char(rnext_bill_dtm, $38) = $39 then rnext_bill_dtm - interval $40 else rnext_bill_dtm - interval $41 end or tt.sales_end_dat is null) and ct.customer_ref = cps2.customer_ref and ct.product_seq = cps2.product_seq and cps2.product_status = $42 and cps2.effective_dtm = ( select min(cps4.effective_dtm) from ais_custproductstatus cps4 where cps4.customer_ref = cps2.customer_ref and cps4.product_seq = cps2.product_seq and cps4.product_status = cps2.product_status ) and ct.customer_ref = cps3.customer_ref and ct.product_seq = cps3.product_seq and cps3.product_status = $43",
                      "select /*+ indexscan(d custproducttariffdetails_pk) */ distinct cd.account_num,ct.tariff_id, ct.product_seq, cps2.effective_dtm start_dat , cps3.effective_dtm - (interval $22) end_dat , te.product_id,tt.tariff_name from ais_custproducttariffdetails ct , ais_custproductdetails cd , ais_custproductstatus cps2 , ais_custproductstatus cps3 , ais_tariffelement te , ais_tariff tt where ct.product_seq=cd.product_seq and ct.customer_ref=cd.customer_ref and ct.start_dat=cd.start_dat and ct.start_dat <= rnext_bill_dtm - (interval $23) and cd.account_num = raccount_num and ct.tariff_id in (select t.tariff_id from cc_tbl_dat_ops_list_criteria t where t.process_name = $24 and t.start_dat <= sysdate() and (t.end_dat >= sysdate() or t.end_dat is null) ) and (ct.end_dat >= (rnext_bill_dtm - (interval $25)) or ct.end_dat is null ) and te.tariff_id = ct.tariff_id and te.catalogue_change_id = (select cl.catalogue_change_id from ais_cataloguechange cl where cl.catalogue_status = $26 and cl.catalogue_change_id = te.catalogue_change_id and cl.currency_code = $27 ) and te.start_dat <= rnext_bill_dtm - (interval $28) and (te.end_dat >= (rnext_bill_dtm - (interval $29)) or te.end_dat is null) and tt.tariff_id = ct.tariff_id and tt.catalogue_change_id = te.catalogue_change_id and tt.sales_start_dat <= rnext_bill_dtm - (interval $30) and (tt.sales_end_dat >= (rnext_bill_dtm - (interval $31)) or tt.sales_end_dat is null) and ct.customer_ref = cps2.customer_ref and ct.product_seq = cps2.product_seq and cps2.product_status = $32 and cps2.effective_dtm = (select min(cps4.effective_dtm) from ais_custproductstatus cps4 where cps4.customer_ref = cps2.customer_ref and cps4.product_seq = cps2.product_seq and cps4.product_status = cps2.product_status ) and ct.customer_ref = cps3.customer_ref and ct.product_seq = cps3.product_seq and cps3.product_status = $33",
                      "select /*+ indexscan(its itemtranslation_pk) indexscan(cpt custproducttariffdetails_pk) indexscan(cpd custproductdetails_pk) indexscan(t tariff_pk) */ cast(product_seq as text), cast(discount_name as text) from (select max (cpt.product_seq) as product_seq, split_part(its.translated_item,$9,$10) as discount_name from ais_custproducttariffdetails cpt, ais_custproductdetails cpd, ais_itemtranslation its, ais_tariffelementdiscount ted, ais_eventdiscount ed, ais_cataloguechange catchange where catchange.catalogue_change_id = (select /*+ indexscan(catchange cataloguechange_pk) */ catalogue_change_id from ais_cataloguechange catchange where currency_code = $11 and catalogue_status = $12) and cpd.account_num = $1 and cpd.customer_ref = $2 and cpd.customer_ref = cpt.customer_ref and cpd.product_seq = cpt.product_seq and ted.catalogue_change_id = catchange.catalogue_change_id and ted.tariff_id = cpt.tariff_id and ted.event_discount_id = ed.event_discount_id and ted.catalogue_change_id = ed.catalogue_change_id and ed.discount_name = its.internal_item and its.language_id = $13 and its.translatable_item_id = $14 and cpt.start_dat <= to_date ($3 , $15) and coalesce (cpt.end_dat, current_date) >= to_date ($4 , $16) and cpt.start_dat <= coalesce(ted.end_dat,current_date) and coalesce(cpt.end_dat,current_date) >= ted.start_dat group by split_part(its.translated_item,'^',1) union select max (cpt.product_seq) as product_seq, its.translated_item as discount_name from ais_custproducttariffdetails cpt, ais_custproductdetails cpd, ais_itemtranslation its, ais_tariffelementdiscount ted, ais_eventdiscount ed, ais_cataloguechange catchange where catchange.catalogue_change_id = (select /*+ indexscan(catchange cataloguechange_pk) */ catalogue_change_id from ais_cataloguechange catchange where currency_code = $17 and catalogue_status = $18) and cpd.account_num = $5 and cpd.customer_ref = $6 and cpd.customer_ref = cpt.customer_ref and cpd.product_seq = cpt.product_seq and ted.catalogue_change_id = catchange.catalogue_change_id and ted.tariff_id = cpt.tariff_id and ted.event_discount_id = ed.event_discount_id and ted.catalogue_change_id = ed.catalogue_change_id and ed.discount_name = its.internal_item and its.language_id = $19 and its.translatable_item_id = $20 and cpt.start_dat <= to_date ($7 , $21) and coalesce (cpt.end_dat, current_date) >= to_date ($8 , $22) and cpt.start_dat <= coalesce(ted.end_dat,current_date) and coalesce(cpt.end_dat,current_date) >= ted.start_dat group by its.translated_item ) t order by discount_name",
                      "select /*+ indexscan(s,idx_inv_sum_vat_date) */ s.account_num from cc_tbl_dat_inv_summary s,ais_billsummary bs ,ais_customerattributes c,ais_customer cc,ais_invoicingcompany icc where s.processed_dtm = to_date($1,$2) and s.customer_ref = c.customer_ref and s.account_num = bs.account_num and s.bill_sequence = bs.bill_seq and bs.bill_type_id = $3 and s.invoice_type = $4 and (s.balance_out_mny/$5 <= $6 or s.invoice_total_mny/$7 = $8) and cc.customer_type_id = $9 and cc.customer_ref = c.customer_ref and c.mail_group_id is null /*add 03102012*/ and icc.invoicing_co_name=s.invoicing_co_name and icc.invoicing_co_id<>$10 union select /*+ indexscan(s,idx_inv_sum_vat_date) */ s.account_num from cc_tbl_dat_inv_summary s,ais_billsummary bs ,ais_customerattributes c,ais_customer cc,ais_invoicingcompany icc where s.processed_dtm = to_date($11,$12) and s.customer_ref = c.customer_ref and s.account_num = bs.account_num and s.bill_sequence = bs.bill_seq and bs.bill_type_id = $13 and s.invoice_type = $14 and (s.balance_out_mny/$15 <= $16 or s.invoice_total_mny/$17 = $18) and cc.customer_type_id = $19 and cc.customer_ref = c.customer_ref and c.mail_group_id is null and icc.invoicing_co_name=s.invoicing_co_name and icc.invoicing_co_id=$20",
                      "select /*+ ordered index(cprd custprodratingdiscount_uk1) use_nl (cprd)*/ t.event_num, cprd.account_num from tmpdiscountguiding t cross join custprodratingdiscount cprd where cprd.customer_ref = t.customer_ref and cprd.aggregation_level = t.aggregation_level and cprd.discount_ref = t.discount_ref and cprd.start_dtm <= t.event_end_dtm and coalesce(cprd.usage_end_dtm, t.event_start_dtm) >= t.event_start_dtm and coalesce(logically_deleted_boo, $1) = $2 and cprd.domain_id = t.domain_id order by cprd.customer_ref, cprd.product_seq, cprd.event_discount_id, cprd.event_source, cprd.start_dtm for update",
                      "select /*+ ordered index(cprd custprodratingdiscount_uk1) use_nl (cprd)*/ t.event_num, cprd.account_num from tmpdiscountguiding t cross join custprodratingdiscount cprd where cprd.customer_ref = t.customer_ref and cprd.aggregation_level = t.aggregation_level and cprd.discount_ref = t.discount_ref and cprd.start_dtm <= t.event_end_dtm and coalesce(cprd.usage_end_dtm, t.event_start_dtm) >= t.event_start_dtm and coalesce(logically_deleted_boo, 'f') = 'f' and cprd.domain_id = t.domain_id order by cprd.customer_ref, cprd.product_seq, cprd.event_discount_id, cprd.event_source, cprd.start_dtm for update",
                      "select /*+index (costgroupxref costgroupxref_pk)*/ pvcostgroupxref2.banding_model_id , pvcostgroupxref2.costgroup_1_id , pvcostgroupxref2.costgroup_2_id , pvcostgroupxref2.cost_band_id , pvcostgroupxref2.end_dat , pvcostgroupxref2.rating_catalogue_id , pvcostgroupxref2.start_dat from pvcostgroupxref2 pvcostgroupxref2 where ((((pvcostgroupxref2.banding_model_id=$1 )and(pvcostgroupxref2.costgroup_1_id=$2 ))and(pvcostgroupxref2.costgroup_2_id=$3 ))and(pvcostgroupxref2.start_dat<=$4 ))and(pvcostgroupxref2.rating_catalogue_id=$5 )",
                      "select a.* from account a where a.account_num = p_accountnum for update",
                      "select a.* from customer a where a.customer_ref = p_customerref",
                      "select a.account_num from pvaccountratingsummary12 ars, pvaccount36 a where a.account_num = accountnum and a.account_num = ars.account_num and (ars.event_seq >= a.bill_event_seq or ars.event_seq = $2) order by ars.account_num, ars.event_seq, ars.event_process_group for update",
                      "select acc.allow_prod_changes_from_dat,cpc.billed_to_dat from account acc, custproductcharge cpc where cpc.customer_ref = customerref and cpc.product_seq = productseq::bigint and cpc.charge_type = thechargetype and cpc.billed_to_dat is not null and cpc.cpc_status <> gnvsqlcustproductcharge$gnvprodchargelogicallydeleted() and acc.account_num = cpc.account_num order by acc.allow_prod_changes_from_dat desc",
                      "select account.last_bill_seq , account.earliest_prod_change_dat , account.allow_prod_changes_from_dat , account.earliest_disc_change_dat from account account where ((account.account_num=$1 )and(account.domain_id>=$2 ))and(account.domain_id<=$3 ) for update skip locked",
                      "select account.next_bill_dtm , accountdetails.bill_period , accountdetails.bill_period_units , accountdetails.bill_day_of_the_month from account account cross join accountdetails accountdetails where ((((account.account_num=$1 )and(account.account_num=accountdetails.account_num))and(accountdetails.start_dat<=$2 ))and((accountdetails.end_dat is null )or(accountdetails.end_dat>=$3 )))and(account.domain_id=$4 )",
                      "select account_payment_status from accountpayment where account_num = p_accountnumber and account_payment_seq = p_payseq",
                      "select accountdetails.account_num , accountdetails.start_dat , accountdetails.accounting_method , accountdetails.announcements_supported_mode , accountdetails.auto_deposit_alloc_for_oia_boo , accountdetails.billing_contact_seq , accountdetails.bills_per_statement , accountdetails.bill_day_of_the_month , accountdetails.bill_handling_code , accountdetails.bill_period , accountdetails.bill_period_units , accountdetails.bill_style_id , accountdetails.credit_class_id , accountdetails.credit_limit_mny , accountdetails.currency_conv_cal_day , accountdetails.currency_mode , accountdetails.default_service_address_seq , accountdetails.domain_id , accountdetails.donated_discount_cps_id , accountdetails.end_dat , accountdetails.event_deletion_mode , accountdetails.event_disc_account_num , accountdetails.event_tidemark , accountdetails.excess_pymt_alloc_for_oia_boo , accountdetails.mask_bill_boo , accountdetails.mask_reguided_bill_boo , accountdetails.mask_reguided_store_boo , accountdetails.mask_store_boo , accountdetails.negative_inv_alloc_for_oia_boo , accountdetails.opt_out_of_announcements , accountdetails.package_disc_account_num , accountdetails.payment_auto_create_boo , accountdetails.payment_method_id , accountdetails.prod_charge_profile_id , accountdetails.recharge_payments_boo , accountdetails.reguided_event_del_mode , accountdetails.tax_in_realtime_for_ocsbal_boo , accountdetails.ticket_boo from accountdetails accountdetails where (accountdetails.account_num=$1 )and(accountdetails.domain_id=$2 )",
                      "select accountrating.account_num , accountrating.domain_id , accountrating.event_process_group , accountrating.actual_bill_dtm , accountrating.authorisations_mny , accountrating.bill_period_num , accountrating.customer_category , accountrating.discount_usage_action_dat , accountrating.dormancy_check_dat , accountrating.event_seq_num , accountrating.external_balance_liid , accountrating.fast_cache_seq , accountrating.last_bill_dtm , accountrating.lc_state_id , accountrating.lc_state_start_dtm , accountrating.lc_state_timeout_dtm , accountrating.next_bill_dtm , accountrating.partials_mny , accountrating.post_discount_usage_mny , accountrating.pre_discount_usage_mny , accountrating.rate_event_seq , accountrating.rating_discount_scope , accountrating.rating_status , accountrating.transfer_usage_flag , accountrating.usage_lock_dtm from accountrating accountrating where ((accountrating.account_num=$1 )and(accountrating.event_process_group=$2 ))and(accountrating.domain_id=$3 )",
                      "select accountrating.account_num , accountrating.domain_id , accountrating.event_process_group , accountrating.actual_bill_dtm , accountrating.authorisations_mny , accountrating.bill_period_num , accountrating.customer_category , accountrating.discount_usage_action_dat , accountrating.dormancy_check_dat , accountrating.event_seq_num , accountrating.external_balance_liid , accountrating.fast_cache_seq , accountrating.last_bill_dtm , accountrating.lc_state_id , accountrating.lc_state_start_dtm , accountrating.lc_state_timeout_dtm , accountrating.next_bill_dtm , accountrating.partials_mny , accountrating.post_discount_usage_mny , accountrating.pre_discount_usage_mny , accountrating.rate_event_seq , accountrating.rating_discount_scope , accountrating.rating_status , accountrating.transfer_usage_flag , accountrating.usage_lock_dtm from accountrating accountrating where ((accountrating.account_num=$1 )and(accountrating.event_process_group=$2 ))and(accountrating.domain_id=$3 ) for update",
                      "select accountratingsummary.account_num , accountratingsummary.domain_id , accountratingsummary.event_process_group , accountratingsummary.event_seq , accountratingsummary.bill_period_num , accountratingsummary.cloned_event_num , accountratingsummary.costedevent_anti_rec_count , accountratingsummary.costedevent_rec_count , accountratingsummary.customer_category , accountratingsummary.drop_event_count , accountratingsummary.drop_unlimited_count , accountratingsummary.event_seq_num , accountratingsummary.event_storage_dat , accountratingsummary.external_balance_liid , accountratingsummary.fast_cache_seq , accountratingsummary.last_costed_message_dtm , accountratingsummary.latest_rated_event_dtm , accountratingsummary.pending_otc_lines_tax_mny , accountratingsummary.pending_otc_mny , accountratingsummary.pending_otc_tax_mny , accountratingsummary.policy_id , accountratingsummary.policy_threshold_mny , accountratingsummary.rated_anti_event_count , accountratingsummary.rated_event_count , accountratingsummary.rated_event_mny , accountratingsummary.rated_event_tax_mny from accountratingsummary accountratingsummary where (((accountratingsummary.account_num=$1 )and(accountratingsummary.event_process_group=$2 ))and(accountratingsummary.event_seq=$3 ))and(accountratingsummary.domain_id=$4 )",
                      "select accountstatus.account_status from accountstatus accountstatus where ((accountstatus.account_num=$1 )and(accountstatus.effective_dtm<=$2 ))and(accountstatus.domain_id=$3 ) order by accountstatus.effective_dtm desc",
                      "select act.datid, act.datname, act.pid, act.usesysid, act.usename, act.application_name, text(act.client_addr), act.client_hostname, act.client_port, act.backend_start, act.xact_start, act.query_start, act.state_change, case when act.wait_event_type is null then $1 else act.wait_event_type end as wait_event_type,case when act.wait_event is null then $2 else act.wait_event end as wait_event, act.state, act.backend_xid, act.backend_xmin, act.query, act.backend_type,(pg_blocking_pids(act.pid))[$3], cardinality(pg_blocking_pids(act.pid)),blk.state,gpi.pid,act.query_id, gpi.query, gpi.cmdtype, act.leader_pid from pg_stat_activity act left join pg_stat_activity blk on (pg_blocking_pids(act.pid))[$4] = blk.pid,get_parsedinfo(act.pid) gpi where act.state =$5 and act.pid != pg_backend_pid()",
                      "select ais_gnvacc$modifyaccount( p_accountnum => p_accntnbr, p_fromdat => p_effectivedate, p_uptodat => $66, p_bitflags => v_bf_modifyaccount20nc::varchar, p_accountname => p_newaccnt_name, p_currencycode => p_newaccnt_currencycode, p_nextbilldtm => p_newaccnt_nextbilldtm, p_billperiod => p_newaccdetl_billperiod, p_billperiodunits => p_newaccdetl_billperiodunit, p_billstyleid => p_newaccdetl_billstyleid, p_paymentmethodid => p_newaccdetl_paymentmtdid, p_billingcontactseq => p_newaccdetl_billcontseq, p_creditclassid => p_newaccdetl_creditclassid, p_creditlimitmny => p_newaccdetl_creditlimitmny, p_infocurrencycode => p_newaccnt_infocurrencycd, p_packagediscaccnum => p_newaccdetl_pkgdiscaccnum, p_eventdiscaccnum => p_newaccdetl_eventdiscaccnum, p_accountingmethod => p_newaccdetl_accountingmethod, p_statementfrequency => p_newaccdetl_billsperstmt, p_billhandlingcode => p_newaccdetl_billhandlingcd, p_defaultserviceaddr => p_newaccdetl_defserviceaddrid, p_invoicingcoid => p_newaccnt_invoicingcoid, p_defaultcpsid => p_newaccnt_defaultcpsid, p_donateddiscountcps => p_newaccdetl_donatedisccpsid, p_autodelbilledeventboo => p_newaccnt_delevonbillsboo, p_businessboo => $67, -- business fag - null since tax model is vat p_endcustomerboo => $68, -- end customer flag - null since tax model is vat p_prepayboo => p_newaccnt_prepayboo, p_thresholdsetid => p_newaccnt_thresholdsetid, p_taxinclusiveboo => p_newaccnt_taxinclusiveboo, p_eventsperday => v_eventsperday, -- change from 1 to v_eventsperday by george 20180312 p_holidayprofileid => $69, p_templateref => $70, p_eventdeletionmode => $71, p_reguidedeventdelmode => $72, p_maskeventsonbillboo => $73, p_maskeventsinstoreboo => $74, p_maskreguidedonbillboo => $75, p_maskreguidedinstoreboo => $76, p_ticketboo => $77, p_languageid => $78, p_lcprofileid => $79, p_lcstateid => $80, p_nextlcsprocessdays => $81, p_lcstatereasontext => $82, p_csruser => $83, p_prodchargeprofileid => $84, p_disablerealtimebillboo => $85, p_eventtidemark => $86, p_rechargepaymentsboo => $87, p_rechargeeventtypeid => $88, p_rechargeeventsource => $89, p_outputeventtofileboo => $90, p_aggregatestartdat => $91, p_eventdispatchprofileid => $92, p_dormancylcprofileid => $93, p_dormancychecknbrofdays => $94, p_excludefrompromoboo => $95, p_taxreengineerboo => $96, p_creditcheckedboo => $97, p_billdayofthemonth => $98, p_eventstoretype => $99, p_currencymode => $100, p_currencyconvcalday => $101, p_seteventtransitionseq => $102, p_announcementsmode => $103, p_autodepallocforoiaboo => $104, p_excesspymtallocforoiaboo => $105, p_negativeinvallocforoiaboo => $106, p_ustaccountclassid => $107, p_paymentautocreateboo => $108, p_accountlockversion => v_accountlockversion )",
                      "select ais_gnvpay$createallocation( accountnumber => (p_inaccountnum), billseq => (to_number(v_billseqlist)), payseq => (v_aps), allocmny => ((coalesce(to_number(v_paymentallocationmny),$19)+ v_prevtaxchangemny)*$20), receivableclassid => ($21), notes => ($22), p_recgrpattr1 => $23, p_recgrpattr2 => $24, p_recgrpattr3 => $25, p_recgrpattr4 => $26, p_recgrpattr5 => $27, p_recgrpattr6 => $28 )",
                      "select ais_gnvproductstatus$createcustprodstatus ( p_customerref => v_customerref, p_productseq => pinout_productseq, p_startdatetime => v_effectivedate, p_nextstatusdatetime => $17, -- pin_nextstatusdatetime , p_productstatus => $18, p_statusreason => pin_statusreason, p_earlytermsurchargeboo => cc_f_get_crm_constant_val($19), -- pin_earlytermsurchargeboo , p_applytoproductheirarchyboo => cc_f_get_crm_constant_val($20) -- pin_applytoproductheirarchyboo )",
                      "select ais_gnvproductstatus$modifycustprodstatus ( p_customerref => v_customerref, p_productseq => get_data.product_seq, p_productstatus => $29, -- date that product should be terminate p_oldstartdatetime => v_effectdtm, -- for terminate status this parameter doesn't need. p_oldstatusreason => v_reasontxt, -- pin_productstatus p_newstartdatetime => v_enddate, p_newstatusreason => pin_statusreason, -- cc_pkg_constant.early_term_surcharge_boo --pin_earlytermsurchargeboo p_earlytermsurchargeboo => $30, p_applytoproducthierarchyboo => $31 )",
                      "select ais_gnvproductstatus$modifycustprodstatus( p_customerref => v_customerref , p_productseq => v_promoseq , p_productstatus => $31 , ---date that product should be terminate p_oldstartdatetime => v_effectdtm , ---for terminate status this parameter doesn't need. p_oldstatusreason => v_reasontxt,--pin_productstatus p_newstartdatetime => v_terminatedisdtm,--perform to_date(pin_effectivedate, c_dtm_format), p_newstatusreason => pin_statusreason, --cc_pkg_constant.early_term_surcharge_boo --pin_earlytermsurchargeboo p_earlytermsurchargeboo => $32, --cc_pkg_constant.apply_prod_hierarchy_boo --pin_applytoproductheirarchyboo p_applytoproducthierarchyboo => $33 --upgrade rb9.0 -- 18-jul-2017 --noph )",
                      "select ars.rated_event_mny, ars.pending_otc_mny, ars.bill_period_num, ars.event_seq, ars.pending_otc_tax_mny, ars.pending_otc_lines_tax_mny, ars.rated_event_tax_mny from account a left join accountratingsummary ars on ars.account_num = a.account_num and ars.domain_id = a.domain_id and ars.bill_period_num >= coalesce(a.last_bill_period_num, $3) where a.account_num = $1 and a.domain_id = $2",
                      "select b.account_num from cc_tbl_dat_inv_summary b, cc_tbl_dat_inv_mob_summary a where cast(b.processed_dtm as date) = to_date('01011960','ddmmyyyy') and (a.monthly_fee_mny < 0 or a.one_time_charge_mny < 0 or a.lump_sum_mny < 0 or a.call_and_vas_charge < 0 or a.prd_call_and_vas_charge < 0 or a.ir_markup_charge < 0 or a.prd_ir_markup_charge < 0 or a.invoice_total_mny < 0 or a.nettaxable_mny < 0 or a.gross_nontaxable_mny < 0 or a.netnontaxable_mny < 0 or a.nontaxable_disc_mny< 0 ) and a.invoice_num=b.invoice_num and cast(a.processed_dtm as date) = to_date('01011960','ddmmyyyy')",
                      "select billing_offer_id from billingoffer where account_num = p_accountnum and offer_status = gnvintgen$gnvofferbeingconstructed()",
                      "select billing_offer_id from billingoffer where customer_ref = p_customerref and offer_status = gnvintgen$gnvofferbeingconstructed()",
                      "select billproductcharge.charge_end_dat from billproductcharge billproductcharge where ((billproductcharge.account_num=$1 )and(billproductcharge.charge_end_dat<$2 ))and(billproductcharge.domain_id=$3 ) order by billproductcharge.charge_end_dat desc",
                      "select billsummary.account_num , billsummary.bill_seq , billsummary.bill_version , billsummary.actual_bill_dtm , billsummary.adfg_processed_dtm , billsummary.adjustments_mny , billsummary.allocated_dep_bal_mny , billsummary.archive_dat , billsummary.balance_fwd_mny , billsummary.balance_out_mny , billsummary.billed_with_bill_seq , billsummary.billing_offer_id , billsummary.bill_dtm , billsummary.bill_enrichment_status , billsummary.bill_handling_code , billsummary.bill_label , billsummary.bill_request_seq , billsummary.bill_settled_boo , billsummary.bill_settled_dtm , billsummary.bill_status , billsummary.bill_type_id , billsummary.cancellation_dtm , billsummary.cancellation_request_dat , billsummary.cancelled_bill_fde_extract_id , billsummary.cancelled_reason_txt , billsummary.charge_seq , billsummary.chase_debt_mny , billsummary.collection_notify_boo , billsummary.credit_adj_billed_to_dtm , billsummary.current_dispute_mny , billsummary.debit_adj_billed_to_dtm , billsummary.debt_start_dat , billsummary.deferred_charges_tot , billsummary.deposit_req_billed_to_dtm , billsummary.discounted_rerating_boo , billsummary.domain_id , billsummary.ebd_email_status , billsummary.end_of_bill_dtm , billsummary.event_archive_status , billsummary.event_billed_to_dtm , billsummary.event_del_no_archive_boo , billsummary.event_masked_boo , billsummary.event_seq , billsummary.expected_payreq_mny , billsummary.failed_payments_mny , billsummary.fde_extract_id , billsummary.hash_control , billsummary.hash_value , billsummary.info_currency_code , billsummary.info_invoice_mny , billsummary.invoice_net_mny , billsummary.invoice_num , billsummary.invoice_num_status , billsummary.invoice_register_id , billsummary.invoice_reg_status , billsummary.invoice_series_id , billsummary.invoice_tax_mny , billsummary.late_fee_mny , billsummary.loyalty_trans_billed_to_dtm , billsummary.max_billed_event_dtm , billsummary.max_rerated_event_dtm , billsummary.min_billed_event_dtm , billsummary.min_rerated_event_dtm , billsummary.modification_days , billsummary.ocr_num , billsummary.oefr_created_boo , billsummary.original_invoice_num , billsummary.orig_payment_due_dat , billsummary.otc_billed_to_dtm , billsummary.otc_mny , billsummary.outstanding_debt_mny , billsummary.override_bill_dtm , billsummary.overwritten_def_charge_tot , billsummary.payments_mny , billsummary.payment_due_dat , billsummary.pa_dp_invoice_bill_mny , billsummary.pa_fed_invoice_bill_mny , billsummary.pa_fed_invoice_due_mny , billsummary.pa_payment_mny , billsummary.points_adjusted , billsummary.points_earned , billsummary.points_expired , billsummary.points_fwd , billsummary.points_out , billsummary.points_redeemed , billsummary.random_hash , billsummary.refunds_mny , billsummary.replaces_invoice_num , billsummary.settlement_dtm , billsummary.settleup_charges_tot , billsummary.start_of_bill_dtm , billsummary.statement_boo , billsummary.tax_point_dat , billsummary.total_billed_event_cost_mny , billsummary.total_billing_event_cost_mny , billsummary.total_rated_event_cost_mny , billsummary.trans_billed_to_dtm , billsummary.ust_currency_code , billsummary.ust_linesandlocs_billed_to_dat , billsummary.ust_linesandlocs_detail_level , billsummary.ust_maxtax_transaction_status from billsummary billsummary where ((billsummary.account_num=$1 )and(billsummary.bill_seq=$2 ))and(billsummary.bill_version=$3 ) for update",
                      "select billsummary.bill_dtm from billsummary billsummary where (((billsummary.account_num=$1 )and(billsummary.bill_seq=$2 ))and(billsummary.domain_id>=$3 ))and(billsummary.domain_id<=$4 ) for update",
                      "select br.* from billreceivable br, pvbillsummaryall bs, receivableclass rc, paymentpriority pp where br.account_num = p_accountnumber and br.bill_seq = v_billseq and br.bill_version = (select max(bill_version) from pvbillsummaryall where account_num = p_accountnumber and bill_seq = v_billseq) and bs.bill_settled_boo = 'f' and bs.bill_status in (1, 7, 8, 28) and br.account_num = bs.account_num and br.bill_seq = bs.bill_seq and br.bill_version = bs.bill_version and (p_receivableclassid is null or br.receivable_class_id = p_receivableclassid) and br.receivable_class_id = rc.receivable_class_id and rc.priority_id = pp.priority_id and coalesce(bs.billing_offer_id::text,'') = '' and (v_recgrpattr1 is null or br.receivables_group_attr_1 = v_recgrpattr1) and (v_recgrpattr2 is null or br.receivables_group_attr_2 = v_recgrpattr2) and (v_recgrpattr3 is null or br.receivables_group_attr_3 = v_recgrpattr3) and (v_recgrpattr4 is null or br.receivables_group_attr_4 = v_recgrpattr4) and (v_recgrpattr5 is null or br.receivables_group_attr_5 = v_recgrpattr5) and (v_recgrpattr6 is null or br.receivables_group_attr_6 = v_recgrpattr6) order by pp.age_independent_boo desc, pp.priority_number, rc.receivable_class_id, br.receivables_group_attr_1, br.receivables_group_attr_2, br.receivables_group_attr_3, br.receivables_group_attr_4, br.receivables_group_attr_5, br.receivables_group_attr_6",
                      "select c.domain_id from customer c where c.customer_ref = p_customerref",
                      "select cast(($1 - coalesce(max(bill_seq),$4) - $5) as text) from ais_billsummary where account_num= $2 and bill_seq < $3 and bill_status != $6 and bill_type_id not in ($7,$8)",
                      "select cast(account_num as varchar) from ais_custproductdetails where customer_ref = $1 and product_seq = $2 limit $3",
                      "select cast(ad.bill_handling_code as text) , cast(cd.mobile_contact_tel as text) , cast(cd.email_address as text) from ais_accountdetails ad, ais_contactdetails cd where ad.billing_contact_seq = cd.contact_seq and cd.customer_ref = $1 and ad.account_num = $2 and ((ad.start_dat <= to_date($3 ,$9) and ad.end_dat >=date_trunc($10,to_date($4 ,$11))) or (ad.start_dat <= to_date($5 ,$12)and ad.end_dat is null )) and ((cd.start_dat <= to_date($6 ,$13)and cd.end_dat >=date_trunc($14,to_date($7 ,$15))) or (cd.start_dat <= to_date($8 ,$16)and cd.end_dat is null )) order by ad.start_dat asc",
                      "select cast(bill_seq as text), cast(to_char(actual_bill_dtm,$3) as text), cast(to_char(isum.debt_analysis_dtm,$4) as text) from ais_billsummary bs left outer join cc_tbl_dat_inv_summary isum on bs.account_num = isum.account_num and bs.bill_seq = isum.bill_sequence where bs.account_num = $1 and bill_type_id not in ($5,$6) and bill_status in ($7,$8,$9) and bill_seq <= $2 order by cast(bill_seq as integer) desc limit $10",
                      "select cast(c.event_source_label as text), cast(c.event_source as text), cast(c.event_type_id as text), cast (c.product_seq as text), cast(to_char (c.start_dtm, $3) as text), cast(to_char (c.end_dtm, $4) as text) from ais_custproductdetails b, ais_custeventsource c where b.customer_ref = $1 and b.account_num = $2 and c.customer_ref = b.customer_ref and c.product_seq = b.product_seq",
                      "select cast(case when c.tax_exempt_boo = $7 then $8 when c.tax_exempt_boo = $9 then (select tax_rate_pct from ais_taxcodedetails where taxcode_id = $10 and start_dat <= to_date($1 ,$11) and (end_dat >= to_date($2 ,$12) or end_dat is null)) end as text), cast(t.tax_point as text) from ais_account a,ais_contractedpointofsupply c, cc_tbl_dat_pc_tax_point t, ais_invoicingcompany ic where a.account_num=$3 and a.default_cps_id = c.cps_id and t.start_dat <= to_date($4 ,$13) and (t.end_dat >= to_date($5 ,$14) or t.end_dat is null) and ic.invoicing_co_name = $6 and ic.invoicing_co_id = t.invoicing_co_id",
                      "select cast(cmp.tariff_name as text) from cc_tbl_dat_inv_main_promotion cmp where cmp.tariff_id in ( $1 )",
                      "select cast(coalesce(sum(ap.account_payment_mny),$7) as text) from accountpayment ap left outer join ais_allocationtobill atb on ap.account_num = atb.account_num and ap.account_payment_seq = atb.account_payment_seq inner join cc_tbl_dat_pc_add_info pai on ap.account_num=pai.account_num and ap.account_payment_seq=pai.account_payment_seq where ap.customer_ref=$1 and ap.account_num=$2 and ap.account_payment_status = $8 and pai.payment_source_ref is null and pai.payment_source_type = $9 and ((atb.account_payment_seq is not null and ap.created_dtm >= to_timestamp($3 ,$10) and ap.created_dtm < to_timestamp($4 ,$11)) or (atb.account_payment_seq is null and ap.created_dtm >= to_timestamp($5 ,$12) and ap.created_dtm < to_timestamp($6 ,$13)) )",
                      "select cast(coalesce(sum(ex.excess_balance_mny)/$4,$5) as text) prevappbal from cc_tbl_dat_pc_add_info pai, ais_physicalpayment pp, ais_accountpayment ap, cc_tbl_dat_pc_excess_payment ex where ex.customer_ref = $1 and ex.account_num = $2 and ex.customer_ref = pai.customer_ref and ex.account_num = pai.account_num and ex.physical_payment_seq = pai.physical_payment_seq and pai.payment_source_type = $6 and pai.pay_for = $7 and pai.customer_ref = pp.customer_ref and pai.physical_payment_seq = pp.physical_payment_seq and pai.account_num = ap.account_num and pai.account_payment_seq = ap.account_payment_seq and pp.physical_payment_status = $8 and pp.created_dtm < to_timestamp($3 ,$9) + interval $10 day",
                      "select cast(coalesce(sum(ex.excess_balance_mny)/$5,$6) as text) app_overcycle from cc_tbl_dat_pc_add_info pai, ais_physicalpayment pp, ais_accountpayment ap, cc_tbl_dat_pc_excess_payment ex where ex.customer_ref = $1 and ex.account_num = $2 and ex.customer_ref = pai.customer_ref and ex.account_num = pai.account_num and ex.physical_payment_seq = pai.physical_payment_seq and pai.payment_source_type = $7 and pai.pay_for = $8 and pai.customer_ref = pp.customer_ref and pai.physical_payment_seq = pp.physical_payment_seq and pai.account_num = ap.account_num and pai.account_payment_seq = ap.account_payment_seq and pp.physical_payment_status = $9 and pp.created_dtm >= to_timestamp($3 ,$10) + interval $11 day and pp.created_dtm < to_timestamp($4 ,$12)",
                      "select cast(count(a.product_seq) as varchar) from ais_custproductdetails a where a.customer_ref = $1",
                      "select cast(count(b.product_seq) as text) from ais_custhasproduct a, ais_custproductdetails b where b.customer_ref=$1 and b.account_num=$2 and a.customer_ref=b.customer_ref and a.product_seq=b.product_seq and a.parent_product_seq is not null",
                      "select cast(count(c.product_seq) as text) from ais_custproductdetails b, ais_custeventsource c, ais_custproductattrdetails d where b.customer_ref = $1 and b.account_num = $2 and c.customer_ref = b.customer_ref and c.product_seq = b.product_seq and d.customer_ref = b.customer_ref and d.product_seq = b.product_seq and d.product_attribute_subid = $4 and d.attribute_value = c.event_source and b.product_label = c.event_source and c.event_type_id = $5 and trunc(c.start_dtm) <= (select to_date($3 , $6) + interval $7 month)",
                      "select cast(cpd.product_seq as text),cast(cpd.tariff_id as text),cast(chp.product_id as text) from ais_custproducttariffdetails cpd ,ais_custhasproduct chp where cpd.customer_ref = $1 and cpd.product_seq = $2 and cpd.customer_ref = chp.customer_ref and cpd.product_seq = chp.product_seq and cpd.start_dat <= to_date($3 ,$5) and (cpd.end_dat >= to_date($4 ,$6) or cpd.end_dat is null)",
                      "select cast(cpt.product_seq as text), cast(its.translated_item as text) , cast($17 as text) , cast(to_char(cpt.end_dat,$18) as text), cast(its.internal_item as text),(select cast(cpdt.attribute_value as text) from ais_custproductattrdetails_orig cpdt where cpdt.customer_ref=$1 and cpt.product_seq=cpdt.product_seq and cpdt.product_attribute_subid = $19 and cpdt.product_id in ($20,$21,$22) limit $23), cast(c.product_id as text), cast(cpt.tariff_id as text), cast(to_char(cpt.start_dat,$24) as text) ,cast((case when cpt.tariff_id = $25 then $26 else $27 end) as text) ,cast($28 as text) from ais_custproducttariffdetails cpt,ais_tariff t, ais_itemtranslation its, ais_tariffelement te, (select chp.customer_ref, chp.product_seq, cpd.end_dat, chp.product_id from ais_custproductdetails cpd , ais_custhasproduct chp where cpd.customer_ref = $2 and cpd.account_num = $3 and cpd.product_label = $4 and cpd.product_seq = $5 and cpd.customer_ref = chp.customer_ref and cpd.product_seq = chp.parent_product_seq and chp.product_id in ($29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55) ) c where cpt.customer_ref = c.customer_ref and cpt.product_seq = c.product_seq and t.catalogue_change_id = $6 and t.tariff_id = cpt.tariff_id and cpt.tariff_id not in ( select cast(value as integer) from cc_tbl_dat_job_param_r3 where job_name =$56 and param like $57) and cpt.start_dat <= to_timestamp($7 ,$58) + interval $59 month and coalesce(cpt.end_dat,current_date) >= to_timestamp($8 ,$60) and its.internal_item = t.tariff_name and te.tariff_id = t.tariff_id and te.catalogue_change_id=t.catalogue_change_id and te.product_id = c.product_id and te.in_advance_boo = $61 and its.translatable_item_id = $62 and its.language_id = $63 union select cast(cpt.product_seq as text), its.translated_item , $64 , to_char(cpt.end_dat,$65) , its.internal_item ,(select cast(cpdt.attribute_value as text) from ais_custproductattrdetails_orig cpdt where cpdt.customer_ref=$9 and cpt.product_seq=cpdt.product_seq and cpdt.product_attribute_subid = $66 and cpdt.product_id in ($67,$68,$69) limit $70), cast(c.product_id as text), cast(cpt.tariff_id as text), to_char(cpt.start_dat,$71) ,(case when cpt.tariff_id = $72 then $73 else $74 end) , $75 from ais_custproducttariffdetails cpt,ais_tariff t, ais_itemtranslation its, ais_tariffelement te, (select chp.customer_ref, chp.product_seq, cpd.end_dat, chp.product_id from ais_custproductdetails cpd , ais_custhasproduct chp where cpd.customer_ref = $10 and cpd.account_num = $11 and cpd.product_label = $12 and cpd.product_seq = $13 and cpd.customer_ref = chp.customer_ref and cpd.product_seq = chp.parent_product_seq and chp.product_id in ($76,$77,$78,$79,$80,$81,$82,$83,$84,$85,$86,$87,$88,$89,$90,$91,$92,$93,$94,$95,$96,$97,$98,$99,$100,$101,$102) ) c where cpt.customer_ref = c.customer_ref and cpt.product_seq = c.product_seq and t.catalogue_change_id = $14 and t.tariff_id = cpt.tariff_id and cpt.tariff_id not in ( select cast(value as integer) from cc_tbl_dat_job_param_r3 where job_name =$103 and param like $104) and cpt.start_dat <= to_timestamp($15 ,$105) and coalesce(cpt.end_dat,current_date) >= to_timestamp($16 ,$106) and its.internal_item = t.tariff_name and te.tariff_id = t.tariff_id and te.catalogue_change_id=t.catalogue_change_id and te.product_id = c.product_id and te.in_advance_boo = $107 and its.translatable_item_id = $108 and its.language_id = $109",
                      "select cast(cpt.product_seq as text), cast(its.translated_item as text) , cast(to_char(cpt.end_dat,$7) as text) , (select cast(cpdt.attribute_value as text) from ais_custproductattrdetails_orig cpdt where cpdt.customer_ref=$1 and cpt.product_seq=cpdt.product_seq and cpdt.product_attribute_subid = $8 and cpdt.product_id in ($9,$10,$11) limit $12), cast(to_char(cpt.start_dat,$13) as text), cast(its.internal_item as text) from ais_custproducttariffdetails cpt,ais_tariff t, ais_itemtranslation its, (select chp.customer_ref, chp.product_seq, cpd.end_dat, chp.product_id from ais_custproductdetails cpd , ais_custhasproduct chp where cpd.customer_ref = $2 and cpd.account_num = $3 and cpd.customer_ref = chp.customer_ref and cpd.product_seq = chp.product_seq and chp.parent_product_seq is null and chp.product_id in ($14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40) ) c where cpt.customer_ref = c.customer_ref and cpt.product_seq = c.product_seq and t.catalogue_change_id = $4 and cpt.tariff_id = t.tariff_id and cpt.start_dat <= to_date($5 ,$41) and coalesce(cpt.end_dat,current_date) >= to_date($6 ,$42) and t.tariff_name = its.internal_item and its.language_id = $43 and its.translatable_item_id = $44",
                      "select cast(cpt.product_seq as varchar) as product_sequence ,cast((case when trim(itm.shortname_eng||$7||itm.shortname_th) = $8 then $9 else trim(itm.shortname_eng||$10||itm.shortname_th) end) as varchar) as short_name, cast(its.translated_item as varchar) as detail_name, cast((select bdp.bill_eng || $11 || bdp.bill_thai from cc_tbl_dat_inv_bill_display bdp where cpt.customer_ref = bdp.customer_ref and cpt.tariff_id = bdp.tariff_id and cpt.product_seq = bdp.product_seq limit $12) as varchar) bill_display, cast(to_char(cpt.end_dat,$13) as varchar) as end_date , cast(to_char(cpt.start_dat,$14) as varchar) as start_date from ais_custproducttariffdetails cpt,ais_tariff t, ais_itemtranslation its, cc_tbl_dat_inv_main_promotion itm, (select chp.customer_ref, chp.product_seq, cpd.end_dat from ais_custproductdetails cpd , ais_custhasproduct chp where cpd.customer_ref = $1 and cpd.account_num = $2 and cpd.product_label = $3 and cpd.customer_ref = chp.customer_ref and cpd.product_seq = chp.parent_product_seq and chp.product_id in ($15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41) ) c where cpt.customer_ref = c.customer_ref and cpt.product_seq = c.product_seq and cpt.tariff_id = t.tariff_id and cpt.start_dat <= to_date($4 ,$42) and coalesce(cpt.end_dat,current_date) >= to_date($5 ,$43) and t.tariff_id = itm.tariff_id and itm.tariff_name = its.internal_item and its.language_id = $44 and its.translatable_item_id = $45 and t.catalogue_change_id = $6 order by start_date desc , end_date desc",
                      "select cast(event_source as text), cast (product_seq as text), cast(to_char (start_dtm, $7) as text) start_d, cast(to_char (end_dtm, $8) as text) from (select distinct event_source, c.product_seq , start_dtm, end_dtm from ais_custproductdetails b, ais_custeventsource c, ais_custproductattrdetails d where b.customer_ref = $1 and b.account_num = $2 and c.customer_ref = b.customer_ref and c.product_seq = b.product_seq and d.customer_ref = b.customer_ref and d.product_seq = b.product_seq and d.product_attribute_subid = $9 and d.attribute_value = c.event_source and b.product_label = c.event_source and c.event_type_id = $10 and c.start_dtm < to_date($3 ,$11) + $12 and coalesce(date_trunc($13,c.end_dtm), to_date($4 ,$14)) >= to_date($5 ,$15) and coalesce(date_trunc($16,c.end_dtm ) + $17 , to_date($6 ,$18) + $19 ) > c.start_dtm and d.product_attribute_subid in ( select d1.product_attribute_subid from ais_custproductattrdetails d1 where d1.customer_ref=c.customer_ref and d1.product_seq=c.product_seq and d1.attribute_value=c.event_source and d1.start_dat = ( select max(d2.start_dat) from ais_custproductattrdetails d2 where d2.customer_ref=c.customer_ref and d2.product_seq=c.product_seq and d2.attribute_value=c.event_source ) and d1.product_attribute_subid <> $20 )) t order by cast (product_seq as bigint) , start_dtm desc",
                      "select cast(event_source as text), cast (product_seq as text), cast(to_char (start_dtm, $7) as text) start_d, cast(to_char (end_dtm, $8) as text) from (select distinct event_source, c.product_seq , start_dtm, end_dtm from ais_custproductdetails b, ais_custeventsource c, ais_custproductattrdetails d where b.customer_ref = $1 and b.account_num = $2 and c.customer_ref = b.customer_ref and c.product_seq = b.product_seq and d.customer_ref = b.customer_ref and d.product_seq = b.product_seq and d.product_attribute_subid = $9 and d.attribute_value = c.event_source and b.product_label = c.event_source and c.event_type_id = $10 and c.start_dtm < to_date($3 ,$11) + $12 and coalesce(date_trunc($13,c.end_dtm), to_date($4 ,$14)) >= to_date($5 ,$15) and coalesce(date_trunc($16,c.end_dtm ) + $17 , to_date($6 ,$18) + $19 ) > c.start_dtm and d.product_attribute_subid in ( select d1.product_attribute_subid from ais_custproductattrdetails d1 where d1.customer_ref=c.customer_ref and d1.product_seq=c.product_seq and d1.attribute_value=c.event_source and d1.start_dat = ( select max(d2.start_dat) from ais_custproductattrdetails d2 where d2.customer_ref=c.customer_ref and d2.product_seq=c.product_seq and d2.attribute_value=c.event_source ) and d1.product_attribute_subid <> $20 )) t order by cast(event_source as text), product_seq, start_d",
                      "select cast(message_type as text), cast(message_tag as text), cast(campaign_code as text), cast(message_id as text), cast(priority as text), cast(variable_flag as text), cast(variable_value as text), cast(tray_id as text), cast(mass_campaign_flag as text), cast(customer_type as text) from (select distinct message_type, case when substr(a.message_type,$5,$6) = $7 then $8 when substr(a.message_type,$9,$10) = $11 then $12 when substr(a.message_type,$13,$14) = $15 then $16 when substr(a.message_type,$17,$18) = $19 then $20 when substr(a.message_type,$21,$22) = $23 then $24 when substr(a.message_type,$25,$26) = $27 then $28 when substr(a.message_type,$29,$30) = $31 then $32 else $33 end message_tag, a.campaign_code , a.message_insert_id message_id, a.priority, a.variable_flag, a.variable_value, coalesce(b.tray_id,$34) tray_id, a.mass_campaign_flag, upper(a.customer_type) customer_type from ( select * from cc_tbl_dat_inv_campaigndetails where account_num = $1 union select * from cc_tbl_dat_inv_campaigndetails where mass_campaign_flag = $35 and (invoicing_co_id in (select invoicing_co_id from ais_invoicingcompany where invoicing_co_name = $2 ) or invoicing_co_id is null) ) a left outer join cc_tbl_dat_inv_insert_document b on a.message_insert_id = b.insert_id where to_date($3 ,$36) between a.start_dat and a.end_dat and (substr(a.message_type,$37,$38) in ($39, $40 , $41, $42 , $43, $44, $45) and (substr(a.message_type,$46,$47) in (select decode(t.customer_type_name,$48,$49,$50) f4 from ais_customertype t, ais_customer c , ais_account ac where ac.account_num = $4 and ac.customer_ref=c.customer_ref and t.customer_type_id=c.customer_type_id) or substr(a.message_type,$51,$52)=$53 or substr(a.message_type,$54,$55) is null or substr(a.message_type,$56,$57) = $58)) and a.record_status = $59 and a.printed_bill_dat is null) t order by message_tag , cast(priority as integer), message_id",
                      "select cast(product_seq as text), cast(translated_item as text) , cast(bill_display as text) , cast(end_dat as text), cast(internal_item as text), cast(attribute_value as text), cast(product_id as text), cast(tariff_id as text), cast(start_dat as text), cast(tariff_flag as text), cast(imei as text) from (select distinct cpt.product_seq product_seq, its.translated_item translated_item, (select bdp.bill_eng || $11 || bdp.bill_thai from cc_tbl_dat_inv_bill_display bdp where cpt.customer_ref = bdp.customer_ref and cpt.tariff_id = bdp.tariff_id and cpt.product_seq = bdp.product_seq limit $12) bill_display , to_char(cpt.end_dat,$13) end_dat, its.internal_item internal_item , (select cpdt.attribute_value from ais_custproductattrdetails_orig cpdt where cpdt.customer_ref=$1 and cpt.product_seq=cpdt.product_seq and cpdt.product_attribute_subid = $14 and cpdt.product_id in ($15,$16,$17) limit $18) attribute_value, c.product_id product_id, cpt.tariff_id tariff_id,to_char(cpt.start_dat,$19) start_dat ,(case when cpt.tariff_id = $20 then $21 else $22 end) tariff_flag ,(select cpdt.attribute_value from (select cpdt_imei.attribute_value ,cpdt_imei.product_id from ais_custproductattrdetails_orig cpdt_imei where cpdt_imei.customer_ref = cpt.customer_ref and cpdt_imei.product_seq = cpt.product_seq and cpdt_imei.product_attribute_subid = $23 and cpdt_imei.start_dat <= to_date($2 , $24) and (cpdt_imei.end_dat >= to_date($3 , $25) or cpdt_imei.end_dat is null) and (cpt.start_dat <=cpdt_imei.start_dat or cpdt_imei.end_dat is null) and cpt.end_dat > cpdt_imei.start_dat and (cpt.start_dat <= cpdt_imei.end_dat or cpdt_imei.end_dat is null) order by cpdt_imei.start_dat desc) cpdt where cpdt.product_id in (select cast(split_part(gnv_product_id,$26,$27) as integer) from sff_tbl_lookup_gnv_product gnvp where ( product_name like $28 or product_name like $29 or product_name like $30 ) and coalesce(split_part(gnv_product_id,$31,$32),gnv_product_id) = to_char(cpdt.product_id) and split_part(billing_tariff_id,$33,$34) = cast(cpt.tariff_id as text) and substr(gnv_product_id, $35, $36) = $37) limit $38 ) imei from ais_custproducttariffdetails cpt,ais_tariff t, ais_itemtranslation its, (select chp.customer_ref, chp.product_seq, cpd.end_dat, chp.product_id from ais_custproductdetails cpd , ais_custhasproduct chp where cpd.customer_ref = $4 and cpd.account_num = $5 and cpd.product_label = $6 and cpd.product_seq = $7 and chp.customer_ref = cpd.customer_ref and chp.parent_product_seq = cpd.product_seq and chp.product_id in ($39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65) ) c where cpt.customer_ref = c.customer_ref and cpt.product_seq = c.product_seq and t.catalogue_change_id = $8 and cpt.tariff_id = t.tariff_id and cpt.tariff_id not in ( select cast(value as integer) from cc_tbl_dat_job_param_r3 where job_name =$66 and param like $67) and cpt.start_dat <= to_date($9 ,$68) and coalesce(cpt.end_dat,current_date) >= to_date($10 ,$69) and t.tariff_name = its.internal_item and its.translatable_item_id = $70 and its.language_id = $71 ) t order by product_seq",
                      "select cast(product_seq as text), coalesce(cast(parent_product_seq as text), $2) from ais_custhasproduct where customer_ref=$1",
                      "select cast(to_char(bill_dtm,$4) as text) from ais_billsummary where account_num = $1 and bill_seq = (select max(bill_seq) from ais_billsummary where account_num = $2 and bill_type_id not in ($5,$6) and bill_status in ($7,$8,$9) and bill_seq < $3 )",
                      "select cast(trim(cast(case when a.unit_name = $5 then d.product_quantity when a.unit_name = $6 then case when a.inc_vat = $7 then round(((d.product_quantity* e.threshold)/$8)*$9) when a.inc_vat = $10 then (d.product_quantity* e.threshold)/$11 end else d.product_quantity end as text) ) as text) full_discount, cast((case when a.unit_name = $12 then (cast(d.product_quantity as text)||$13) else cast(d.product_quantity* e.threshold/$14 as text) end) as text) discount from ais_eventdiscountstep e, cc_tbl_dat_inv_app_disc a, ais_eventdiscount b, ais_itemtranslation c, ais_custproducttariffdetails d where c.language_id = $1 and c.translated_item = $2 and c.internal_item = b.discount_name and b.event_discount_id = a.event_discount_id and b.event_discount_id = e.event_discount_id and e.step_number = $15 and customer_ref = $3 and product_seq = $4 and b.catalogue_change_id=e.catalogue_change_id and b.catalogue_change_id = (select catalogue_change_id from ais_cataloguechange where catalogue_status = $16 and currency_code = $17)",
                      "select cast(trim(customer_ref) as text) ,cast(product_seq as text) , cast(substring(a.attribute_value from position($2 in a.attribute_value) + $3) as text) from ais_custproductattrdetails_orig a where a.customer_ref= $1 and a.attribute_value like $4",
                      "select cast(trim(sff.word_in_statement_eng) as varchar), cast(trim(sff.word_in_statement_thai) as varchar) from sff_product sff, ais_custproductattrdetails_orig cptd_bill where sff.product_cd = cptd_bill.attribute_value and cptd_bill.customer_ref = $1 and cptd_bill.product_seq = $2 and sff.product_acctn_cat = $3 and cptd_bill.product_attribute_subid = $4 limit $5",
                      "select cbcpc.* from cancelbillcustpc cbcpc where cbcpc.customer_ref = p_customerref and cbcpc.product_seq = p_productseq::bigint and (gnvgen$datcompare(cbcpc.start_dat, p_newtermdate) <= 0) and (gnvgen$datcompare(cbcpc.end_dat, p_newtermdate) >= 0) and (cbcpc.charge_type = p_thechargetype) and (cbcpc.cpc_status <> gnvconstants$gc_chargelogicallydeleted()) order by cbcpc.end_dat desc for update",
                      "select cd.account_num,cd.product_label,cd.customer_ref,ch.parent_product_seq,ch.product_seq,ch.product_id,ct.tariff_id, ct.start_dat, ct.end_dat from ais_custhasproduct ch, ais_custproducttariffdetails ct, ais_custproductdetails cd where ct.customer_ref > $45 and cd.customer_ref = ct.customer_ref and cd.account_num= raccount_num and cd.product_seq = ct.product_seq and ct.end_dat =cd.end_dat and ch.product_id not in ($46,$47) and ch.product_id in (--select p.product_id from producthasparentproduct p --where (p.parent_product_id in (1,7) --or p.parent_product_id is null -- or p.product_id in (1,7) (avoid dispute problem) select p.product_id from ais_product p where exists (select $48 from ais_producthasparentproduct pp where p.product_id = pp.product_id and pp.parent_product_id in ($49,$50)) or not exists (select $51 from ais_producthasparentproduct pp where p.product_id = pp.product_id) ) and exists (select * from ais_accountstatus a2 where a2.account_num =cd.account_num and a2.effective_dtm= (select max(a1.effective_dtm) from ais_accountstatus a1 where a1.account_num = a2.account_num) and a2.account_status = v_account_status) and ct.end_dat < current_date - v_delete_day and ct.customer_ref = ch.customer_ref and ct.product_seq = ch.product_seq and not exists (select $52 from cc_tbl_arc_ped_product_irb where customer_ref = ct.customer_ref and product_seq = ct.product_seq) and not exists (select $53 from ais_billproductcharge bp where bp.account_num=cd.account_num and bp.product_seq =ct.product_seq) and not exists (select $54 from ais_billproductcharge bp, ais_custhasproduct chh where bp.account_num=cd.account_num and bp.product_seq =chh.product_seq and bp.customer_ref=chh.customer_ref and ct.customer_ref=chh.customer_ref and ct.product_seq=chh.parent_product_seq)",
                      "select cd.account_num,ch.parent_product_seq,ct.product_seq,ct.tariff_id,t.bt_tariff_name,cps2.effective_dtm start_dtm, cps3.effective_dtm - interval $29 end_dtm, t.rating_tariff_id,t.rtt_tariff_name, t.event_type_id, cps2.effective_dtm end_dtm1 from cc_tbl_dat_ops_map_rt_tariff t, ais_custproducttariffdetails ct, ais_custhasproduct ch, ais_custproductdetails cd, ais_custproductstatus cps2, ais_custproductstatus cps3 where cd.account_num = p_account_num and cd.customer_ref = ch.customer_ref and cd.product_seq = ch.product_seq and t.product_name like $30 and t.tariff_id = ct.tariff_id and ch.customer_ref = ct.customer_ref and ch.product_seq = ct.product_seq and ch.customer_ref = cps2.customer_ref and ch.product_seq = cps2.product_seq and cps2.product_status = $31 and cps2.effective_dtm = (select min(cps4.effective_dtm) from ais_custproductstatus cps4 where cps4.customer_ref = cps2.customer_ref and cps4.product_seq = cps2.product_seq and cps4.product_status = cps2.product_status) and ch.customer_ref = cps3.customer_ref and ch.product_seq = cps3.product_seq and cps3.product_status = $32 and ct.start_dat <= p_end_date -- end_date and ct.end_dat >= p_start_date and ct.tariff_id not in($33,$34,$35,$36,$37,$38,$39,$40,$41) and ct.tariff_id = t.tariff_id",
                      "select ce.event_source,ce.event_type_id,ce.rating_tariff_id , rt.tariff_name , min(ce.start_dtm) , max(ce.end_dtm) from ais_custeventsource ce, ais_ratingtariff rt where ce.customer_ref = gd.customer_ref and ce.product_seq = gd.parent_product_seq and ce.event_type_id = gd.event_type_id and ce.rating_tariff_id <> gd.rating_tariff_id and ce.start_dtm <= least(gd.end_dtm,p_end_date) and (ce.end_dtm >= greatest(gd.end_dtm1,p_start_date) or ce.end_dtm is null ) -- start_date and $48 < ( select count(distinct event_type_id) from ais_custeventsource s_ce where s_ce.customer_ref = ce.customer_ref and s_ce.product_seq = ce.product_seq and s_ce.event_source = ce.event_source ) and rt.rating_tariff_id = ce.rating_tariff_id and rt.rating_catalogue_id = v_rating_catalogue_id group by ce.event_source,ce.event_type_id,ce.rating_tariff_id ,rt.tariff_name",
                      "select ch.customer_ref, cd.account_num,ch.parent_product_seq,ct.product_seq,ct.tariff_id,t.bt_tariff_name,cps2.effective_dtm start_dtm, cps3.effective_dtm - interval $29 end_dtm, t.rating_tariff_id,t.rtt_tariff_name, t.event_type_id, cps2.effective_dtm end_dtm1 from cc_tbl_dat_ops_map_rt_tariff t, ais_custproducttariffdetails ct, ais_custhasproduct ch, ais_custproductdetails cd, ais_custproductstatus cps2, ais_custproductstatus cps3 where cd.account_num = p_account_num and cd.customer_ref = ch.customer_ref and cd.product_seq = ch.product_seq and t.product_name not like $30 and t.tariff_id = ct.tariff_id and ch.customer_ref = ct.customer_ref and ch.product_seq = ct.product_seq and ch.customer_ref = cps2.customer_ref and ch.product_seq = cps2.product_seq and cps2.product_status = $31 and cps2.effective_dtm = (select min(cps4.effective_dtm) from ais_custproductstatus cps4 where cps4.customer_ref = cps2.customer_ref and cps4.product_seq = cps2.product_seq and cps4.product_status = cps2.product_status) and ch.customer_ref = cps3.customer_ref and ch.product_seq = cps3.product_seq and cps3.product_status = $32 and ct.start_dat <= p_end_date -- end_date and ct.end_dat >= p_start_date and ct.tariff_id = t.tariff_id",
                      "select cmr.product_seq from cpdumanagerequest cmr where cmr.customer_ref = $1 and cmr.product_seq is not null and cmr.domain_id = $2 and cmr.action_dat <= to_date($3 , $4) order by product_seq, account_num",
                      "select coalesce(sum(amount_mny), $4) from allocationtobill where account_num = p_accountnumber and account_payment_seq = p_payseq and (coalesce(logically_deleted_boo,$5) = $6)",
                      "select coalesce(sum(atb.amount_mny), $33) from allocationtobill atb, receivableclass rc, (select ap.* from accountpayment ap left join adjustment adj on (prevcollwopayseq is null or ap.account_payment_seq > prevcollwopayseq) and (nvl(maxadjcollworecpayseq, currcollwopayseq) is null or ap.account_payment_seq <= nvl(maxadjcollworecpayseq, currcollwopayseq)) and adj.account_num = ap.account_num and adj.adjustment_seq = ap.linked_writeoff_payment_seq and adj.linked_writeoff_payment_seq = ap.account_payment_seq and ( ( adj.account_num is not null and ap.payment_origin_id = gnvconstants$gc_payoriginrecoveredadj() and adj.dispute_seq is not null and ap.account_payment_mny < $34 ) or (currcollwopayseq is null or ap.account_payment_seq <= currcollwopayseq) )) ap where atb.account_num = accountnum and (billseq is null or atb.bill_seq = billseq) -- 2311 - removed ap.deposit_boo = 'f' condition here as it does not carry any signifcance and ap.account_payment_status = gnvdebt$creationstatus() and (groupid is null or rc.group_id = groupid) and (receivableclassid is null or atb.receivable_class_id = receivableclassid) and ((coalesce(atb.receivables_group_attr_1,$35) || gnvintpay$gc_delimiter() || coalesce(atb.receivables_group_attr_2,$36) || gnvintpay$gc_delimiter() || coalesce(atb.receivables_group_attr_3,$37) || gnvintpay$gc_delimiter() || coalesce(atb.receivables_group_attr_4 ,$38)|| gnvintpay$gc_delimiter() || coalesce(atb.receivables_group_attr_5 ,$39)|| gnvintpay$gc_delimiter() || coalesce(atb.receivables_group_attr_6,$40) = v_aggrrecgroupattr)or (v_invoiceleveldebtboo = gnvgen$gnvtruestring()) or (v_recvclassleveldebtboo = gnvgen$gnvtruestring()) or (v_invrecvclassleveldebtboo = gnvgen$gnvtruestring())) -- joins and ap.account_num = atb.account_num and ap.account_payment_seq = atb.account_payment_seq and atb.receivable_class_id = rc.receivable_class_id and (coalesce(atb.logically_deleted_boo,$41) = $42)",
                      "select control_filename, event_filename from cc_tbl_dat_up_filelog where event_file_type = $1 and status = $2 and migration_flag = $3 order by control_filename",
                      "select count($7) from ( ( ( select customer_ref from geneva_data.custproducttariffdetails c where customer_ref = p_customer_ref and tariff_id in (select tariff_id from prebill_share_tariffs) limit $8 ) intersect ( select customer_ref from geneva_data.custproducttariffdetails c where customer_ref = p_customer_ref and tariff_id in (select tariff_id from prebill_non_share_tariffs) limit $9 ) ) union all ( ( select customer_ref from geneva_data.custproducttariffdetails c where customer_ref = p_customer_ref and tariff_id in ($10, $11) limit $12 ) intersect ( select customer_ref from geneva_data.custproducttariffdetails c where customer_ref = p_customer_ref and tariff_id in ($13, $14) limit $15 ) ) ) a",
                      "select count(*) as count_account from cc_tbl_dat_inv_summary cg where date(cg.vat_date) >= to_date($1,$2) and cg.invoice_num like $3 and (cg.sap_ext_group_id is null or cg.sap_ext_group_id = $4)",
                      "select count(*) from ( with cte as ( select d.tariff_id as d_tariff_id from ais_custproductdetails e inner join ais_custhasproduct c on c.customer_ref = e.customer_ref and c.product_seq = e.product_seq inner join ais_custproducttariffdetails d on d.customer_ref = c.customer_ref and d.product_seq = c.product_seq and d.start_dat <= v_end_dtm and coalesce(d.end_dat, timestamp $34) >= v_start_dtm inner join ais_custproductdetails f on f.customer_ref = c.customer_ref and f.account_num = e.account_num and f.start_dat <= v_end_dtm and coalesce(f.end_dat, timestamp $35) >= v_start_dtm and (f.product_seq = c.parent_product_seq or c.parent_product_seq is null) and length(f.product_label) = $36 and f.product_label ~~ $37 left join cc_tbl_dat_ops_mvpn_service md on md.tariff_id = d.tariff_id and md.start_dat <= v_end_dtm and coalesce(md.end_dat, timestamp $38) >= v_start_dtm where e.account_num = v_acc_account_num ) select d_tariff_id from cte t inner join t1_tariff_ids tti on tti.tariff_id=t.d_tariff_id and tti.start_dat <= v_end_dtm and tti.end_dat >= v_start_dtm ) a",
                      "select count(*) from bl_admin.cc_tbl_dat_nodrop_sff_source s where s.ca_no = rec.customer_ref and s.ba_no = rec.account_num --and s.gv_prod_seq = v_1_pack_seq and coalesce(s.gv_prod_seq,$28) = coalesce(v_gv_prod_seq,$29) and coalesce(s.product_name,$30) = coalesce(v_integration,$31) and s.create_date is not null",
                      "select count(ac.account_num) from ais_account ac inner join ais_accountattributes aa on aa.account_num = ac.account_num inner join ais_customerattributes ca on ca.customer_ref = ac.customer_ref inner join ais_customer c on c.customer_ref = ac.customer_ref inner join ais_accountstatus ast on ast.account_num = ac.account_num where ast.effective_dtm = (select max(ast2.effective_dtm) from ais_accountstatus ast2 where ast.account_num = ast2.account_num) and ast.account_status in ($15,$16) and aa.bill_cycle = p_bill_cycle --and ac.next_bill_dtm = to_timestamp(p_next_bill_date, 'yyyy-mm-dd') and date(ac.next_bill_dtm) = date(v_next_bill_date) and ac.random_hash between v_start_hash and v_end_hash",
                      "select count(ac.account_num) from ais_customerattributes ca join ais_customer c on c.customer_ref = ca.customer_ref join ais_account ac on ac.customer_ref = c.customer_ref join ais_accountattributes aa on aa.account_num = ac.account_num join ais_billrequest br on br.account_num = ac.account_num join ais_accountstatus ast on ast.account_num = ac.account_num where ast.effective_dtm = (select max(ast2.effective_dtm) from ais_accountstatus ast2 where ast.account_num = ast2.account_num) and ast.account_status = 'ta' and date(br.bill_dat) >= date(rend_bill_date + v_list) and date(br.bill_dat) <= date(rend_bill_date + 6) and br.bill_request_status = 1 and ac.random_hash > 0 and ac.random_hash between v_start_hash and v_end_hash",
                      "select count(distinct c.product_seq) from bl_admin.tmp_list_err_bc18 c where c.account_num = $1 and c.product_id = $2 --- 1(mobile) ,461(fixline) , 478(fbb) and c.start_dat < $3::timestamp and ( c.end_dat >= case when to_char($4::timestamp,$5) = $6 then $7::timestamp - interval $8 else $9::timestamp - interval $10 end or c.end_dat is null)",
                      "select count(distinct c.product_seq) from bl_admin.tmp_list_err_bc18 c where c.account_num = $1 and c.product_id in (select p.product_id from ais_product p where not exists (select $2 from ais_producthasparentproduct r where p.product_id = r.product_id) and p.product_id <> any($3)) and c.product_desc like $4 and c.ops_map_rt_tariff_id is not null ---in(main), not in(other) and c.start_dat < $5::timestamp and c.end_dat >= case when to_char($6::timestamp,$7) = $8 then $9::timestamp - interval $10 else $11::timestamp - interval $12 end",
                      "select count(distinct c.product_seq) from bl_admin.tmp_list_err_bc18 c where c.account_num = $1 and c.product_id in (select p.product_id from ais_product p where not exists (select $2 from ais_producthasparentproduct r where p.product_id = r.product_id) and p.product_id <> any($3)) and c.product_desc like $4 and c.ops_map_rt_tariff_id is null ---in(main), not in(other) and c.start_dat < $5::timestamp and c.end_dat >= case when to_char($6::timestamp,$7) = $8 then $9::timestamp - interval $10 else $11::timestamp - interval $12 end",
                      "select count(product_seq) from ( select c.product_seq from bl_admin.tmp_list_err_bc18 c where c.account_num = $1 and c.product_desc like $2 and c.in_advance_boo = $3 and c.parent_product_seq is not null and c.parent_product_seq2 is null and $4::timestamp > (select coalesce(max(cpc.billed_to_dat),$5::timestamp - interval $6) from ais_custproductcharge cpc where cpc.customer_ref = c.customer_ref and cpc.product_seq = c.product_seq and cpc.charge_type = $7) and c.ops_map_rt_tariff_id is not null ---in(main), not in(other) and c.start_dat < $8::timestamp and c.end_dat >= case when to_char($9::timestamp,$10) = $11 then $12::timestamp - interval $13 else $14::timestamp - interval $15 end union select c.product_seq from bl_admin.tmp_list_err_bc18 c where c.account_num = $16 and c.product_desc like $17 and c.in_advance_boo = $18 -- tariff_id discount and c.parent_product_seq is not null and c.parent_product_seq2 is not null -- mobile level parent_product_seq is not null and exists (select $19 from ais_custproducttariffdetails cptd, cc_tbl_dat_ops_map_rt_tariff m where cptd.customer_ref = c.customer_ref and cptd.product_seq = c.parent_product_seq and cptd.tariff_id = m.tariff_id) -- parent main and $20::timestamp > (select coalesce(max(cpc.billed_to_dat),$21::timestamp - interval $22) from ais_custproductcharge cpc where cpc.customer_ref = c.customer_ref and cpc.product_seq = c.product_seq and cpc.charge_type = $23) and c.start_dat < $24::timestamp and c.end_dat >= case when to_char($25::timestamp,$26) = $27 then $28::timestamp - interval $29 else $30::timestamp - interval $31 end union select c.product_seq from bl_admin.tmp_list_err_bc18 c where c.account_num = $32 and c.product_desc like $33 and exists (select $34 from ais_tariffelementband teb where teb.tariff_id = c.tariff_id and teb.one_off_mod_type_id = $35) and c.parent_product_seq is not null and c.parent_product_seq2 is null and c.ops_map_rt_tariff_id is not null ---in(main), not in(other) and c.start_dat < $36::timestamp and c.end_dat >= case when to_char($37::timestamp,$38) = $39 then $40::timestamp - interval $41 else $42::timestamp - interval $43 end ) as sub1",
                      "select count(product_seq) from ( select c.product_seq from bl_admin.tmp_list_err_bc18 c where c.account_num = $1 and c.product_desc like $2 and c.in_advance_boo = $3 and c.parent_product_seq is not null and c.parent_product_seq2 is null and $4::timestamp > (select coalesce(max(cpc.billed_to_dat),$5::timestamp - interval $6) from ais_custproductcharge cpc where cpc.customer_ref = c.customer_ref and cpc.product_seq = c.product_seq and cpc.charge_type = $7) and c.ops_map_rt_tariff_id is not null ---in(main), not in(other) and c.start_dat < case when to_char($8::timestamp ,$9) = $10 then $11::timestamp + interval $12 else $13::timestamp + interval $14 end and c.end_dat >= $15::timestamp union select c.product_seq from bl_admin.tmp_list_err_bc18 c where c.account_num = $16 and c.product_desc like $17 and c.in_advance_boo = $18 and c.parent_product_seq is not null and c.parent_product_seq2 is not null and exists (select $19 from ais_custproducttariffdetails cptd, cc_tbl_dat_ops_map_rt_tariff m where cptd.customer_ref = c.customer_ref and cptd.product_seq = c.parent_product_seq and cptd.tariff_id = m.tariff_id) and $20::timestamp > (select coalesce(max(cpc.billed_to_dat),$21::timestamp - interval $22) from ais_custproductcharge cpc where cpc.customer_ref = c.customer_ref and cpc.product_seq = c.product_seq and cpc.charge_type = $23) and c.start_dat < case when to_char($24::timestamp ,$25) = $26 then $27::timestamp + interval $28 else $29::timestamp + interval $30 end and c.end_dat >= $31::timestamp union select c.product_seq from bl_admin.tmp_list_err_bc18 c where c.account_num = $32 and c.product_desc like $33 and exists (select $34 from ais_tariffelementband teb where teb.tariff_id = c.tariff_id and teb.one_off_mod_type_id = $35) and c.parent_product_seq is not null and c.parent_product_seq2 is null and c.ops_map_rt_tariff_id is not null ---in(main), not in(other) and c.start_dat < case when to_char($36::timestamp ,$37) = $38 then $39::timestamp + interval $40 else $41::timestamp + interval $42 end and c.end_dat >= $43::timestamp ) sub1",
                      "select cpc.* from custproductcharge cpc where cpc.customer_ref = customerref and cpc.product_seq = productseq::bigint and cpc.charge_type = gnvsqlcustproductcharge$gnvchargetypeusage() and cpc.cpc_status <> gnvsqlcustproductcharge$gnvprodchargelogicallydeleted() and ( ( cpc.start_dat <= periodenddate or periodenddate is null) and (cpc.end_dat >= periodstartdate or cpc.end_dat is null) ) order by start_dat",
                      "select cpc.* from custproductcharge cpc where cpc.customer_ref = cv_customerref and cpc.product_seq = cv_productseq::bigint and (gnvgen$datcompare(cpc.start_dat, cv_newtermdate) <= 0) and (gnvgen$datcompare(cpc.end_dat, cv_newtermdate) >= 0) and cpc.charge_type = cv_thechargetype and (cpc.cpc_status <> gnvintproductcharging$gnvprodchargelogicallydeleted()) order by cpc.account_num desc, cpc.start_dat desc, cpc.budget_centre_seq desc for update",
                      "select cpc.* from custproductcharge cpc where cpc.customer_ref=customerref and cpc.product_seq=productseq::bigint and cpc.charge_type=chargetype::smallint and cpc.percentage_pct=gnvsqlcustproductcharge$gnvchargemaximum() and cpc.cpc_status <> gnvsqlcustproductcharge$gnvprodchargelogicallydeleted() order by start_dat",
                      "select cpd.account_num, cpd.start_dat, cpd.end_dat, cpd.tax_inclusive_boo from custproductdetails cpd where cpd.customer_ref = p_customerref and cpd.product_seq = p_productseq::bigint and cpd.domain_id = p_domainid::integer and (cpd.start_dat <=trunc(p_enddtm) or p_enddtm is null) and (cpd.end_dat >= trunc(p_startdtm) or cpd.end_dat is null) and exists (select 1 from account where account_num = cpd.account_num and domain_id = p_domainid) order by cpd.start_dat",
                      "select cpdumanagerequest.cpdumr_liid , cpdumanagerequest.customer_ref , cpdumanagerequest.domain_id , cpdumanagerequest.product_seq , cpdumanagerequest.account_num , cpdumanagerequest.action_dat , cpdumanagerequest.cpdumr_status , cpdumanagerequest.event_source , cpdumanagerequest.event_type_id , cpdumanagerequest.policy_id , cpdumanagerequest.policy_seq , cpdumanagerequest.random_work_hash , cpdumanagerequest.release_version , cpdumanagerequest.request_priority , cpdumanagerequest.request_reason_id from cpdumanagerequest cpdumanagerequest where (((((cpdumanagerequest.action_dat<=$1 )and(cpdumanagerequest.random_work_hash>=$2 ))and(cpdumanagerequest.random_work_hash<$3 ))and(cpdumanagerequest.domain_id>=$4 ))and(cpdumanagerequest.domain_id<=$5 ))and(cpdumanagerequest.cpdumr_status=$6 )",
                      "select cps.effective_dtm from custproductstatus cps where cps.customer_ref = customerref and cps.product_seq = productseq::bigint and cps.product_status = gnvintproductstatus$gnvprodstatusterminated()",
                      "select cptd.tariff_id from custproducttariffdetails cptd where cptd.customer_ref = p_customerref and cptd.product_seq = p_productseq::bigint and (cptd.start_dat <= p_enddtm or p_enddtm is null) and (cptd.end_dat >= p_startdtm or cptd.end_dat is null)",
                      "select criteria from ( select decode(a.attr, $12, $13, $14 || a.event_type_id || $15 || a.input_attr || $16 || a.attr || $17 ) criteria from (select distinct event_type_id, decode(input_attr_1,$18, decode(input_attr_2,$19, decode(input_attr_3,$20, decode(input_attr_4,$21, decode(input_attr_5,$22, decode(input_attr_6,$23, decode(input_attr_7,$24, decode(input_attr_8,$25, decode(input_attr_9,$26, decode(input_attr_10,$27, decode(input_attr_11,$28, decode(input_attr_12,$29, decode(input_attr_13,$30, decode(input_attr_14,$31, decode(input_attr_15,$32, decode(input_attr_16,$33, decode(input_attr_17,$34, decode(input_attr_18,$35, decode(input_attr_19,$36, decode(input_attr_20,$37, decode(input_attr_21,$38, decode(input_attr_22,$39, decode(input_attr_23,$40, decode(input_attr_24,$41,$42,$43),$44),$45),$46),$47),$48),$49), $50),$51),$52),$53),$54),$55),$56),$57),$58), $59),$60),$61),$62),$63),$64),$65),$66)input_attr, nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(nvl(input_attr_1,input_attr_2),input_attr_3),input_attr_4), input_attr_5),input_attr_6),input_attr_7),input_attr_8),input_attr_9),input_attr_10),input_attr_11),input_attr_12),input_attr_13),input_attr_14), input_attr_15),input_attr_16),input_attr_17),input_attr_18),input_attr_19),input_attr_20),input_attr_21),input_attr_22),input_attr_23),input_attr_24) attr from bl_admin.cc_tbl_dat_emt_filter_attr) a union select $67||criteria||$68 criteria from bl_admin.cc_tbl_dat_emt_filter_cfg where process_name=$69 and sub_process_name=$70 ) a order by criteria offset p_start limit p_nrows - p_start",
                      "select custeventsource.customer_ref , custeventsource.event_source , custeventsource.event_type_id , custeventsource.product_seq , custeventsource.start_dtm , custeventsource.acct_rgdng_drctn_indicator , custeventsource.acct_rgdng_policy_id , custeventsource.attribute_number_1 , custeventsource.attribute_number_2 , custeventsource.attribute_number_3 , custeventsource.attribute_value_1 , custeventsource.attribute_value_2 , custeventsource.attribute_value_3 , custeventsource.competitor_rating_tariff_id , custeventsource.credit_limit_mny , custeventsource.domain_id , custeventsource.end_dtm , custeventsource.event_deletion_mode , custeventsource.event_filter_1_id , custeventsource.event_filter_2_id , custeventsource.event_filter_3_id , custeventsource.event_source_label , custeventsource.event_source_txt , custeventsource.event_source_upper , custeventsource.guide_rule_1_desc , custeventsource.guide_rule_2_desc , custeventsource.guide_rule_3_desc , custeventsource.mask_bill_rule_id , custeventsource.mask_store_rule_id , custeventsource.match_type_1 , custeventsource.match_type_2 , custeventsource.match_type_3 , custeventsource.rating_tariff_1_id , custeventsource.rating_tariff_2_id , custeventsource.rating_tariff_3_id , custeventsource.rating_tariff_id , custeventsource.receive_account_1_num , custeventsource.receive_account_2_num , custeventsource.receive_account_3_num , custeventsource.structural_integer_ref , custeventsource.target_domain_id from custeventsource custeventsource where ((custeventsource.customer_ref=$1 )and(custeventsource.product_seq=$2 ))and(custeventsource.domain_id=$3 ) order by custeventsource.event_source desc, custeventsource.event_type_id desc, custeventsource.start_dtm desc",
                      "select custhasproduct.customer_ref , custhasproduct.product_seq , custhasproduct.cust_order_num , custhasproduct.package_seq , custhasproduct.parent_product_seq , custhasproduct.product_id , custhasproduct.product_package_instance , custhasproduct.subscription_boo , custhasproduct.subscription_ref , custhasproduct.subs_product_seq , custhasproduct.successor_product_seq , custhasproduct.supplier_order_num , custhasproduct.suppress_early_term_charge_boo , custhasproduct.suppress_init_charge_boo , custhasproduct.suppress_term_charge_boo , custhasproduct.domain_id , custhasproduct.transfer_indicator , custhasproduct.actual_product_start_dtm from custhasproduct custhasproduct where (custhasproduct.customer_ref=$1 )and(custhasproduct.product_seq=$2 )",
                      "select custoverrideprice.customer_ref , custoverrideprice.override_price_seq , custoverrideprice.alt_cur_code , custoverrideprice.alt_cur_early_termination_mny , custoverrideprice.alt_cur_one_off_number , custoverrideprice.alt_cur_react_number , custoverrideprice.alt_cur_recurring_number , custoverrideprice.alt_cur_susp_number , custoverrideprice.alt_cur_susp_recur_number , custoverrideprice.alt_cur_termination_number , custoverrideprice.domain_id , custoverrideprice.early_termination_mny , custoverrideprice.end_dat , custoverrideprice.notes_txt , custoverrideprice.one_off_accrual_points , custoverrideprice.one_off_accrual_point_rate , custoverrideprice.one_off_mod_type_id , custoverrideprice.one_off_number , custoverrideprice.one_off_redemption_points , custoverrideprice.one_off_redemption_point_rate , custoverrideprice.product_seq , custoverrideprice.react_mod_type_id , custoverrideprice.react_number , custoverrideprice.recurring_mod_type_id , custoverrideprice.recurring_number , custoverrideprice.start_dat , custoverrideprice.susp_mod_type_id , custoverrideprice.susp_number , custoverrideprice.susp_recur_mod_type_id , custoverrideprice.susp_recur_number , custoverrideprice.termination_mod_type_id , custoverrideprice.termination_number from custoverrideprice custoverrideprice where (custoverrideprice.customer_ref=$1 )and(custoverrideprice.product_seq=$2 ) order by custoverrideprice.start_dat desc",
                      "select custprodchargingrules.customer_ref , custprodchargingrules.domain_id , custprodchargingrules.product_seq , custprodchargingrules.transaction_effective_dtm , custprodchargingrules.activation_rule , custprodchargingrules.cancelled_dtm , custprodchargingrules.effected_entity_type , custprodchargingrules.override_activation_dat , custprodchargingrules.override_period_end_dat , custprodchargingrules.override_termination_dat , custprodchargingrules.refund_boo , custprodchargingrules.suppress_init_charges_boo , custprodchargingrules.suppress_term_charges_boo , custprodchargingrules.tariff_id , custprodchargingrules.termination_rule , custprodchargingrules.transaction_status from custprodchargingrules custprodchargingrules where ((custprodchargingrules.customer_ref=$1 )and(custprodchargingrules.product_seq=$2 ))and(custprodchargingrules.domain_id=$3 ) order by custprodchargingrules.transaction_effective_dtm asc",
                      "select custproductattrdetails.customer_ref , custproductattrdetails.product_attribute_subid , custproductattrdetails.product_seq , custproductattrdetails.start_dat , custproductattrdetails.attribute_value , custproductattrdetails.domain_id , custproductattrdetails.end_dat , custproductattrdetails.product_id from custproductattrdetails custproductattrdetails where ((custproductattrdetails.customer_ref=$1 )and(custproductattrdetails.product_seq=$2 ))and(custproductattrdetails.domain_id=$3 ) order by custproductattrdetails.product_attribute_subid desc, custproductattrdetails.start_dat desc",
                      "select custproductdetails.customer_ref , custproductdetails.product_seq , custproductdetails.start_dat , custproductdetails.account_num , custproductdetails.budget_centre_seq , custproductdetails.budget_payment_plan_id , custproductdetails.community_group_id , custproductdetails.community_group_owner_boo , custproductdetails.contract_seq , custproductdetails.cps_id , custproductdetails.cust_product_contact_seq , custproductdetails.default_event_source , custproductdetails.domain_id , custproductdetails.end_dat , custproductdetails.override_product_name , custproductdetails.product_label , custproductdetails.tax_exempt_ref , custproductdetails.tax_exempt_txt , custproductdetails.tax_inclusive_boo from custproductdetails custproductdetails where ((custproductdetails.customer_ref=$1 )and(custproductdetails.product_seq=$2 ))and(custproductdetails.domain_id=$3 ) order by custproductdetails.start_dat desc",
                      "select custproducteventtypes.customer_ref , custproducteventtypes.event_type_id , custproducteventtypes.product_seq , custproducteventtypes.start_dat , custproducteventtypes.default_cmp_rating_tariff_id , custproducteventtypes.default_rating_tariff_id , custproducteventtypes.domain_id , custproducteventtypes.end_dat , custproducteventtypes.event_deletion_mode , custproducteventtypes.itemisation_mny , custproducteventtypes.itemisation_order_id , custproducteventtypes.mask_bill_rule_id , custproducteventtypes.mask_store_rule_id from custproducteventtypes custproducteventtypes where ((custproducteventtypes.customer_ref=$1 )and(custproducteventtypes.product_seq=$2 ))and(custproducteventtypes.domain_id=$3 ) order by custproducteventtypes.event_type_id desc, custproducteventtypes.start_dat desc",
                      "select custproductstatus.customer_ref , custproductstatus.effective_dtm , custproductstatus.product_seq , custproductstatus.domain_id , custproductstatus.product_status , custproductstatus.status_reason_txt from custproductstatus custproductstatus where ((custproductstatus.customer_ref=$1 )and(custproductstatus.product_seq=$2 ))and(custproductstatus.domain_id=$3 ) order by custproductstatus.effective_dtm desc",
                      "select custproducttariffdetails.customer_ref , custproducttariffdetails.product_seq , custproducttariffdetails.start_dat , custproducttariffdetails.additions_quantity , custproducttariffdetails.competitor_tariff_id , custproducttariffdetails.domain_id , custproducttariffdetails.end_dat , custproducttariffdetails.override_in_advance_boo , custproducttariffdetails.override_pro_rate_boo , custproducttariffdetails.product_quantity , custproducttariffdetails.prorate_initial_period_boo , custproducttariffdetails.stop_additional_validity_boo , custproducttariffdetails.tariff_id , custproducttariffdetails.terminations_quantity from custproducttariffdetails custproducttariffdetails where ((custproducttariffdetails.customer_ref=$1 )and(custproducttariffdetails.product_seq=$2 ))and(custproducttariffdetails.domain_id=$3 ) order by custproducttariffdetails.start_dat desc",
                      "select data data , compressed_data compressed_data , data_compressed_boo data_compressed_boo , solution_data solution_data , solution_data_content_type solution_data_content_type , segment_number segment_number , bill_data_content_type bill_data_content_type from billdata where account_num = $1 and bill_seq = $2 and bill_version = $3 and copy_bill_num = $4 and segment_number > $5 order by segment_number",
                      "select distinct * from ( select account_num, start_dat from custproductdetails where customer_ref = p_customerref and product_seq = p_productseq::bigint and domain_id = p_domainid::integer and start_dat > p_actiondat union all select account_num, start_dat from custproductdetails where customer_ref = p_customerref and product_seq = p_productseq::bigint and domain_id = p_domainid::integer and (p_actiondat >= start_dat and (end_dat is null or p_actiondat <= end_dat)) ) t order by start_dat",
                      "select distinct aa.customer_ref , aa.account_num , aa.start_dat , aa.end_dat , aa.rate_event_seq , aa.ca_next_bill_dtm , aa.next_bill_dtm as ba_next_bill_dtm , aa.billing_driver from cc_tbl_dat_ops_account_bc18 aa inner join ais_custproductdetails e on e.account_num = aa.account_num and e.customer_ref = aa.customer_ref inner join ais_custproducttariffdetails d on d.product_seq = e.product_seq and d.customer_ref = e.customer_ref and d.start_dat <= coalesce(aa.end_dat, now()) and coalesce(d.end_dat, now()) >= aa.start_dat inner join t1_tariff_ids tti on tti.tariff_id = d.tariff_id and tti.tariff_type = $3 and tti.start_dat <= coalesce(aa.end_dat, current_timestamp) and tti.end_dat >= aa.start_dat where aa.random_hash between $1 and $2 and aa.account_status = $4 and not exists (select from temp_account_mvpn_run t where t.account_num = aa.account_num)",
                      "select distinct aa.customer_ref , aa.account_num , aa.start_dat , aa.end_dat , aa.rate_event_seq , aa.ca_next_bill_dtm , aa.next_bill_dtm as ba_next_bill_dtm , aa.billing_driver from cc_tbl_dat_ops_account_bc18 aa inner join ais_custproductdetails e on e.account_num = aa.account_num inner join ais_custproducttariffdetails d on d.product_seq = e.product_seq and d.customer_ref = e.customer_ref and d.tariff_id = any(array(select distinct tariff_id from cc_tbl_dat_ops_mvpn_service union select distinct p.tariff_id from cc_tbl_dat_inv_main_promotion p left join cc_tbl_dat_ops_map_rt_tariff mt on mt.tariff_id = p.tariff_id where p.tariff_name ~~ any($3) or mt.event_type_id = $4)) and d.start_dat <= coalesce(aa.end_dat, now()) and coalesce(d.end_dat, now()) >= aa.start_dat where aa.random_hash > $5 and aa.random_hash between $1 and $2 and aa.account_status = $6 and not exists (select from temp_account_mvpn_run t where t.account_num = aa.account_num)",
                      "select distinct aa.customer_ref , aa.account_num , aa.start_dat , aa.end_dat , aa.rate_event_seq , aa.ca_next_bill_dtm , aa.next_bill_dtm as ba_next_bill_dtm , aa.billing_driver from temp_account_mvpn_run bb inner join cc_tbl_dat_ops_account_bc18 aa on aa.account_num = bb.account_num and aa.random_hash > $3 and aa.account_status = $4 inner join ais_custproductdetails e on e.account_num = aa.account_num inner join ais_custproducttariffdetails d on d.product_seq = e.product_seq and d.customer_ref = e.customer_ref and d.tariff_id = any(array(select distinct tariff_id from cc_tbl_dat_ops_mvpn_service union select distinct p.tariff_id from cc_tbl_dat_inv_main_promotion p left join cc_tbl_dat_ops_map_rt_tariff mt on mt.tariff_id = p.tariff_id where p.tariff_name ~~ any($5) or mt.event_type_id = $6)) and d.start_dat <= coalesce(aa.end_dat, now()) and coalesce(d.end_dat, now()) >= aa.start_dat where bb.row_num between $1 and $2",
                      "select distinct cast(addr.address_1 as text) , cast(addr.address_2 as text), cast(addr.address_3 as text), cast(addr.address_4 as text), cast(addr.address_5 as text), cast(addr.zipcode as text), cast(atb.region as text) from contactdetails cd, address addr, accountdetails ad, accountattributes atb where ad.account_num = $1 and atb.account_num = ad.account_num and cd.customer_ref = $2 and addr.customer_ref = cd.customer_ref and cd.contact_seq = ad.billing_contact_seq and cd.address_seq = addr.address_seq and cd.start_dat <= to_date($3 ,$5) and (cd.end_dat is null or cd.end_dat >= to_date($4 ,$6))",
                      "select distinct cast(b.product_seq as varchar), cast(a.charge_type as varchar), cast(to_char(b.end_dat,$3) as varchar), cast(b.account_num as varchar),cast(to_char(b.start_dat,$4) as varchar) from ais_custproductcharge a, ais_custproductdetails b where b.customer_ref= $1 and b.customer_ref=a.customer_ref and b.product_seq=a.product_seq and b.account_num=a.account_num and a.charge_type in ($5,$6,$7,$8) and b.account_num = $2",
                      "select distinct cast(bdp.bill_eng||$6||bdp.bill_thai as text) from cc_tbl_dat_inv_bill_display bdp,ais_custproductattrdetails dpda where bdp.customer_ref=dpda.customer_ref and bdp.product_seq=dpda.product_seq and bdp.product_id=dpda.product_id and dpda.customer_ref= $1 and bdp.product_seq= $2 and bdp.account_number= $3 and dpda.start_dat <= to_date($4 ,$7) and ( (dpda.end_dat >= to_date($5 ,$8)) or dpda.end_dat is null)",
                      "select distinct cast(cpt.product_seq as varchar) as product_sequence ,cast((case when trim(itm.shortname_eng||$6||itm.shortname_th) = $7 then $8 else trim(itm.shortname_eng||$9||itm.shortname_th) end) as varchar) as short_name, cast(its.translated_item as varchar) as detail_name,cast((select bdp.bill_eng || $10 || bdp.bill_thai from cc_tbl_dat_inv_bill_display bdp where cpt.customer_ref = bdp.customer_ref and cpt.tariff_id = bdp.tariff_id and cpt.product_seq = bdp.product_seq limit $11) as varchar) bill_display, cast(to_char(cpt.end_dat,$12) as varchar) as end_date , cast(to_char(cpt.start_dat,$13) as varchar) as start_date from ais_custproducttariffdetails cpt,ais_tariff t, ais_itemtranslation its,cc_tbl_dat_inv_main_promotion itm, (select chp.customer_ref, chp.product_seq, cpd.end_dat from ais_custproductdetails cpd , ais_custhasproduct chp where cpd.customer_ref = $1 and cpd.account_num = $2 and cpd.customer_ref = chp.customer_ref and cpd.product_seq = chp.product_seq and chp.product_id in ($14,$15,$16) ) c where cpt.customer_ref = c.customer_ref and cpt.product_seq = c.product_seq and cpt.tariff_id = t.tariff_id and cpt.start_dat <= to_date($3 ,$17) and coalesce(cpt.end_dat,current_date) >= to_date($4 ,$18) and itm.tariff_id = t.tariff_id and itm.tariff_name = its.internal_item and its.language_id = $19 and its.translatable_item_id = $20 and t.catalogue_change_id = $5 order by start_date desc",
                      "select distinct cast(it.translated_item as text) from ais_tariffelement te, ais_product p, ais_tariff t, ais_cataloguechange cc, ais_itemtranslation it, (select ab.revenue_code_id, rgd.group_revenue_code from cc_tbl_dat_rev_group_det rgd, ais_revenuecode ab where rgd.group_revenue_code= $1 and rgd.revenue_code_name =ab .revenue_code_name ) rev_code where te.product_id = p.product_id and te.tariff_id = t.tariff_id and te.catalogue_change_id = (select catalogue_change_id from ais_cataloguechange where catalogue_status = $2 and currency_code = $3) and cc.catalogue_change_id = te.catalogue_change_id and cc.catalogue_change_id = t.catalogue_change_id and it.internal_item = p.product_name and it.language_id in ($4,$5,$6) and it.translatable_item_id = $7 and (init_revenue_code_id = rev_code.revenue_code_id or recur_revenue_code_id = rev_code.revenue_code_id or term_revenue_code_id = rev_code.revenue_code_id or early_term_fix_rev_code_id = rev_code.revenue_code_id or susp_rev_code_id = rev_code.revenue_code_id or early_term_mult_rev_code_id = rev_code.revenue_code_id or susp_recur_rev_code_id = rev_code.revenue_code_id or react_rev_code_id = rev_code.revenue_code_id)",
                      "select distinct pd.datname as datname, substring(pss.query from $1 for $2) as query, sum(pss.total_plan_time+pss.total_exec_time) over (partition by substring(pss.query from 1 for 50)) as totaltime, sum((pss.total_plan_time+pss.total_exec_time)/calls) over (partition by substring(pss.query from 1 for 50)) as totalavgtime from pg_stat_statements as pss inner join pg_database as pd on pss.dbid=pd.oid where (pss.total_plan_time+pss.total_exec_time)>$3 and (substring(pss.query from $4 for $5) not like $6 or substring(pss.query from $7 for $8) not like $9) order by 3 desc limit $10",
                      "select distinct x.product_id, y.product_name, x.tariff_id, z.tariff_name from ais_tariff z, ( select /*+ indexscan(a custhasproduct_pk) indexscan(b custproducttariffdetails_pk) */ a.product_id, b.tariff_id from ais_custhasproduct a, ais_custproducttariffdetails b, ais_custproductdetails c where c.account_num = raccount_num and c.customer_ref = b.customer_ref and c.product_seq = b.product_seq and c.start_dat = b.start_dat and b.start_dat <= rnext_bill_date - interval $23 and (b.end_dat >= rnext_bill_date - interval $24 or b.end_dat is null) and b.customer_ref = a.customer_ref and b.product_seq = a.product_seq and b.tariff_id in ( select t.tariff_id --distinct t.tariff_id from ais_tariff t, ais_tariff tp, ais_tariffelement te where t.parent_tariff_id = tp.tariff_id and (tp.tariff_id, te.product_id) in ( select tariff_id, product_id from cc_tbl_dat_ops_list_criteria where process_name = $25 ) and t.catalogue_change_id = tp.catalogue_change_id and te.tariff_id = t.tariff_id and te.catalogue_change_id = t.catalogue_change_id and t.catalogue_change_id = catalogue_change_id_tmp and t.sales_start_dat <= rnext_bill_date - interval $26 and (t.sales_end_dat >= rnext_bill_date - interval $27 or t.sales_end_dat is null) and te.start_dat <= rnext_bill_date - interval $28 and (te.end_dat >= rnext_bill_date - interval $29 or te.end_dat is null) ) --group by a.product_id, b.tariff_id ) x, product y where y.product_id = x.product_id and x.tariff_id = z.tariff_id and z.catalogue_change_id = catalogue_change_id_tmp and $30 = ( select count(*) from cc_tbl_dat_ops_chk_allpromo wc where wc.product_id = x.product_id and wc.tariff_id = x.tariff_id and wc.tariff_type <> $31 )",
                      "select domaingroup.start_domain_id , domaingroup.end_domain_id from domaingroup domaingroup where domaingroup.domain_group_id=$1",
                      "select event_type from publiceventconsumer",
                      "select exists ( select $5 from eventtypemapping m inner join publiceventconsumer c on m.public_type = c.event_type where m.private_type = p_event_type )",
                      "select exists ( select $5 from publiceventconsumer where event_type = p_event_type )",
                      "select exists( select $2 from pg_roles where rolname = $1 )",
                      "select exists( select $3 from pg_auth_members am join pg_roles rol on am.roleid = rol.oid join pg_roles member on am.member = member.oid where rol.rolname = $1 and member.rolname = $2 and am.admin_option = $4 )",
                      "select f.control_filename, f.event_filename from cc_tbl_dat_up_filelog f,cc_tbl_dat_up_control_prefix p where f.event_file_type = $1 and f.status = $2 and f.migration_flag = $3 and p.event_file_type = $4 and p.output_path like $5 and p.prefix = substr(f.control_filename,$6,length(p.prefix)) order by f.control_filename",
                      "select gnvaccaction$lockaccountrows(accountnum)",
                      "select gnvaccaction$thresholdtriggered(p_accountnum, 0, 0, 0, 0, 0, 0, 0, 0, v_oldcreditlimitmny, p_newcreditlimitmny)",
                      "select gnvassert$assert(p_boo => (p_val is not null and p_val::text <> $4), p_geneva_error_num => p_geneva_error_num, p_geneva_error_context => p_geneva_error_context)",
                      "select gnvextkey$insertphysicalpaymentextname1nc(physicalcustomerref, physicalpayseq::bigint, physpayname, nc_gen_short_murmurhash3_64(physpayname))",
                      "select gnvinstrumentation$endinstrumentation($1, $2)",
                      "select gnvinstrumentation$startinstrumentation($1, $2)",
                      "select gnvintaccountdetails$package_initialize($1)",
                      "select gnvintproductcharging$setcustprodchargedates(p_customerref, p_productseq, v_oldenddtm, --pr 46892 passing in the non-truncated date $21, $22, $23, $24, v_newproductenddate, v_newproductenddate)",
                      "select gnvintproductstatus$modifyproductsdates(p_customerref => p_customerref, p_productseq => p_productseq, p_oldeffectivedtm => p_oldstartdatetime, p_neweffectivedtm => p_newstartdatetime, p_startdatetimeboo => $35, p_contractrec => v_contractrec, p_earlytermboo => v_wantetschargesboo, p_addonsuperbehaviourboo => p_addonsuperbehaviour, p_issuperaddoncall => p_issuperaddoncall, p_issupermodifycall => p_issupermodifycall, p_applytoproducthierarchy => p_applytohierarchyboo, p_overrideprodtrfrules => p_overrideprodtrfrules, p_overridevalforpm => p_overridevalforpm)",
                      "select gnvprdjobhasfile$updatejobhasfileintnc ( $1 , $2 , $3 , $4 , $5 , $6 )",
                      "select gnvprdproductstatus$createcustprodstatus( p_customerref => p_customerref, p_productseq => p_productseq, p_startdatetime => p_startdatetime, p_nextstatusdatetime => p_nextstatusdatetime, p_productstatus => p_productstatus, p_statusreason => p_statusreason, p_earlytermsurchargeboo => p_earlytermsurchargeboo, p_applytoproductheirarchyboo => p_applytoproductheirarchyboo, p_addonsuperbehaviourboo => 'f', -- this parameter is added for 2270 enhancement and is default to 'f' as the public pl/sql apis will not support the parent product date changes when the peer product dates are changed. this parameter will be used only by eca. p_issuperaddoncall => 'f')",
                      "select gnvprdproductstatus$modifycustprodstatus( p_customerref, p_productseq, p_productstatus, p_oldstartdatetime, p_oldstatusreason, p_newstartdatetime, p_newstatusreason, p_earlytermsurchargeboo, v_addonsuperbehaviourboo, v_issuperaddoncall, v_issupermodifycall, p_applytoproducthierarchyboo )",
                      "select gnvprdproductstatus$modifycustprodtermdtm(p_customerref, v_productseq, p_oldeffectivedtm, p_neweffectivedtm, v_parentproductboo, p_addonsuperbehaviourboo, p_issuperaddoncall, p_issupermodifycall, null, p_overridevalforpm)",
                      "select integer_value from gparams where name = param_name and start_dtm <= today and upper(type) = upper($6) order by start_dtm desc",
                      "select integer_value from gparams where name = param_name and start_dtm <= today and upper(type) = upper($8) order by start_dtm desc",
                      "select invoicing_co_id, vat_reg_required_boo, tax_exempt_boo from contractedpointofsupply where cps_id = cpsid",
                      "select invs.account_num from pickup pk,cc_tbl_dat_inv_summary invs where upper(pk.case_name) like '%pdf_noprint%' and pk.customer_ref=invs.customer_ref and pk.start_date < invs.periodend and pk.end_date >= invs.periodstart and pk.customer_ref is not null and (pk.flag is null or pk.flag <> 'y') and pk.account_num is null union select invs.account_num from pickup pk,cc_tbl_dat_inv_summary invs where upper(pk.case_name) like '%pdf_noprint%' and pk.account_num=invs.account_num and pk.start_date < invs.periodend and pk.end_date >= invs.periodstart and pk.account_num is not null and (pk.flag is null or pk.flag <> 'y') union select invs.account_num from pickup pk,cc_tbl_dat_inv_summary invs where upper(pk.case_name) like '%pdf_noprint%' and invs.customer_ref in( select customer_ref from ais_customer where root_customer_ref in (select root_customer_ref from pickup)) and pk.start_date < invs.periodend and pk.end_date >= invs.periodstart and nvl(pk.flag,'null') <> 'y' union select invs.account_num from pickup pk,cc_tbl_dat_inv_summary invs where upper(pk.case_name) like '%pdf_noprint%' and invs.customer_ref in( select customer_ref from ais_customerattributes where mail_group_id in (select mail_group_id from pickup )) and pk.start_date < invs.periodend and pk.end_date >= invs.periodstart and nvl(pk.flag,'null') <> 'y'",
                      "select job_id from nrmjob where job_type_id = $5 and (job_status = $1 or job_status = $2 and process_id = $3) and release_version = $4 order by created_dtm limit $6 for update skip locked",
                      "select min(effective_dtm) from ais_custproductstatus where customer_ref = v_customerref and product_seq = productseq_arr[$27] and product_status = $28",
                      "select n.nspname,p.proname,p.prorettype,p.proargtypes, t.typtype,t.typrelid, p.proargnames, p.proargmodes, p.proallargtypes, p.oid from pg_catalog.pg_proc p, pg_catalog.pg_namespace n, pg_catalog.pg_type t where p.pronamespace=n.oid and p.prorettype=t.oid and n.nspname like $1 and p.proname like $2 order by n.nspname, p.proname, p.oid::text",
                      "select one_off_points, recurring_points, event_point_rate from tariffelementband teb, tariffelement te, (with recursive te as(select * from tariff where tariff_id = 79577::integer and catalogue_change_id = 1557::integer union all select t.* from te r join tariff t on t.tariff_id = r.parent_tariff_id and t.catalogue_change_id = 1557::integer )select * from te) t where teb.tariff_id = t.tariff_id and teb.catalogue_change_id = 1557::integer and teb.product_id = 38::integer and teb.product_quantity_threshold <= 1::integer and teb.start_dat = te.start_dat and te.tariff_id = t.tariff_id and te.catalogue_change_id = 1557::integer and te.product_id = 38::integer and te.start_dat = (select max(start_dat) from tariffelement te where te.start_dat <= '2025-09-30' and te.tariff_id = t.tariff_id and te.catalogue_change_id = 1557::integer and te.product_id = 38::integer )",
                      "select p.product_family_id from product p where p.product_id = productid",
                      "select payloadjson::text::bytea as payload, $8::text as event_type",
                      "select pg_database.datname ,pg_database_size(pg_database.datname) from pg_database",
                      "select physicalpayment.customer_ref , physicalpayment.physical_payment_seq , physicalpayment.account_num , physicalpayment.batch_id , physicalpayment.cancelled_by_ora , physicalpayment.cancelled_dtm , physicalpayment.cancelled_txt , physicalpayment.created_dtm , physicalpayment.currency_code , physicalpayment.failed_by_ora , physicalpayment.failed_dtm , physicalpayment.failure_code_id , physicalpayment.failure_txt , physicalpayment.payment_method_id , physicalpayment.payment_req_id , physicalpayment.pending_pay_created_dtm , physicalpayment.physical_payment_dat , physicalpayment.physical_payment_mny , physicalpayment.physical_payment_ref , physicalpayment.physical_payment_status , physicalpayment.physical_payment_txt , physicalpayment.previous_payment_status , physicalpayment.receivables_group_attr_1 , physicalpayment.receivables_group_attr_2 , physicalpayment.receivables_group_attr_3 , physicalpayment.receivables_group_attr_4 , physicalpayment.receivables_group_attr_5 , physicalpayment.receivables_group_attr_6 , physicalpayment.refund_boo from physicalpayment physicalpayment where (physicalpayment.customer_ref=$1 )and(physicalpayment.physical_payment_seq=$2 )",
                      "select pvcesdomainlookup2.domain_id , pvcesdomainlookup2.target_domain_id , tmpeventguiding.event_num , tmpeventguiding.event_source_label from pvcesdomainlookup2 pvcesdomainlookup2 cross join tmpeventguiding tmpeventguiding where (((pvcesdomainlookup2.event_source=tmpeventguiding.event_source)and(pvcesdomainlookup2.event_type_id=tmpeventguiding.event_type_id))and(pvcesdomainlookup2.start_dtm<=tmpeventguiding.event_dtm))and((pvcesdomainlookup2.end_dtm>=tmpeventguiding.event_dtm)or(pvcesdomainlookup2.end_dtm is null ))",
                      "select pvcostcode4.banding_model_id , pvcostcode4.costcode , pvcostcode4.costcode_desc , pvcostcode4.costcode_name , pvcostcode4.costgroup_id , pvcostcode4.cost_band_id , pvcostcode4.end_dat , pvcostcode4.rating_catalogue_id , pvcostcode4.start_dat , pvcostcode4.ust_jcode from pvcostcode4 pvcostcode4 where pvcostcode4.rating_catalogue_id=$1 order by pvcostcode4.banding_model_id asc, pvcostcode4.start_dat asc",
                      "select pvnrmjob4.job_status , pvnrmjob4.job_info , pvnrmjob4.job_args , pvnrmjob4.job_id , pvnrmjob4.parent_span_id , pvnrmjob4.trace_id , pvnrmjob4.job_priority , pvnrmjob4.domain_group_id , pvnrmjob4.last_update_dtm , pvnrmjob4.process_instance_id from pvnrmjob4 pvnrmjob4 where (pvnrmjob4.release_version=$1 )and(((((pvnrmjob4.job_type_id=$2 )and((((pvnrmjob4.job_status=$3 )or(pvnrmjob4.job_status=$4 ))or(pvnrmjob4.job_status=$5 ))or((pvnrmjob4.job_status=$6 )and(pvnrmjob4.next_retry_dtm<=$7 ))))and(pvnrmjob4.domain_group_id=$8 ))and(pvnrmjob4.logical_host_name is null ))and($9=$10)) order by pvnrmjob4.created_dtm asc, pvnrmjob4.job_id asc for update skip locked limit $11",
                      "select pvnrmjob4.job_status , pvnrmjob4.job_info , pvnrmjob4.job_args , pvnrmjob4.job_id , pvnrmjob4.parent_span_id , pvnrmjob4.trace_id , pvnrmjob4.job_priority , pvnrmjob4.domain_group_id , pvnrmjob4.last_update_dtm , pvnrmjob4.process_instance_id from pvnrmjob4 pvnrmjob4 where (pvnrmjob4.release_version=$1 )and((((pvnrmjob4.job_type_id=$2 )and((((pvnrmjob4.job_status=$3 )or(pvnrmjob4.job_status=$4 ))or(pvnrmjob4.job_status=$5 ))or((pvnrmjob4.job_status=$6 )and(pvnrmjob4.next_retry_dtm<=$7 ))))and(pvnrmjob4.logical_host_name is null ))and($8=$9)) order by pvnrmjob4.created_dtm asc, pvnrmjob4.job_id asc for update skip locked limit $10",
                      "select pvratingelement7.charge_segment_id , pvratingelement7.charging_rate , pvratingelement7.cost_band_id , pvratingelement7.drop_event_boo , pvratingelement7.drop_event_category , pvratingelement7.end_dat , pvratingelement7.event_class_id , pvratingelement7.fixed_charge_mny , pvratingelement7.fixed_points , pvratingelement7.max_cost_mny , pvratingelement7.min_cost_mny , pvratingelement7.on_net_boo , pvratingelement7.periodic_charge_mny , pvratingelement7.point_rate , pvratingelement7.rating_catalogue_id , pvratingelement7.rating_tariff_id , pvratingelement7.revenue_code_id , pvratingelement7.start_dat , pvratingelement7.tax_override_id , pvratingelement7.time_rate_id , pvratingelement7.unit_duration , pvratingelement7.unit_name , pvratingelement7.ust_category_id , pvratingelement7.ust_code_id from pvratingelement7 pvratingelement7 where pvratingelement7.rating_catalogue_id=$1",
                      "select pvtariff7.catalogue_change_id , pvtariff7.contract_term , pvtariff7.contract_terms_boo , pvtariff7.contract_term_units , pvtariff7.customer_ref , pvtariff7.external_cost_tariff_id , pvtariff7.internal_cost_tariff_id , pvtariff7.parent_tariff_id , pvtariff7.product_family_id , pvtariff7.sales_end_dat , pvtariff7.sales_start_dat , pvtariff7.tariff_desc , pvtariff7.tariff_id , pvtariff7.tariff_name , pvtariff7.tariff_type_id , pvtariff7.tax_inclusive_boo , pvtariff7.ust_override_product_class_id from pvtariff7 pvtariff7 where pvtariff7.catalogue_change_id=$1",
                      "select pvtariffbasis.costing_rules_id , pvtariffbasis.cost_band_id , pvtariffbasis.end_dat , pvtariffbasis.event_class_id , pvtariffbasis.on_net_boo , pvtariffbasis.rating_catalogue_id , pvtariffbasis.rating_tariff_id , pvtariffbasis.start_dat , pvtariffbasis.step_group_id , pvtariffbasis.time_rate_diary_id from pvtariffbasis pvtariffbasis where pvtariffbasis.rating_catalogue_id=$1",
                      "select round(cast(coalesce(a.available_credit, $2) as decimal)/$3,$4) as available_credit, round(cast(coalesce(b.credit_exposure, $5) as decimal)/$6,$7) as credit_exposure, round(cast(coalesce(b.unbilled_usage, $8) as decimal)/$9,$10) as unbilled_usage, round(cast(coalesce(b.unpaid_spend, $11) as decimal)/$12,$13) as unpaid_spend, c.acc_act_thold_set_desc -- from pvavailablecredit a,pvaccountbalance10 b,pvaccactionthresholdset c,account d from ais_pvavailablecredit a join account d on d.account_num = a.account_num left join ais_pvaccountbalance b on d.account_num = b.account_num left join ais_pvaccactionthresholdset c on d.acc_act_thold_set_id = c.acc_act_thold_set_id where d.account_num = pin_acctnbr",
                      "select set_config($1,$2::text,$3)",
                      "select set_config($1,gnvgen$gnvintegrityerror()::text,$2)",
                      "select set_config($2, gnvgen$createerrormessage(gnvpaymisc$gnvpayaccountexisterror(), $3, gnvgen$tostr(accountnum)), $4)",
                      "select set_config($2, value::text, $3)",
                      "select set_config($6,v_errormsg::text,$7)",
                      "select shobj_description(r.oid, $2) from pg_roles r where r.rolname = $1",
                      "select string_value from gparams where name = param_name and start_dtm <= today and upper(type) = $6 order by start_dtm desc",
                      "select string_value from gparams where name = param_name and start_dtm <= today and upper(type) = $9 order by start_dtm desc",
                      "select sum( case br.ignore_tax_mny_boo when $33 then (coalesce(br.invoice_mny, $34) + coalesce(br.invoice_tax_mny, $35)) else coalesce(br.invoice_mny, $36) end) from billreceivable br,receivableclass rc where br.account_num = accountnum and br.receivable_class_id = rc.receivable_class_id and br.bill_seq = billseq and br.bill_version = (select max(bill_version) from billreceivable where account_num = accountnum and bill_seq = billseq) and (receivableclassid is null or br.receivable_class_id = receivableclassid) and (groupid is null or rc.group_id = groupid) and ((coalesce(br.receivables_group_attr_1,$37) || gnvintpay$gc_delimiter() || coalesce(br.receivables_group_attr_2,$38) || gnvintpay$gc_delimiter() || coalesce(br.receivables_group_attr_3,$39) || gnvintpay$gc_delimiter() || coalesce(br.receivables_group_attr_4,$40)|| gnvintpay$gc_delimiter() || coalesce(br.receivables_group_attr_5,$41) || gnvintpay$gc_delimiter() || coalesce(br.receivables_group_attr_6,$42) = v_aggrrecgroupattr) or (v_invoiceleveldebtboo = gnvgen$gnvtruestring() or (v_recvclassleveldebtboo = gnvgen$gnvtruestring()) or (v_invrecvclassleveldebtboo = gnvgen$gnvtruestring())))",
                      "select sum(size/$1/$2) as size,extract($3 from(max(modification)-min(modification))) as duration, count(*) as count from pg_ls_waldir()",
                      "select t1.*, t2.rolname, t3.datname from (select query, dbid, userid, queryid, round(total_plan_time::numeric + total_exec_time::numeric, $1) as total_time, calls, rows, round((total_plan_time::numeric + total_exec_time::numeric) / calls, $2) as avg_time, round(($3 * (total_plan_time+total_exec_time) / sum(total_plan_time::numeric + total_exec_time::numeric) over ())::numeric, $4) as percentage_cpu, shared_blks_read, shared_blks_written, temp_blks_written from pg_stat_statements order by total_time desc limit $5) t1 join pg_roles t2 on (t1.userid=t2.oid) join pg_database t3 on (t1.dbid=t3.oid) where t2.rolname != $6",
                      "select tariff_id from custproducttariffdetails where customer_ref = customerref and product_seq = productseq::bigint and ((enddat is null or enddat >= start_dat) and (startdat <= end_dat or end_dat is null) )",
                      "select teb.* from tariffelementband teb, tariffelement te where teb.product_id = 38::integer and teb.tariff_id = 79577::integer and teb.catalogue_change_id = 1557::integer and teb.product_quantity_threshold <= 0::integer and teb.start_dat = te.start_dat and te.product_id = 38::integer and te.tariff_id = 79577::integer and te.catalogue_change_id = 1557::integer and te.start_dat = (select max(start_dat) from tariffelement te where te.start_dat <= '2025-09-30' and te.product_id = 38::integer and te.tariff_id = 79577::integer and te.catalogue_change_id = 1557::integer) and (coalesce(te.end_dat,'2025-09-30 00:41:53+07') >= '2025-09-30' ) order by teb.product_quantity_threshold desc",
                      "select uuid, task_uuid, log_filename, error, started_at, work_done, work_failed, last_progress_update_at, is_recovery_required, labels, error_details from work_item where work_item_state != $2 and task_uuid = $1",
                      "select uuid,release_version,task_uuid,is_recovery,is_recovery_required,process_id,attempt_number,priority,created_at,range_number,worker_id,started_at,finished_at,error,log_filename,last_status_update,interrupted_at,interrupted_cause,interrupted_by,state_logs,work_item_state,work_done,work_failed,log_attributes,last_progress_update_at,state_changed_at,labels,exit_code from work_item where task_uuid = $1",
                      "update accountratingsummary set rated_event_tax_mny = $1, rated_anti_event_count = $2, rated_event_count = $3, rated_event_mny = $4, bill_period_num = $5, cloned_event_num = $6, costedevent_anti_rec_count = $7, costedevent_rec_count = $8, policy_threshold_mny = $9, drop_event_count = $10, drop_unlimited_count = $11, event_seq_num = $12, event_storage_dat = $13, policy_id = $14, pending_otc_tax_mny = $15, last_costed_message_dtm = $16, latest_rated_event_dtm = $17, pending_otc_lines_tax_mny = $18, pending_otc_mny = $19 where (((accountratingsummary.account_num=$20 ) and (accountratingsummary.event_process_group=$21 )) and (accountratingsummary.event_seq=$22 )) and (accountratingsummary.domain_id=$23 )",
                      "update accountratingsummary set rated_event_tax_mny = $1, rated_anti_event_count = $2, rated_event_count = $3, rated_event_mny = $4, bill_period_num = $5, cloned_event_num = $6, costedevent_anti_rec_count = $7, costedevent_rec_count = $8, policy_threshold_mny = $9, drop_event_count = $10, drop_unlimited_count = $11, event_seq_num = $12, event_storage_dat = $13::timestamptz, policy_id = $14, pending_otc_tax_mny = $15, last_costed_message_dtm = $16::timestamptz, latest_rated_event_dtm = $17::timestamptz, pending_otc_lines_tax_mny = $18, pending_otc_mny = $19 where (((accountratingsummary.account_num=$20 ) and (accountratingsummary.event_process_group=$21 )) and (accountratingsummary.event_seq=$22 )) and (accountratingsummary.domain_id=$23 )",
                      "update cc_tbl_dat_echannel_list_acc set status = $1 , status_desc = $2 where status=$3 and account_num not in ( select distinct bd.account_num from cc_tbl_dat_echannel_billdata bd where bd.exp_filename is not null )",
                      "update cc_tbl_dat_echannel_list_file set status = $1 where exp_filename not in ( select distinct lc.file_name from cc_tbl_dat_echannel_list_acc lc where lc.status = $2 and lc.file_name is not null ) and status <> $3 and ftype = $4",
                      "update cc_tbl_dat_oml_message set account_num = $1, customer_ref=$2, external_action_id =$3,threshold_type=$4, threshold_value=$5,account_balance_before_transaction=$6 , account_balance_after_transaction=$7, threshold_direction=$8, threshold_owner=$9, is_from_threshold_set= $10, threshold_set_id =$11 , threshold_number= $12, threshold_money = $13 , credit_limit_before =$14, credit_limit_after=$15 where event_name=$16 and event_type=$17",
                      "update cc_tbl_dat_oml_message set status = $4 where status = $5 and event_name = $1 and event_type = $2 and msg_seq = $3",
                      "update cc_tbl_dat_ops_listtariff_auto u set remark = (select p.remark from cc_tbl_dat_ops_chk_allpromo p where u.tariff_id = p.tariff_id and p.tariff_type = $11 and p.remark is not null and p.next_bill_date1 is null limit $12) where u.user_id = p_user_id and u.process_seq = p_process_seq and u.case_type = $13 and $14 = (select count(*) from cc_tbl_dat_ops_chk_allpromo p where u.tariff_id = p.tariff_id and p.tariff_type = $15 and p.next_bill_date1 is null limit $16)",
                      "update cc_tbl_dat_up_sortlog set status = $1 , completed_dtm = current_timestamp where status = $2",
                      "update cc_tbl_dat_up_sortlog set status = $1 where status = $2",
                      "update custprodinvoicediscusage set transaction_id = $1, total_authorised_mny = $2, total_partials_usage = $3, event_seq = $4, total_partials_mny = $5, total_otc_mny = $6, total_usage = $7, prod_group_id = $8, tenant_id = $9, account_num = $10, anti_event_count = $11, anti_event_disc_mny = $12, anti_event_disc_usage = $13, bonus_count = $14, carried_over_boo = $15, counter_resets = $16, counter_usage = $17, customer_category = $18, dyn_alloc_charge_data = $19, event_count = $20, external_balance_liid = $21, fast_cache_seq = $22, total_authorised_usage = $23, last_rated_dtm = $24, latest_event_dtm = $25, total_bonus_award = $26, total_discounted_usage = $27, total_discounted_mny = $28 where ((((((custprodinvoicediscusage.customer_ref=$29 ) and (custprodinvoicediscusage.product_seq=$30 )) and (custprodinvoicediscusage.event_discount_id=$31 )) and ((custprodinvoicediscusage.event_source is null ) or (custprodinvoicediscusage.event_source=$32 ))) and (custprodinvoicediscusage.period_num=$33 )) and (custprodinvoicediscusage.event_seq=$34 )) and (custprodinvoicediscusage.domain_id=$35 )",
                      "update custprodinvoicediscusage set transaction_id = $1, total_authorised_mny = $2, total_partials_usage = $3, event_seq = $4, total_partials_mny = $5, total_otc_mny = $6, total_usage = $7, prod_group_id = $8, tenant_id = $9, account_num = $10, anti_event_count = $11, anti_event_disc_mny = $12, anti_event_disc_usage = $13, bonus_count = $14, carried_over_boo = $15, counter_resets = $16, counter_usage = $17, customer_category = $18, dyn_alloc_charge_data = $19, event_count = $20, external_balance_liid = $21, fast_cache_seq = $22, total_authorised_usage = $23, last_rated_dtm = $24::timestamptz, latest_event_dtm = $25::timestamptz, total_bonus_award = $26, total_discounted_usage = $27, total_discounted_mny = $28 where ((((((custprodinvoicediscusage.customer_ref=$29 ) and (custprodinvoicediscusage.product_seq=$30 )) and (custprodinvoicediscusage.event_discount_id=$31 )) and ((custprodinvoicediscusage.event_source is null ) or (custprodinvoicediscusage.event_source=$32 ))) and (custprodinvoicediscusage.period_num=$33 )) and (custprodinvoicediscusage.event_seq=$34 )) and (custprodinvoicediscusage.domain_id=$35 )",
                      "update custproductcharge set finished_boo = $1, billed_to_dat = $2::timestamptz, cpc_status = $3, last_invoice_dat = $4, earliest_change_dat = $5, prev_bill_to_dat = $6, accruals_mny = $7, tariff_id = $8, tariff_version = $9, last_taxed_dat = $10::timestamptz, last_taxed_cps_id = $11 where (((((custproductcharge.customer_ref=$12 ) and (custproductcharge.product_seq=$13 )) and (custproductcharge.charge_type=$14 )) and (custproductcharge.account_num=$15 )) and ((custproductcharge.budget_centre_seq is null ) or (custproductcharge.budget_centre_seq=$16 ))) and (custproductcharge.start_dat=$17::timestamptz )",
                      "v_bchkdup = exists ( select from cc_tbl_dat_pc_add_info ai, ais_physicalpayment pp where ai.account_num = p_inaccountnum and ai.receipt_number = p_inreceiptnum and pp.payment_method_id = p_inpaymentmethodid and coalesce(ai.payment_attribute_1,$39) = coalesce(p_inpaymentattribute1,$40) and coalesce(ai.payment_attribute_2,$41) = coalesce(p_inpaymentattribute2,$42) and coalesce(ai.payment_attribute_3,$43) = coalesce(p_inpaymentattribute3,$44) and coalesce(ai.payment_attribute_4,$45) = coalesce(p_inpaymentattribute4,$46) and coalesce(ai.payment_attribute_5,$47) = coalesce(p_inpaymentattribute5,$48) and coalesce(ai.payment_received_mny,$49) = coalesce(v_total_mny,$50) and ai.customer_ref = pp.customer_ref and ai.physical_payment_seq = pp.physical_payment_seq )",
                      "with cgm as (select count(*) cnt, community_group_id, member_string from communitygroupmember where community_group_id = $1 and logically_deleted_dtm is null and version_num > $2 group by (community_group_id, member_string)) select b.member_string , extract( $3 from b.start_dtm ) as start_dtm_secs ,case when b.end_dtm is null then $4 else extract( $5 from b.end_dtm ) end as end_dtm_secs ,cgm.cnt from communitygroupmember b, cgm where b.community_group_id = cgm.community_group_id and b.member_string = cgm.member_string and logically_deleted_dtm is null and version_num > $6 and cgm.cnt > $7 order by b.member_string, start_dtm_secs desc",
                      "with cte as ( select c.account_num , c.case_name , a.periodstart , a.periodend , cc_f_get_account_status(c.account_num, null) as account_status , f.start_date as start_input , f.end_date as end_input , e.next_bill_dtm from cc_tbl_dat_summary_pickup c inner join cc_tbl_dat_pickup_acc f on f.account_num = c.account_num and (f.status is null or f.status = '') inner join cc_tbl_dat_inv_summary a on a.processed_dtm >= timestamp '1960-01-01' and a.processed_dtm < timestamp '1960-01-02' and a.account_num = c.account_num inner join ais_account e on e.account_num = c.account_num inner join ais_customer d on d.customer_ref = e.customer_ref inner join ais_customerattributes b on b.customer_ref = d.customer_ref where c.group_account = 'summary_pickup2' and c.status is null and c.case_name !~~ '%noprint_fbb%' ) insert into cc_tbl_dat_prepare_upy ( account_num , case_name , periodstart , periodend , account_status , start_input , end_input , next_bill_dtm ) select cte.account_num, cte.case_name, cte.periodstart, cte.periodend, cte.account_status, cte.start_input, cte.end_input, cte.next_bill_dtm from cte cte where ( cte.case_name !~~ '%split%' and cte.case_name !~~ '%noprint_ta%' and cte.case_name !~~ '%pickup_print_previous_balance%' and cte.end_input < cte.next_bill_dtm and cte.account_status = 'ta' ) or ( cte.case_name !~~ '%split%' and cte.case_name ~~ any('{%pickup_print%, %noprint_%}') --and cte.case_name !~~ '%noprint_fbb%' and cte.case_name !~~ '%pickup_print_previous_balance%' and cte.end_input < cte.next_bill_dtm and cte.account_status = 'ok' ) or ( cte.case_name !~~ '%split%' and cte.case_name ~~ any('{%pickup_print%, %noprint_%}') --and c.case_name !~~ '%noprint_fbb%' and cte.case_name !~~ '%pickup_print_previous_balance%' and cte.account_status = 'tx' ) or ( cte.case_name !~~ '%split%' and cte.case_name ~~ any('{%pickup_print%, %noprint_%}') --and c.case_name !~~ '%noprint_fbb%' and cte.case_name !~~ '%pickup_print_previous_balance%' and cte.end_input = cte.start_input and cte.periodstart + interval '1 month' between cte.start_input and cte.end_input ) or cte.account_status='tx'",
                      "with cte as ( select cpd.account_num, cpd.customer_ref, cpd.product_seq, chp.parent_product_seq, cptd.tariff_id, teb.recurring_number, te.start_dat, te.end_dat, chp.product_id, cpd2.product_label, cpd2.product_seq as mobile_product_seq from ais_custproductdetails cpd join ais_custhasproduct chp on chp.customer_ref = cpd.customer_ref and chp.product_seq = cpd.product_seq and chp.parent_product_seq is not null and product_id = any( array( select cast(value as integer) from cc_tbl_dat_job_param_r3 where job_name=$5 and param like $6) ) join ais_custproducttariffdetails cptd on cptd.customer_ref = cpd.customer_ref and cptd.product_seq = cpd.product_seq and cptd.start_dat <= to_date($1 ,$7) and coalesce( cptd.end_dat, current_timestamp ) >= to_date($2 ,$8) join ais_tariffelement te on te.tariff_id = cptd.tariff_id and te.product_id = chp.product_id and te.catalogue_change_id in (select catalogue_change_id from ais_cataloguechange where catalogue_status=$9 and currency_code=$10) join ais_tariffelementband teb on teb.tariff_id = te.tariff_id and teb.product_id = te.product_id and teb.start_dat = te.start_dat and teb.catalogue_change_id = te.catalogue_change_id join ais_custproductdetails cpd2 on cpd2.customer_ref = chp.customer_ref and cpd2.product_seq = chp.parent_product_seq where cpd.account_num = $3 and cpd.customer_ref = $4 and not exists (select from ais_tariffelementdiscount ted where cptd.tariff_id = ted.tariff_id and ted.product_id = chp.product_id and ted.catalogue_change_id = teb.catalogue_change_id) ) select product_sequence, product_sequence_parent, recur_charge_parent, product_seq_child, recur_charge_child, mobile_number, product_id, tariff_id, te_start_dat, te_end_dat from ( select cast(cte.mobile_product_seq as text) as product_sequence, cast(cte.product_seq as text) as product_sequence_parent, cast(cte.recurring_number as text) recur_charge_parent, $11 product_seq_child, $12 recur_charge_child , cast(cte.product_label as text) as mobile_number, cast(cte.product_id as text) product_id , cast(cte.tariff_id as text) tariff_id, cast(to_char(cte.start_dat, $13) as text) te_start_dat, cast(to_char(coalesce(cte.end_dat,current_date),$14) as text) te_end_dat from cte cte where exists (select from ais_producthasparentproduct h1 where h1.parent_product_id = cte.product_id) union select cast(cte.mobile_product_seq as text) as product_sequence, cast(cte.product_seq as text) as product_sequence_parent, $15 recur_charge_parent, cast(cte2.product_seq as text) product_seq_child, cast(cte2.recurring_number as text) recur_charge_child , cast(cte.product_label as text) as mobile_number, cast(cte2.product_id as text) product_id , cast(cte2.tariff_id as text) tariff_id , cast(to_char(cte2.start_dat, $16) as text) te_start_dat , cast(to_char(coalesce(cte2.end_dat,current_date), $17) as text) te_end_dat from cte cte join cte cte2 on cte2.customer_ref = cte.customer_ref and cte2.parent_product_seq = cte.product_seq ) t order by mobile_number, cast(product_sequence as bigint),cast(tariff_id as integer),te_start_dat",
                      "with cte as ( select cpd.customer_ref, coalesce(chp1.parent_product_seq, $29) mobile_product_seq, chp2.parent_product_seq promo_product_seq, chp2.product_seq discount_product_seq, cpt.tariff_id, t.tariff_name, cpt.start_dat, cpt.end_dat, chp2.product_id discount_product_id, bt.discount_type, bt.event_type_id, bt.discounting_aggregation_level, bt.filter_set from ais_custproductdetails cpd join ais_custproducttariffdetails cpt on cpt.customer_ref = cpd.customer_ref and cpt.product_seq = cpd.product_seq and cpd.start_dat = cpt.start_dat and cpt.tariff_id=any( disc_tariff_ids_arr ) join cc_tbl_dat_ops_disc_billtime bt on bt.tariff_id = cpt.tariff_id and bt.discount_type in ($30,$31) join tariff t on t.tariff_id = cpt.tariff_id and t.catalogue_change_id = v_catalogue_change_id --1477 -- <parameter> join ais_custhasproduct chp2 on chp2.customer_ref = cpt.customer_ref and chp2.product_seq = cpt.product_seq --discount join ais_custhasproduct chp1 on chp1.customer_ref = cpt.customer_ref and chp1.product_seq = chp2.parent_product_seq --promotion where cpd.account_num = raccount_num -- <parameter> and cpt.start_dat <= rend_date -- <parameter> and coalesce(cpt.end_dat,current_date+$32) >= rstart_date -- <parameter> ) select distinct cte.customer_ref as customer_ref, raccount_num as account_num, -- <parameter> nullif( cte.mobile_product_seq, $33) as parent_product_seq, cte.promo_product_seq as promo_product_seq, cte.discount_product_seq as product_seq, cte.tariff_id as tariff_id, cte.tariff_name as tariff_name, cte.start_dat as start_dat, cte.end_dat as end_dat, cte.discount_product_id as product_id, cte.discount_type as discount_type from cte where exists ( select from cte cte2 where cte2.discount_type = cte.discount_type and cte2.event_type_id = cte.event_type_id and cte2.discounting_aggregation_level = cte.discounting_aggregation_level and cte2.discount_product_seq <> cte.discount_product_seq and cte2.promo_product_seq <> cte.promo_product_seq and ( cte2.mobile_product_seq = cte.mobile_product_seq or ( cte2.event_type_id in ($34,$35,$36) and cte2.filter_set in ($37,$38) and ( (cte2.mobile_product_seq = $39 and cte.mobile_product_seq <> $40) or (cte.mobile_product_seq = $41 and cte2.mobile_product_seq <> $42 ) ) ) ) and cte2.start_dat <= coalesce(cte.end_dat,current_date+$43) and coalesce(cte2.end_dat,current_date+$44) >= cte.start_dat )",
                      "with cte as materialized ( select cpd.customer_ref, cpd.product_seq, cpd.account_num, cpd.product_label, cpad.attribute_value from custhasproduct chp inner join custproductdetails cpd on cpd.customer_ref=chp.customer_ref and cpd.product_seq=chp.product_seq and cpd.product_label is not null inner join custproductattrdetails cpad on cpad.customer_ref=cpd.customer_ref and cpad.product_seq=cpd.product_seq and cpad.product_id=chp.product_id and cpad.product_attribute_subid=$2 where chp.customer_ref = $1 and chp.product_id=$3 group by cpd.customer_ref, cpd.product_seq, cpd.account_num, cpd.product_label, cpad.attribute_value ) select cpad.customer_ref, cte.account_num, cast(cpad.product_seq as varchar(20)), cte.product_label, cpad.attribute_value, to_char(cpad.start_dat, $4), to_char(cpad.end_dat, $5), cast( cpad.product_attribute_subid as varchar(10)) from cte cte inner join custproductattrdetails cpad on cpad.customer_ref = cte.customer_ref and cpad.product_seq=cte.product_seq and (cpad.end_dat >= (current_date - interval $6 day) or cpad.end_dat is null) and cpad.product_attribute_subid in ($7,$8,$9,$10) where cte.attribute_value=$11 order by cpad.customer_ref, cte.account_num, cast( cpad.product_attribute_subid as varchar(10)), cte.product_label, cpad.product_seq, to_char(cpad.start_dat , 'yyyymmdd') desc",
                      "with cte as materialized ( select distinct cptd.customer_ref, cptd.product_seq, cptd.start_dat, cptd.end_dat, cpd.account_num, ( case when current_date >= ac.next_bill_dtm then to_timestamp(substr(to_char(ac.bill_event_seq), 1, 6), 'yymmdd') - interval '1 month' else ac.last_bill_dtm end ) as last_bill_dtm, ( case when current_date >= ac.next_bill_dtm then to_timestamp(substr(to_char(ac.bill_event_seq), 1, 6), 'yymmdd') else ac.next_bill_dtm end ) as derived_nextbill_dtm, ac.bill_event_seq from custproducttariffdetails cptd join custproductdetails cpd on cpd.customer_ref = cptd.customer_ref and cpd.product_seq = cptd.product_seq join account ac on ac.account_num = cpd.account_num and ac.customer_ref = cptd.customer_ref and (ac.bill_event_seq is null or length(to_char(ac.bill_event_seq)) = 9 ) where cptd.tariff_id = v_tariff -- loop parameter and cptd.start_dat <= date_trunc( 'day', current_timestamp ) -- and ( ac.bill_event_seq is null or length(substr(to_char(bill_event_seq), 1, 6)) = 6 ) ) insert into cc_tbl_dat_ops_4g_stop_tmp( customer_ref , account_num , start_dat , end_dat , last_bill_dtm , next_bill_dtm , bill_event_seq , bill_cycle , product_seq_mob , product_seq , start_dtm , end_dtm , product_label , main_siebel_name , main_tariff_id , main_tariff_name , ontop_siebel_name , unbar_tariff_id , ontop_tariff_name , start_dtm_mob , end_dtm_mob ) select cte.customer_ref, cte.account_num, cte.start_dat, cte.end_dat, cte.last_bill_dtm, cte.derived_nextbill_dtm, cte.bill_event_seq, aa.bill_cycle, cpd2.product_seq as cpd2_product_seq, cte.product_seq as cptd_product_seq, ( select min(cps1.effective_dtm) from ais_custproductstatus cps1 where cps1.customer_ref = cte.customer_ref and cps1.product_seq = cte.product_seq and cps1.product_status = 'ok' ) start_dtm, ( select max(cps2.effective_dtm) - interval '1 second' from ais_custproductstatus cps2 where cps2.customer_ref = cte.customer_ref and cps2.product_seq = cte.product_seq and cps2.product_status = 'tx' ) end_dtm, cpd2.product_label, v_siebel_name, v_tariff, v_promotion_name, v_ontop_siebel_name, v_ontop_tariff_id, v_ontop_tariff_name, ( select min(cps3.effective_dtm) from ais_custproductstatus cps3 where cps3.customer_ref = cpd2.customer_ref and cps3.product_seq = cpd2.product_seq and cps3.product_status = 'ok' ) start_dtm_mob, ( select max(cps4.effective_dtm) - interval '1 second' from ais_custproductstatus cps4 where cps4.customer_ref = cpd2.customer_ref and cps4.product_seq = cpd2.product_seq and cps4.product_status = 'tx' ) end_dtm_mob from cte cte join ais_custhasproduct chp on chp.customer_ref = cte.customer_ref and chp.product_seq = cte.product_seq join ais_custproductdetails cpd2 on cpd2.customer_ref = chp.customer_ref and cpd2.product_seq = chp.parent_product_seq and cpd2.account_num = cte.account_num and cpd2.product_label is not null join ais_accountattributes aa on aa.account_num = cte.account_num where (cte.end_dat is null or cte.end_dat >= case to_char((cte.derived_nextbill_dtm), 'dd/mm') when '28/02' then cte.derived_nextbill_dtm - 31 else cte.derived_nextbill_dtm - interval '1 month' end) and (cpd2.end_dat is null or cpd2.end_dat >= (case to_char(cte.derived_nextbill_dtm, 'dd/mm') when '28/02' then cte.derived_nextbill_dtm - 31 else cte.derived_nextbill_dtm - interval '1 month' end ))",
                      "with cust_category as ( select * from ( values ($15, $16, $17), ($18, $19, $20), ($21, $22, $23), ($24, $25, $26), ($27, $28, $29), ($30, $31, $32), ($33, $34, $35), ($36, $37, $38), ($39, $40, $41), ($42, $43, $44), ($45, $46, $47) ) as t(customer_type_id, customer_sub_type, category_name) ) select ac.customer_ref, ac.account_num, ac.next_bill_dtm, ast.account_status, aa.bill_cycle, ac.random_hash, c.customer_type_id, ca.customer_sub_type, ac.billing_driver, ac.invoicing_co_id, ac.bill_event_seq as rate_event_seq, ac.last_bill_dtm, ac.last_bill_mny, aa.itemization, ac.total_billed_tot, ac.total_paid_tot, ac.last_bill_seq, c.next_bill_dtm as ca_next_bill_dtm, coalesce(cc.category_name, $48) as rcustomer_type_name from ais_account ac inner join ais_accountattributes aa on aa.account_num = ac.account_num inner join ais_customerattributes ca on ca.customer_ref = ac.customer_ref inner join ais_customer c on c.customer_ref = ac.customer_ref inner join ais_accountstatus ast on ast.account_num = ac.account_num left join cust_category cc on cc.customer_type_id = c.customer_type_id and (cc.customer_sub_type is null or cc.customer_sub_type = ca.customer_sub_type) where ast.effective_dtm = (select max(ast2.effective_dtm) from ais_accountstatus ast2 where ast.account_num = ast2.account_num) and ast.account_status in ($49,$50) and aa.bill_cycle = p_bill_cycle and date(ac.next_bill_dtm) = date(v_next_bill_date) --and ac.next_bill_dtm = to_timestamp(v_next_bill_date, 'yyyy-mm-dd') and ac.random_hash between v_start_hash and v_end_hash",
                      "with cust_category as ( select * from ( values (1, null, 'residential'), (4, '1', 'key account'), (4, '2', 'sme'), (4, '9', 'royal'), (4, '10', 'tot'), (4, '11', 'ais'), (4, '12', 'pre-paid'), (5, '3', 'government'), (5, '4', 'state enterprise'), (5, '5', 'embassy'), (5, '6', 'non profit') ) as t(customer_type_id, customer_sub_type, category_name) ) select ac.customer_ref, br.account_num, ac.next_bill_dtm, ast.account_status, aa.bill_cycle, ac.random_hash, br.bill_dat, case when extract(month from ac.next_bill_dtm) = 3 and extract(day from ac.next_bill_dtm - interval '1 month') = 28 then ac.next_bill_dtm - interval '31 days' else ac.next_bill_dtm - interval '1 month' end as start_dat, ac.next_bill_dtm - interval '1 day' as end_dat, c.customer_type_id, ca.customer_sub_type, ac.billing_driver, ac.invoicing_co_id, ac.bill_event_seq as rate_event_seq, ac.last_bill_dtm, ac.last_bill_mny, aa.itemization, ac.total_billed_tot, ac.total_paid_tot, ac.last_bill_seq, c.next_bill_dtm as ca_next_bill_dtm, coalesce(cc.category_name, 'xxx') as rcustomer_type_name from ais_account ac inner join ais_accountattributes aa on ac.account_num = aa.account_num inner join ais_customer c on ac.customer_ref = c.customer_ref inner join ais_customerattributes ca on c.customer_ref = ca.customer_ref inner join ais_billrequest br on br.account_num = ac.account_num inner join ais_accountstatus ast on ast.account_num = ac.account_num left join cust_category cc on cc.customer_type_id = c.customer_type_id and (cc.customer_sub_type is null or cc.customer_sub_type = ca.customer_sub_type) where ast.effective_dtm = (select max(ast2.effective_dtm) from ais_accountstatus ast2 where ast.account_num = ast2.account_num) and ast.account_status = 'ta' and br.bill_dat between (rend_bill_date + v_list) and (rend_bill_date + 6) and br.bill_request_status = 1 and ac.random_hash > 0 and ac.random_hash between v_start_hash and v_end_hash",
                      "with recursive cet as ( select chp.* from custhasproduct chp where product_seq = productseq::bigint and customer_ref = customerref union all select chp.* from custhasproduct chp join cet on ( chp.parent_product_seq = cet.product_seq and chp.customer_ref = customerref) ) select * from cet",
                      "with tables as ( select * from ( select schemaname as schemaname, relname as table_name, ((coalesce(heap_blks_read,$1) + coalesce(idx_blks_read,$2) + coalesce(toast_blks_read,$3) + coalesce(tidx_blks_read,$4))) as from_disk, ((coalesce(heap_blks_hit,$5) + coalesce(idx_blks_hit,$6) + coalesce(toast_blks_hit,$7) + coalesce(tidx_blks_hit,$8))) as from_cache from pg_statio_user_tables ) a where (from_disk + from_cache) > $9 ) select current_database() as datname, schemaname as schemaname, table_name, from_disk, round((from_disk::numeric / (from_disk + from_cache)::numeric)*$10,$11) as disk_hits_perc , round((from_cache::numeric / (from_disk + from_cache)::numeric)*$12,$13) as cache_hits_perc , (from_disk + from_cache) as total_hits from (select * from tables) a order by from_disk desc limit $14"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": false,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 24,
            "x": 0,
            "y": 13202
          },
          "id": 656,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(query) (increase(sql_pg_queries_v2{col=\"calls\"}[2m])) / 120",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Number of calls by query per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 68,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 0,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "select /*+ ordered index(cprd custprodratingdiscount_uk1) use_nl (cprd)*/ t.event_num, cprd.account_num from tmpdiscountguiding t cross join custprodratingdiscount cprd where cprd.customer_ref = t.customer_ref and cprd.aggregation_level = t.aggregation_level and cprd.discount_ref = t.discount_ref and cprd.start_dtm <= t.event_end_dtm and coalesce(cprd.usage_end_dtm, t.event_start_dtm) >= t.event_start_dtm and coalesce(logically_deleted_boo, 'f') = 'f' and cprd.domain_id = t.domain_id order by cprd.customer_ref, cprd.product_seq, cprd.event_discount_id, cprd.event_source, cprd.start_dtm for update"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "semi-dark-orange",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 13215
          },
          "id": 613,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(query) (increase(sql_pg_queries_v2{col=\"total_time_ms\"}[2m])) / 120",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Total time, milliseconds per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 76,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 0,
                "pointSize": 2,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 13229
          },
          "id": 614,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sort(sum by(query) (rate(sql_pg_queries_v2{col=\"total_cpu_time_ms\"}[1m])) > 0)",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Queries by CPU time, milliseconds per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 68,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 0,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 13243
          },
          "id": 615,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(query) (increase(sql_pg_queries_v2{col=~\"total_blk_read_time_ms|total_blk_write_time_ms\"}[2m])) / 120",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "IO time, milliseconds per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 13257
          },
          "id": 619,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "editorMode": "builder",
              "expr": "sum by(query) (increase(sql_pg_queries_v2{col=\"rows\"}[2m])) \n/\nsum by(query) (increase(sql_pg_queries_v2{col=\"calls\"}[2m])) \n> 0",
              "hide": false,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B"
            }
          ],
          "title": "Rows returned per call",
          "type": "timeseries"
        }
      ],
      "title": "Queries",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 666,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 56,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "lrtkb-ais-custom-crm-api-tls-aisprod-d0893bf2-ais-rb"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "dark-red",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 24,
            "x": 0,
            "y": 2271
          },
          "id": 564,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name) (sql_pg_sessions_v2) > 0",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Database connections per user stacked",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "log": 10,
                  "type": "symlog"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "dbaas_2e608c115fde41229786849b1b211fc9"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "dark-red",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 17,
            "w": 24,
            "x": 0,
            "y": 2322
          },
          "id": 563,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name) (increase(sql_pg_queries_v2{col=\"calls\"}[2m])) / 120",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Number of calls by user per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 68,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 2339
          },
          "id": 663,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name) (increase(sql_pg_queries_v2{col=\"total_time_ms\"}[2m])) / 120",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Total SQL time per user, milliseconds per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 68,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 2353
          },
          "id": 665,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name) (increase(sql_pg_queries_v2{col=\"total_cpu_time_ms\"}[2m])) / 120",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "CPU time per user, milliseconds per second",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 68,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 2367
          },
          "id": 664,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(user_name) (increase(sql_pg_queries_v2{col=~\"total_blk_read_time_ms|total_blk_write_time_ms\"}[2m])) / 120",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "IO time per user, milliseconds per second",
          "type": "timeseries"
        }
      ],
      "title": "DB users comparison",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 559,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 15,
            "w": 12,
            "x": 0,
            "y": 1203
          },
          "id": 561,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, name) (increase(sql_pg_slru_v2{col=~\"hit_bytes\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{name}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, name) (increase(sql_pg_slru_v2{col=~\"exists_bytes|read_bytes|written_bytes|zeroed_bytes\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{name}} | {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, name) (increase(sql_pg_slru_v2{col=~\"truncates|flushes\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{name}} | {{col}}",
              "range": true,
              "refId": "C",
              "useBackend": false
            }
          ],
          "title": "SLRU hits",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 15,
            "w": 12,
            "x": 12,
            "y": 1203
          },
          "id": 549,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, name) (increase(sql_pg_slru_v2{col=~\"hit_bytes\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{name}} | {{col}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, name) (increase(sql_pg_slru_v2{col=~\"exists_bytes|read_bytes|written_bytes|zeroed_bytes\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{name}} | {{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, name) (increase(sql_pg_slru_v2{col=~\"truncates|flushes\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "interval": "",
              "legendFormat": "{{name}} | {{col}}",
              "range": true,
              "refId": "C",
              "useBackend": false
            }
          ],
          "title": "SLRU IO",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "blue",
                "mode": "continuous-purples"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "fieldMinMax": false,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 0.8
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 24,
            "x": 0,
            "y": 1218
          },
          "id": 597,
          "interval": "1m",
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "mergeValues": false,
            "rowHeight": 0.9,
            "showValue": "never",
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_cluster_v2{col=\"checkpoints_timed\"}[2m])) / 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Timed checkpoints",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_cluster_v2{col=\"checkpoints_requested\"}[2m])) / 2",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Requested checkpoints",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Checkpoints schedule",
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "bars",
                "fillOpacity": 52,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "log": 2,
                  "type": "log"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 23,
            "x": 1,
            "y": 1224
          },
          "id": 598,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (increase(sql_pg_cluster_v2{col=~\"checkpoint_sync_time_ms|checkpoint_write_time_ms\"}[2m])) / 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Checkpoint time",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 16,
            "w": 12,
            "x": 0,
            "y": 1230
          },
          "id": 758,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"wal_lsn_bytes\", server=\"PROD\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Current WAL LSN",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"flush_lsn_bytes\", server=\"PROD\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL PERSISTED (flush)",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"replay_lsn_bytes\", server=\"PROD\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL APPLIED (replay)",
              "range": true,
              "refId": "C",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"sent_lsn_bytes\", server=\"PROD\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL SENT",
              "range": true,
              "refId": "D",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"write_lsn_bytes\", server=\"PROD\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL RECEIVED (write)",
              "range": true,
              "refId": "E",
              "useBackend": false
            }
          ],
          "title": "Replication: WAL location - PROD",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 16,
            "w": 12,
            "x": 12,
            "y": 1230
          },
          "id": 759,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"wal_lsn_bytes\", server=\"DR\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Current WAL LSN",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"flush_lsn_bytes\", server=\"DR\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL PERSISTED (flush)",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"replay_lsn_bytes\", server=\"DR\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL APPLIED (replay)",
              "range": true,
              "refId": "C",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"sent_lsn_bytes\", server=\"DR\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL SENT",
              "range": true,
              "refId": "D",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=\"write_lsn_bytes\", server=\"DR\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "Last WAL RECEIVED (write)",
              "range": true,
              "refId": "E",
              "useBackend": false
            }
          ],
          "title": "Replication: WAL location - DR",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "string"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 1246
          },
          "id": 761,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=~\"flush_lag_seconds|replay_lag_seconds|write_lag_seconds\", server=\"PROD\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Replication: Lag - PROD",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "string"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 1246
          },
          "id": 762,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PC3E95692D54ABCC0"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col) (sql_pg_replication_v2{col=~\"flush_lag_seconds|replay_lag_seconds|write_lag_seconds\", server=\"DR\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Replication: Lag - DR",
          "type": "timeseries"
        }
      ],
      "title": "SLRU, Checkpoints, Replication",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 572,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "description": "Basic CPU info",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 1010
          },
          "id": 784,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "uid": "$datasource"
              },
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": " avg by (node, mode) (rate(node_cpu_seconds_total{mode!=\"idle\", node=~\".*db.*\"}[1m]))",
              "format": "time_series",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{node}} | {{mode}}",
              "range": true,
              "refId": "B",
              "step": 240,
              "useBackend": false
            }
          ],
          "title": "CPU Utilization",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 1010
          },
          "id": 580,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, database_name) (increase(sql_pg_dbstats_v2{col=~\"blocks_hit_bytes|blocks_read_bytes\", database_name=\"aisprod-bg2\"}[2m])) / 120",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Bytes read from cache and from filesysten",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 1037
          },
          "id": 829,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(datname) (increase(pg_stat_database_tup_returned[1m]))",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Databases tuples returned PER MINUTE",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 1037
          },
          "id": 655,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, database_name) (increase(sql_pg_dbstats_v2{col=~\"transactions_committed|transactions_rolled_back\"}[2m])) / 2",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{col}} | {{database_name}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Database transactions PER MINUTE",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 1049
          },
          "id": 565,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Last *",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, database_name) (sql_pg_dbstats_v2{col=~\"total_backends\", database_name=\"aisprod-bg2\"})",
              "fullMetaSearch": false,
              "hide": true,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(datname) (pg_stat_database_numbackends)",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "B",
              "useBackend": false
            }
          ],
          "title": "Database backends",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 1049
          },
          "id": 573,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "max",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Max",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${datasource}"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(col, database_name) (increase(sql_pg_dbstats_v2{col=~\"sessions_established|sessions_abandoned|sessions_fatal|sessions_killed\", database_name=\"aisprod-bg2\"}[2m])) / 2",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "{{col}}",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Sessions established PER MINUTE",
          "type": "timeseries"
        }
      ],
      "title": "General database stats",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 770,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 40,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 1,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "Bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 1011
          },
          "id": 766,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "uid": "$datasource"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "irate(node_disk_read_bytes_total{node=~\"pnrmdbs801|pnrmdbs802\", device=~\"dm-7\"}[1m])",
              "format": "time_series",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{node}} - {{device}}",
              "range": true,
              "refId": "B",
              "step": 240,
              "useBackend": false
            }
          ],
          "title": "Read throughput",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 40,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 1,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "Bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 1011
          },
          "id": 767,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "uid": "$datasource"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "irate(node_disk_written_bytes_total{node=~\"pnrmdbs801|pnrmdbs802\", device=~\"dm-7\"}[1m])",
              "format": "time_series",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{node}} - {{device}}",
              "range": true,
              "refId": "B",
              "step": 240,
              "useBackend": false
            }
          ],
          "title": "Write throughput",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 40,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "iops"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 1019
          },
          "id": 768,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "uid": "$datasource"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "rate(node_disk_reads_completed_total{node=~\"pnrmdbs801|pnrmdbs802\", device=~\"dm-7\"}[1m])",
              "format": "time_series",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{node}} - {{device}}",
              "range": true,
              "refId": "B",
              "step": 240,
              "useBackend": false
            }
          ],
          "title": "Read IO",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 40,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "iops"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 1019
          },
          "id": 769,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "maxHeight": 600,
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "datasource": {
                "uid": "$datasource"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "rate(node_disk_writes_completed_total{node=~\"pnrmdbs801|pnrmdbs802\", device=~\"dm-7\"}[1m])",
              "format": "time_series",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{node}} - {{device}}",
              "range": true,
              "refId": "B",
              "step": 240,
              "useBackend": false
            }
          ],
          "title": "Write IO",
          "type": "timeseries"
        }
      ],
      "title": "DB physical IO",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 773,
      "panels": [
        {
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 25,
            "w": 13,
            "x": 0,
            "y": 66846
          },
          "id": 772,
          "options": {
            "alertInstanceLabelFilter": "",
            "alertName": "",
            "dashboardAlerts": false,
            "groupBy": [],
            "groupMode": "default",
            "maxItems": 50,
            "showInactiveAlerts": false,
            "sortOrder": 5,
            "stateFilter": {
              "error": true,
              "firing": true,
              "noData": false,
              "normal": false,
              "pending": true
            },
            "viewMode": "list"
          },
          "pluginVersion": "11.5.2",
          "title": "Alerts",
          "type": "alertlist"
        }
      ],
      "title": "Alerts",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 765,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 60288
          },
          "id": 763,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true,
              "sortBy": "Last *",
              "sortDesc": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "code",
              "expr": "avg by(device) (node_filesystem_avail_bytes{fstype=~\"nfs|nfs4\", device!~\".*aisprod.*\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "NFS Available storage",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PC3E95692D54ABCC0"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "{mountpoint=\"/\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/backup-storage\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/boot\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/boot\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/boot\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/boot\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/boot\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/boot\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/boot\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/boot\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/boot\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/boot\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/boot/efi\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/home\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/home\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/home\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/home\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/home\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/home\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/home\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/home\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/home\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/home\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/hvr\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/hvr\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/tmp\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/tmp\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/tmp\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/tmp\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/var\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/var\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/var\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/var\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/var\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/var\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/var\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/var\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/var\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/var\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/var/lib\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/var/lib/etcd\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/var/lib/etcd\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/var/lib/etcd\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/411887a2-b39b-4e35-8055-d01dbc1cfbd6/volume-subpaths/streaming-jmx-exporter-config/streaming-platform/1\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/411887a2-b39b-4e35-8055-d01dbc1cfbd6/volume-subpaths/streaming-log-config/streaming-platform/0\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/48cbb7af-2591-4f17-8fe2-bce19ba2cb01/volume-subpaths/streaming-jmx-exporter-config/streaming-platform/1\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/48cbb7af-2591-4f17-8fe2-bce19ba2cb01/volume-subpaths/streaming-log-config/streaming-platform/0\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/830bfdcd-d3ef-4ea2-a922-080aa6bd2a13/volume-subpaths/streaming-jmx-exporter-config/streaming-platform/1\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/830bfdcd-d3ef-4ea2-a922-080aa6bd2a13/volume-subpaths/streaming-log-config/streaming-platform/0\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/99e96d47-3827-4216-9a04-6f0877b3d3e2/volume-subpaths/telegraf-config-volume/monitoring-collector/0\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/lib/kubelet/pods/d0d025ad-3875-4ff5-9c40-49ab15e02576/volume-subpaths/telegraf-config-volume/monitoring-collector/0\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/var/log\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/var/log\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/var/log\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/var/log/audit\", node=\"pnrmdbs802\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblbak801g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblcsdmon801g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblmst801g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblmst802g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblmst803g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblpgcsd801g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblpgcsd802g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor801g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor802g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor803g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor804g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor805g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor806g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor807g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor808g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor809g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pblwor810g\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pnrmdbs801\"}",
                      "{mountpoint=\"/var/tmp\", node=\"pnrmdbs802\"}"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": []
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 60288
          },
          "id": 764,
          "interval": "1m",
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "/var/lib"
              }
            ]
          },
          "pluginVersion": "11.5.2",
          "targets": [
            {
              "disableTextWrap": false,
              "editorMode": "builder",
              "exemplar": false,
              "expr": "sum by(mountpoint, node) (node_filesystem_avail_bytes{fstype!~\"tmpfs|nfs|nfs4|fuse.s3fs\", mountpoint=~\"/|/home|/var/lib\", node=~\"pblwor804g|pblwor807g|pblwor808g|pblwor810g|pblwor805g|pblwor806g|pblwor802g|pblwor809g|pblwor801g|pblwor803g\"})",
              "format": "table",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": true,
              "legendFormat": "__auto",
              "range": false,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Application nodes storage",
          "transformations": [
            {
              "id": "groupingToMatrix",
              "options": {
                "columnField": "mountpoint",
                "rowField": "node",
                "valueField": "Value"
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "Available storage",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 753,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 30,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 0,
            "y": 318108
          },
          "id": 751,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(instance) (hikaricp_connections{container=\"ais-custom-crm-api\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "CRM API connections per instance",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 30,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sum(hikaricp_connections{container=\"ais-custom-crm-api\"})"
                },
                "properties": [
                  {
                    "id": "custom.stacking",
                    "value": {
                      "group": "A",
                      "mode": "none"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 12,
            "x": 12,
            "y": 318108
          },
          "id": 752,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(hikaricp_connections{container=\"ais-custom-crm-api\"})",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Total connections (not stacked)",
              "range": true,
              "refId": "A",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(hikaricp_connections_active{container=\"ais-custom-crm-api\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Active connections (stacked)",
              "range": true,
              "refId": "B",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(hikaricp_connections_idle{container=\"ais-custom-crm-api\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Idle connections (stacked)",
              "range": true,
              "refId": "C",
              "useBackend": false
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum(hikaricp_connections_pending{container=\"ais-custom-crm-api\"})",
              "fullMetaSearch": false,
              "hide": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "Pending connections (stacked)",
              "range": true,
              "refId": "D",
              "useBackend": false
            }
          ],
          "title": "CRM API connections per state",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 320331
          },
          "id": 756,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "avg by(spring_security_reached_filter_name, ) (rate(spring_security_filterchains_seconds_sum{container=\"ais-custom-crm-api\"}[$__rate_interval]))",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Filterchain time",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 31,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 320331
          },
          "id": 755,
          "interval": "1m",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "PBFA97CFB590B2093"
              },
              "disableTextWrap": false,
              "editorMode": "builder",
              "expr": "sum by(instance, spring_security_reached_filter_name) (rate(spring_security_filterchains_seconds_count{container=\"ais-custom-crm-api\"}[1m]))",
              "fullMetaSearch": false,
              "includeNullMetadata": true,
              "instant": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A",
              "useBackend": false
            }
          ],
          "title": "Filterchain count",
          "type": "timeseries"
        }
      ],
      "title": "CRM API <â€“> DB connections",
      "type": "row"
    }
  ],
  "preload": false,
  "refresh": "1m",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "Platform Monitoring Prometheus",
          "value": "PC3E95692D54ABCC0"
        },
        "includeAll": false,
        "label": "Cloud",
        "name": "datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "^(?!.*k8s).*$",
        "type": "datasource"
      },
      {
        "current": {
          "text": "",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "label_values(up{job=\"sql-exporter-service\"},cluster)",
        "includeAll": false,
        "label": "Cluster",
        "name": "cluster",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(up{job=\"sql-exporter-service\"},cluster)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "text": "",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "label_values(sql_pg_db_size,host)",
        "includeAll": false,
        "name": "hostname",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(sql_pg_db_size,host)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "label_values(sql_pg_db_size,datname)",
        "includeAll": true,
        "label": "Database name",
        "multi": true,
        "name": "datname",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(sql_pg_db_size,datname)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "baseFilters": [],
        "datasource": {
          "type": "prometheus",
          "uid": "PC3E95692D54ABCC0"
        },
        "filters": [],
        "name": "Filters",
        "type": "adhoc"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "1m",
      "5m"
    ]
  },
  "timezone": "browser",
  "title": "NRM Health Monitoring final",
  "uid": "d78148329b628f4f4712c53227877e73eda1964d",
  "version": 117,
  "weekStart": ""
}